{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,kq2C,6DCAA,muZ,6DCAA,oR,6DCAA,25D,6DCAA,wsE,6DCAA,igC,6DCAA,kqE,4DCAA,moB,6DCAA,uxH,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,ulB,6DCAA,gyK,6DCAA,w4F,6DCAA,k6B,2DCAA,o2B,6DCAA,s9uC,6DCAA,yP,6DCAA,m7B,6DCAA,6iB,6DCAA,45E,6DCAA,0sC,6DCAA,m7lB,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,q9E,6DCAA,0pE,4DCAA,w9B,6DCAA,ue,6DCAA,4a,6DCAA,g6E,6DCAA,we,6DCAA,quC,6DCAA,8S,6DCAA,2K,6DCAA,47pD,6DCAA,47uC,6DCAA,s1I,6DCAA,uS,6DCAA,2pO,6DCAA,u6C,4DCAA,6hD,6DCAA,8H,6DCAA,qvM,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,24B,6DCAA,ijM,4DCAA,y5C,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,28E,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,0qE,6DCAA,6e,6DCAA,0J,6DCAA,wtH,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,woB,6DCAA,iE,6DCAA,qzG,6DCAA,ghE,6DCAA,8hB,6DCAA,8H,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,8U,6DCAA,iR,6DCAA,0/I,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,w3V,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,o0L,6DCAA,q4F,6DCAA,qoG,6DCAA,+tK,6DCAA,oxD,6DCAA,0xE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,0kB,6DCAA,8iB,6DCAA,q1I,6DCAA,8kO,4DCAA,62G,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,u9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,0T,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,gsD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,slB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,+mC,6DCAA,g7B,6DCAA,u0B,6DCAA,ggC,6DCAA,+3B,6DCAA,iuC,6DCAA,o3B,6DCAA,ogC,6DCAA,88B,6DCAA,g3B,6DCAA,soC,6DCAA,ytC,6DCAA,0pC,6DCAA,k8B,6DCAA,qpC,6DCAA,qnD,6DCAA,qiC,6DCAA,m9B,4DCAA,s6B,6DCAA,koC,6DCAA,s7B,6DCAA,ioC,6DCAA,o3B,6DCAA,qrB,6DCAA,uoB,6DCAA,2hB,6DCAA,2iB,6DCAA,2nB,6DCAA,yjB,6DCAA,6sB,6DCAA,qsB,6DCAA,uuB,6DCAA,utB,6DCAA,8vB,6DCAA,ovB,6DCAA,ixB,6DCAA,2vB,6DCAA,gwC,6DCAA,i8B,6DCAA,w0B,4DCAA,izB,6DCAA,o3B,6DCAA,klB,6DCAA,0uB,6DCAA,yxB,6DCAA,k+B,6DCAA,6lC,6DCAA,01B,6DCAA,6tC,6DCAA,wyB,6DCAA,2uB,6DCAA,isB,6DCAA,mqB,6DCAA,q/B,4DCAA,ktB,6DCAA,6pB,6DCAA,8/B,6DCAA,84B,6DCAA,ovB,6DCAA,woB,6DCAA,iqB,6DCAA,kpB,6DCAA,k0B,4DCAA,ynB,6DCAA,4sB,4DCAA,wwC,6DCAA,22B,6DCAA,gwB,6DCAA,ixB,6DCAA,knB,6DCAA,wiC,6DCAA,igC,6DCAA,kiD,6DCAA,+xB,6DCAA,64E,6DCAA,0hC,6DCAA,+3B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,+8B,6DCAA,myB,6DCAA,kqB,4DCAA,krD,6DCAA,s2B,6DCAA,8uB,6DCAA,+oC,6DCAA,0zB,6DCAA,y5B,6DCAA,wtB,6DCAA,w2B,6DCAA,yzB,6DCAA,i2B,6DCAA,m3B,6DCAA,u7B,4DCAA,wgC,4DCAA,24B,6DCAA,+9C,4DCAA,y+B,6DCAA,mgC,6DCAA,k4B,4DCAA,i4C,4DCAA,8rB,6DCAA,svB,6DCAA,ogB,6DCAA,yoB,6DCAA,61C,6DCAA,6hB,6DCAA,qvB,6DCAA,07B,6DCAA,gvB,6DCAA,i8B,4DCAA,k6B,6DCAA,2f,6DCAA,+4B,6DCAA,ikC,6DCAA,qpB,6DCAA,wuB,6DCAA,gmB,6DCAA,6xL,6DCAA,68B,6DCAA,o8C,6DCAA,o4B,6DCAA,wtC,6DCAA,ktC,6DCAA,y9B,6DCAA,2oB,6DCAA,uwB,4DCAA,2kC,6DCAA,m6B,2DCAA,0uB,4DCAA,inC,4DCAA,q7B,6DCAA,2tB,6DCAA,k5B,6DCAA,0nB,6DCAA,6qB,6DCAA,4uB,4DCAA,4hB,6DCAA,u6B,6DCAA,g3D,4DCAA,6mD,6DCAA,y4C,6DCAA,6lC,6DCAA,8wB,6DCAA,86Q,6DCAA,07V,6DCAA,uN,6DCAA,2hf,YCAAC,EAAOC,QAAU,CAAC,oBAAoB,CAAC,MAAQ,CAAC,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,6HAA6H,CAAC,UAAY,CAAC,0GAA0G,mBAAmB,CAAC,wHAAwH,CAAC,UAAY,CAAC,wHAAwH,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,gIAAgI,mBAAmB,CAAC,oJAAoJ,CAAC,UAAY,CAAC,4HAA4H,mBAAmB,CAAC,0IAA0I,CAAC,UAAY,CAAC,8GAA8G,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,mHAAmH,mBAAmB,CAAC,iIAAiI,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,2HAA2H,CAAC,UAAY,CAAC,6HAA6H,mBAAmB,CAAC,2IAA2I,CAAC,UAAY,CAAC,uGAAuG,mBAAmB,CAAC,qHAAqH,CAAC,UAAY,CAAC,2GAA2G,mBAAmB,CAAC,yHAAyH,CAAC,UAAY,CAAC,0GAA0G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AU,OAAQ,SAE/DC,YAAa,CACTC,IAAK,kwUACLC,IAAK,s6JACLC,KAAM,wyOAGVC,WAAY,CACRC,MAAO,CACH,YACA,aACA,cACA,YACA,gBACA,aACA,2BACA,qBACA,cAEJC,MAAO,CACH,cACA,YACA,YACA,YACA,aACA,YACA,yBACA,+BACA,eACA,iBACA,iBACA,yBACA,iBACA,aACA,eAEJC,MAAO,CACH,aACA,YACA,YACA,kBACA,aACA,iBACA,cACA,aACA,eAEJC,SAAU,CACN,WACA,WACA,WACA,YACA,6BACA,aACA,WACA,WACA,gBACA,sCACA,kBACA,0CACA,8CACA,sBAEJC,IAAK,CACD,mBAEJC,MAAO,CACH,iDACA,4BAEJC,QAAS,CACL,kBACA,mBACA,+BACA,oBACA,+BAEJC,aAAc,CACV,gCACA,oDAIRC,UAAW,CACP,GAAM,UACN,QAAS,UACT,QAAS,eACT,QAAS,aACT,QAAS,YACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,UACT,QAAS,QACT,QAAS,UACT,QAAS,WACT,MAAS,wBACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,QACT,SAAU,WACV,QAAS,WACT,QAAS,UACT,GAAM,QACN,QAAS,SACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,mBACT,QAAS,WACT,QAAS,WACT,QAAS,MACT,QAAS,UACT,SAAU,mBACV,QAAS,MACT,QAAS,QACT,QAAS,WACT,QAAS,SACT,QAAS,gBACT,QAAS,WACT,QAAS,aACT,QAAS,SACT,QAAS,QACT,QAAS,gBACT,QAAS,iBACT,QAAS,SACT,QAAS,aACT,QAAS,kBACT,QAAS,UACT,QAAS,mBACT,QAAS,SACT,QAAS,wBACT,QAAS,YACT,SAAU,SACV,QAAS,SACT,QAAS,UACT,SAAU,QACV,QAAS,QACT,QAAS,aACT,QAAS,cACT,QAAS,QACT,aAAc,yBACd,QAAS,kBACT,QAAS,UACT,QAAS,YACT,QAAS,QACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,SAAU,UACV,QAAS,SACT,QAAS,aACT,QAAS,sBACT,Q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,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,MAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,MAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IACtkF,mBAAsB,CAAC,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,MAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IACp7E,kBAAqB,CAAC,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,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,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE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,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,MAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK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,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG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AK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,SAAS,EAAE,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,GAAK,EAAE,QAAQ,GAAG,QAAQ,GAAG,GAAK,QAAuF,KAAnD,OAAsBoyB,GAA6B,6B,iBCArvB,IAAIvyB,EAAM,CACT,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,IACA,KAED,UAAW,CACV,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,KAED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","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/account_settings_modal.html","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_account_password.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item_modal.html","webpack://xabber.web/./templates/accounts/delete_files_media_gallery.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item_modal.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/single_account_settings_modal.html","webpack://xabber.web/./templates/accounts/status_message_input_widget.html","webpack://xabber.web/./templates/accounts/token_item_modal.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/unregister_account.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_devices_item.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/fingerprints_devices.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/setting_language_radio_input.html","webpack://xabber.web/./templates/base/setting_radio_input.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/settings_modal.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_content_placeholder.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/chats/unread_marker.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-cancel.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/account.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/address.html","webpack://xabber.web/./templates/svg/alarm-bell.html","webpack://xabber.web/./templates/svg/alert-circle.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/birthday.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/bug.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/camera.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chat.html","webpack://xabber.web/./templates/svg/check-circle.html","webpack://xabber.web/./templates/svg/check.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circle-slice-1.html","webpack://xabber.web/./templates/svg/circle-slice-2.html","webpack://xabber.web/./templates/svg/circle-slice-3.html","webpack://xabber.web/./templates/svg/circle-slice-4.html","webpack://xabber.web/./templates/svg/circle-slice-5.html","webpack://xabber.web/./templates/svg/circle-slice-6.html","webpack://xabber.web/./templates/svg/circle-slice-7.html","webpack://xabber.web/./templates/svg/circle-slice-8.html","webpack://xabber.web/./templates/svg/circles-outline.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/client-outline.html","webpack://xabber.web/./templates/svg/client.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/cloud.html","webpack://xabber.web/./templates/svg/contact-add.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/database-lock.html","webpack://xabber.web/./templates/svg/database.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/description.html","webpack://xabber.web/./templates/svg/device-cellphone.html","webpack://xabber.web/./templates/svg/device-console.html","webpack://xabber.web/./templates/svg/device-desktop.html","webpack://xabber.web/./templates/svg/device-tablet.html","webpack://xabber.web/./templates/svg/device-web.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/email.html","webpack://xabber.web/./templates/svg/expires.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/id.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/information.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/invite.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/job.html","webpack://xabber.web/./templates/svg/key-variant.html","webpack://xabber.web/./templates/svg/key.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/lock-alert.html","webpack://xabber.web/./templates/svg/lock-check.html","webpack://xabber.web/./templates/svg/lock-cross.html","webpack://xabber.web/./templates/svg/lock-open.html","webpack://xabber.web/./templates/svg/lock-question.html","webpack://xabber.web/./templates/svg/lock.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/security.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/star-face.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/status.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/trash.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/web-cancel.html","webpack://xabber.web/./templates/svg/web.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit_modal.html","webpack://xabber.web/./templates/vcard/vcard_modal.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./xmls/background-images.xml","webpack://xabber.web/./xmls/background-patterns.xml","webpack://xabber.web/./sounds/attention/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/dialtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/notifications/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/ringtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/system/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/sounds.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/./templates/ sync ^\\.\\/.*\\.json$","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column settings-column noselect\\\">\\n            <div class=\\\"settings-account-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <div class=\\\"name one-line\\\"></div>\\n                <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n                <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                        <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                        <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                        <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                        <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                        <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                        <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                        <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                        <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                        <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                        <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                        <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                        <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                        <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                        <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                        <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                        <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                        <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n                <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n                    <label class=\\\"field-value\\\">\\n                        <input type=\\\"checkbox\\\">\\n                        <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n                <div class=\\\"picture-wrap\\\">\\n                    <div class=\\\"avatar-wrap\\\">\\n                        <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                            <img/>\\n                            <input type=\\\"file\\\"/>\\n                            <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                                <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-selfie property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-choose-image property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                                </div>\\n                            </ul>\\n                            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                            </svg>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"name one-line\\\"></div>\\n                <div class=\\\"jid one-line\\\"></div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n                    <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n                    <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"devices-wrap hidden\\\">\\n                <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                    <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                    <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                    <div class=\\\"device-encryption-warning-label\\\"></div>\\n                </div>\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                            <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                    <div class=\\\"orphaned-fingerprints hidden\\\">\\n                        <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                        <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab settings-deletion-button delete-account\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column settings-column noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n                <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n                <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant btn-select-files hidden\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n                    </div>\\n                </ul>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content details-panel\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                        <div class=\\\"settings-tabs-wrap\\\">\\n                            <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"status-wrap setting\\\"></div>\\n                            <div class=\\\"status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"vcard\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"block-list-view-wrap\\\">\\n                        <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tabs-wrap\\\">\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                            <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                                <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                        <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                            <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"blocklist-info\\\">\\n                                <div class=\\\"blocklist-wrap\\\">\\n                                    <div class=\\\"buttons-wrap\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                        <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                    </div>\\n                                    <div class=\\\"blocked-items\\\">\\n                                        <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                        <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                            <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"groups-info\\\">\\n                                <div class=\\\"groups-wrap\\\">\\n                                    <div class=\\\"groups\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"server-info\\\">\\n                                <div class=\\\"capabilities-wrap\\\">\\n                                    <div class=\\\"capabilities\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                        <div class=\\\"color-scheme-wrap\\\">\\n                            <div class=\\\"account-color\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                            <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                            <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                            <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                            <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                            <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                            <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                            <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                            <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                            <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                            <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                            <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                            <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                            <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                            <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                            <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                            <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                            <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                        <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                        </div>\\n                        <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                            <div class=\\\"property-variant btn-manage-devices\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"property-variant btn-purge-keys\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                            </div>\\n                        </ul>\\n                        <div class=\\\"omemo-settings-wrap\\\">\\n                            <div class=\\\"settings\\\">\\n                                <div class=\\\"setting-wrap omemo-enable\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                                    <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"setting-wrap send-chat-states\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                                    <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                        <div class=\\\"device-information-trust-text-wrap\\\">\\n                            <div class=\\\"device-information-trust-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-wrap\\\">\\n                            <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                                <div class=\\\"device-information-item device-information-status\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-last-seen\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-client\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-ip\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-expires\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                                <div class=\\\"device-information-item device-information-device-id\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span class=\\\"original-state\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</span>\\n        <span class=\\\"success-state hidden\\\">{[print(xabber.getString(\\\"password_changed_success\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content original-state\\\">\\n        <div class=\\\"change-password-fields\\\">\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_old_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_new_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key-variant\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-change btn-flat btn-main original-state\\\" disabled>{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel btn-finish-change success-state hidden\\\">{[print(xabber.getString(\\\"ok\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel original-state\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message input-glow\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}}</div>\\n    </div>\\n    {[if (is_omemo) {]}\\n    <div class=\\\"device-encryption one-line active is-own\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"media_gallery_delete_files_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"deletion-variants no-select\\\">\\n            <div class=\\\"delete-files-text-info\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_info_text\\\"))]}</div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"15\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-1\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_15_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"25\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-2\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_25_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"50\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-4\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_50_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"100\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-8\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_100_percent\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"media-gallery-delete-items-wrap hidden\\\">\\n            <div class=\\\"delete-files-preview-wrap media-gallery-items-wrap\\\">\\n                <div class=\\\"delete-files-text no-select\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_preview_text\\\"))]}</div>\\n                <div data-value=\\\"image\\\" class=\\\"setting-name header-setting no-select delete-files-images\\\">\\n                    {[print(xabber.getString(\\\"images\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-image hidden grid delete-files-images delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"video\\\" class=\\\"setting-name header-setting no-select delete-files-videos\\\">\\n                    {[print(xabber.getString(\\\"videos\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-video hidden grid delete-files-videos delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"voice\\\" class=\\\"setting-name header-setting no-select delete-files-voices\\\">\\n                    {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-file hidden voice delete-files-voices delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"file\\\" class=\\\"setting-name header-setting no-select delete-files-files\\\">\\n                    {[print(xabber.getString(\\\"files\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-voice hidden file delete-files-files delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"no-files hidden\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-confirm btn-flat btn-main\\\">{[print(xabber.getString(\\\"delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"account-info-wrap\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <!--<div class=\\\"status\\\"></div>-->\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"nickname-wrap\\\">\\n            <div class=\\\"nickname one-line\\\"></div>\\n        </div>\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"storage-usages\\\">\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-images hidden\\\" data-media-type=\\\"image\\\" data-header-text='{[print(xabber.getString(\\\"images\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"image\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_images_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-videos hidden\\\" data-media-type=\\\"video\\\" data-header-text='{[print(xabber.getString(\\\"videos\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-video\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_videos_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-voices hidden\\\" data-media-type=\\\"voice\\\" data-header-text='{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-audio\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_voice_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-files hidden\\\" data-media-type=\\\"file\\\" data-header-text='{[print(xabber.getString(\\\"files\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_files_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-avatars\\\" data-media-type=\\\"avatars\\\" data-header-text='{[print(xabber.getString(\\\"avatars\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_avatars_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab show-deletion settings-deletion-button\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"media-gallery-items-wrap hidden\\\">\\n    <div class=\\\"gallery-sticky-buttons\\\">\\n        <i class=\\\"btn-back-gallery sticky-item mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-close-selection sticky-item mdi mdi-24px mdi-close\\\"></i>\\n        <div class=\\\"sticky-item gallery-selection-head\\\"></div>\\n        <i class=\\\"btn-delete-selection sticky-item mdi mdi-24px mdi-delete\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'; this.onerror = null;\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{created_at}}</span>\\n        </div>\\n        {[if (duration && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\"/>\\n        <label></label>\\n    </div>\\n    {[if (download_only){]}\\n        <div class=\\\"btn-download btn-more\\\">\\n            <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n                <i class=\\\"mdi mdi-24px mdi-download\\\"></i>\\n            </a>\\n        </div>\\n    {[} else {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n    {[}]}\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"\\n<div class=\\\"left-column settings-column noselect\\\">\\n    <div class=\\\"settings-account-head\\\">\\n        <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n        <div class=\\\"name one-line\\\"></div>\\n        <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n        <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n        </ul>\\n        <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n            <label class=\\\"field-value\\\">\\n                <input type=\\\"checkbox\\\">\\n                <span class=\\\"lever\\\"></span>\\n            </label>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <img/>\\n                    <input type=\\\"file\\\"/>\\n                    <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                        <div class=\\\"btn-emoji-panel property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-selfie property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-choose-image property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                        </div>\\n                    </ul>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"name one-line\\\"></div>\\n        <div class=\\\"jid one-line\\\"></div>\\n    </div>\\n    <div class=\\\"settings-tabs-wrap\\\">\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n            <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n            <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"devices\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"right-column settings-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n        <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-select-files hidden\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}' class=\\\"settings-block-wrap devices\\\">\\n                <div class=\\\"devices-wrap hidden\\\">\\n                    <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                        <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                        <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                        <div class=\\\"device-encryption-warning-label\\\"></div>\\n                    </div>\\n                    <div class=\\\"tokens-wrap\\\">\\n                        <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                        <div class=\\\"current-token-wrap\\\">\\n                            <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                            <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                                <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                        <div class=\\\"all-sessions-wrap\\\">\\n                            <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"orphaned-fingerprints hidden\\\">\\n                            <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                            <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                <div class=\\\"settings-tabs-wrap\\\">\\n                    <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"status-wrap setting\\\"></div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"vcard\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-list-view-wrap\\\">\\n                <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tabs-wrap\\\">\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                    <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                        <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                    <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"blocklist-info\\\">\\n                        <div class=\\\"blocklist-wrap\\\">\\n                            <div class=\\\"buttons-wrap\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                            </div>\\n                            <div class=\\\"blocked-items\\\">\\n                                <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                    <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"groups-info\\\">\\n                        <div class=\\\"groups-wrap\\\">\\n                            <div class=\\\"groups\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"server-info\\\">\\n                        <div class=\\\"capabilities-wrap\\\">\\n                            <div class=\\\"capabilities\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-manage-devices\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-purge-keys\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                <div class=\\\"device-information-trust-text-wrap\\\">\\n                    <div class=\\\"device-information-trust-text\\\"></div>\\n                </div>\\n                <div class=\\\"device-information-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                        <div class=\\\"device-information-item device-information-status\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-last-seen\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-client\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-ip\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-expires\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                        <div class=\\\"device-information-item device-information-device-id\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                            <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input input-glow field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        {[if (device && (device.indexOf('Android') > -1 || device.indexOf('iOS') > -1)){]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-cellphone\\\"></svg>\\n        {[} else {]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n        {[}]}\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}} • {[ if (resource_obj) {]}{[print(xabber.getString(\\\"account_state_connected\\\"))]}{[} else {]}{{last_auth}}{[}]}</div>\\n    </div>\\n    <div class=\\\"device-encryption one-line\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n</div>\";","export default \"<div class=\\\"border ground-color-500\\\"></div>\\n<div class=\\\"account-item-avatar-wrap\\\">\\n    <div class=\\\"circle-avatar-wrap\\\">\\n        <div class=\\\"dropdown-button circle-avatar border-color noselect\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"status\\\"></div>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"filter-chats\\\">\\n        <i class=\\\"mdi mdi-filter mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account__toolbar_item__button_filter_chats\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header no-select\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__delete_account_modal_title\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n        <div class=\\\"modal-description-text no-select\\\">{[print(xabber.getString(\\\"settings_account__delete_account_modal_text\\\"))]}</div>\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_1\\\"/>\\n                        <label for=\\\"confirm_unregister_1\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_1\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_2\\\"/>\\n                        <label for=\\\"confirm_unregister_2\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_2\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field password-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"settings_account__delete_account_modal_password_placeholder_text\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                        <div class=\\\"login-form-step-error login-password-error\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"login-confirm-form-step-wrap hidden\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid input-field-jid-borders\\\">\\n                        <input id=\\\"jid\\\" type=\\\"text\\\" name=\\\"jid\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button disabled class=\\\"btn-flat btn-main btn-submit-unregister hidden\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"fingerprint-content\\\">\\n    {[if (svg_icon){]}\\n        <div class=\\\"fingerprint-device-icon\\\">\\n            <svg class=\\\"mdi mdi-72px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        </div>\\n    {[}]}\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"fingerprint-label\\\">\\n            <div class=\\\"value\\\">{{label}}</div>\\n        </div>\\n    </div>\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"device-id\\\">\\n            <div class=\\\"value\\\">{{id}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint device-fingerprints-part\\\">\\n            <div class=\\\"label\\\">\\n                {[if (!edit_setting) {]}\\n                    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__other_fingerprint_label\\\"))]}\\n                {[} else {]}\\n                <span class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</span> {[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}\\n                {[}]}</div>\\n            <div class=\\\"value\\\">{{fingerprint}}</div>\\n        </div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n</div>\\n<div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n    {[if (trust !== null && !error) {]}\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n        <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n            <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_verify_device`))]}</div>\\n        </div>\\n    </div>\\n    <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content bootstrap-dropdown noselect fingerprint-dropdown\\\">\\n        <div data-value=\\\"ignore\\\" class=\\\"property-variant btn-ignore\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n        <div data-value=\\\"trust\\\" class=\\\"property-variant btn-trust\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__device_verification_label\\\"))]}\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n    <div class=\\\"other-device-content\\\">\\n\\n    </div>\\n    <div class=\\\"this-device-content\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"fingerprints-help-text\\\">\\n        {[print(xabber.getString(\\\"omemo__dialog_fingerprints__bottom_help_text\\\"))]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"></div>\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"></audio>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"></video>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"name one-line\\\"></div>\\n    </div>\\n</>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"></path>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"></i>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"<div class=\\\"language-item\\\">\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n    {[ if (progress && progress.text) {]}<div class=\\\"translation-progress\\\">{{progress.text}}</div>{[}]}\\n</div>\";","export default \"<p>\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n</p>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"></div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting idling field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column main-left-column settings-column noselect\\\">\\n            <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n            <div class=\\\"single-account-info-wrap account-settings-panel\\\">\\n                <div class=\\\"single-account-info\\\"></div>\\n            </div>\\n            <div class=\\\"accounts-info-wrap\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n                <div class=\\\"settings-divider\\\"></div>\\n                <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"preferences\\\"))]}</div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__background_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"data_storage\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"database\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"group-private\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"connection\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"debug\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bug\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                </div>\\n                <div class=\\\"settings-tab settings-deletion-button delete-all-accounts\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings__button_quit\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column main-right-column settings-column hidden noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n                <div class=\\\"description\\\"></div>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"appearance\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__appearance_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"chats\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__chats_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"avatars\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"star-face\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}' class=\\\"settings-block-wrap appearance\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                                <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                    <div class=\\\"client-main-color-picker\\\">\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-deep-purple-500 outline-color-deep-purple-500\\\" data-value=\\\"deep-purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-indigo-500 outline-color-indigo-500\\\" data-value=\\\"indigo\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-cyan-500 outline-color-cyan-500\\\" data-value=\\\"cyan\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-amber-500 outline-color-amber-500\\\" data-value=\\\"amber\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-teal-500 outline-color-teal-500\\\" data-value=\\\"teal\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-brown-500 outline-color-brown-500\\\" data-value=\\\"brown\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-grey-500 outline-color-blue-grey-500\\\" data-value=\\\"blue-grey\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-light-green-500 outline-color-light-green-500\\\" data-value=\\\"light-green\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-green-500 outline-color-green-500\\\" data-value=\\\"green\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-color-setting-wrap\\\">\\n                                <div class=\\\"setting settings-color-padding toolbar-color-setting field-wrap\\\">\\n                                    <div class=\\\"selected-color-wrap\\\">\\n                                        <div class=\\\"selected-color-item\\\"></div>\\n                                        <div class=\\\"selected-color-info\\\">\\n                                            <div class=\\\"selected-color-name\\\"></div>\\n                                            <div class=\\\"selected-color-hex\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"setting background radio-button field-wrap\\\">\\n                                    <div class=\\\"field radio-field clickable-field\\\">\\n                                        <form action=\\\"#\\\">\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                    <div class=\\\"current-background-wrap\\\">\\n                                        <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                        <div class=\\\"current-background\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background_effects\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"blur-setting-wrap\\\">\\n                                    <div class=\\\"setting blur-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                            <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"vignetting-setting-wrap\\\">\\n                                    <div class=\\\"setting vignetting-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                            <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"chat_viewer\\\"))]}' class=\\\"settings-block-wrap chats\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                            <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                            <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting idling checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field  checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                    <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting idling-time field-wrap\\\">\\n                                <div class=\\\"idling-time-input\\\">\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input class=\\\"materialize-timer\\\" placeholder='{[print(constants.IDLING_DEFAULT_TIMEOUT)]}' id=\\\"idle_timeout\\\" min=\\\"{[print(constants.IDLING_MINIMAL_TIMEOUT)]}\\\" max=\\\"{[print(constants.IDLING_MAXIMUM_TIMEOUT)]}\\\" value=\\\"{[print(xabber._settings.get('idling_time'))]}\\\" type=\\\"range\\\" name=\\\"idle_timeout\\\">\\n                                        <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-clue\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout_clue\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"avatars\\\"))]}' class=\\\"settings-block-wrap avatars\\\">\\n                        <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                            <div class=\\\"circle-avatar noselect\\\"></div>\\n                            <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                            <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                            <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                            <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                            <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}' class=\\\"settings-block-wrap notifications\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"web-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications_label\\\"))]}</div>\\n                                <div class=\\\"field notifications-lever clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"chats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field private-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab settings-tab-big-icon\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"groupchats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"group-public\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field group-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"calls-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls_label\\\"))]}</div>\\n                                <div class=\\\"field jingle-calls clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"attention-calls\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"alarm-bell\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field call-attention clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}' class=\\\"settings-block-wrap web-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting notifications checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                    <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name volume-setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                            <!--<div class=\\\"setting volume-enable checkbox-setting field-wrap\\\">-->\\n                                <!--<div class=\\\"input-field checkbox-field\\\">-->\\n                                    <!--<input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications_volume_enable\\\"/>-->\\n                                    <!--<label for=\\\"notifications_volume_enable\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume_enable\\\"))]}</label>-->\\n                                <!--</div>-->\\n                            <!--</div>-->\\n                            <div class=\\\"setting volume-setting\\\">\\n                                <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                    <div class=\\\"disabled hidden\\\"></div>\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        <span style=\\\"display: none\\\" class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}' class=\\\"settings-block-wrap chats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting private-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}' class=\\\"settings-block-wrap groupchats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting group-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field group-notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}' class=\\\"settings-block-wrap calls-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field ringtone-field\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field dialtone-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}' class=\\\"settings-block-wrap attention-calls\\\">\\n                        <div class=\\\"settings-subblock-wrap \\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field attention-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                        <div class=\\\"setting load-media checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                                <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting typing-notifications checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                                <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting mapping-service checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                                <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                        <div class=\\\"setting radio-button interface-language-setting\\\">\\n                            <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"toolbar-top\\\">\\n    <div class=\\\"toolbar-item toolbar-logo\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-middle\\\">\\n    <div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n        <span class=\\\"all-msg-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item jingle-calls\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__jingle_calls\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"bell\\\"></svg>\\n        <span class=\\\"mentions-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n    </div>\\n\\n    <div class=\\\"toolbar-item geolocation-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__geolocation_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-compass\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item saved-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__saved_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-bookmark\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"add-something-wrap\\\">\\n        <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n            <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n        </div>\\n\\n        <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n            <div class=\\\"add-variant contact\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant public-groupchat\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant incognito-groupchat\\\">\\n                <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n                </svg>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant account\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    <div class=\\\"accounts-wrap\\\">\\n        <div class=\\\"accounts\\\">\\n            <div class=\\\"toolbar-item settings-modal hidden\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n                <div class=\\\"border\\\"></div>\\n                <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                    <div class=\\\"uploading-emoticons\\\">\\n                    <div class=\\\"preloader-wrapper preloader-20px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"></div>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-unread hidden mdi-chevron-down\\\"><div class=\\\"back-to-unread-counter\\\"></div></i>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-body-content-placeholder-text no-select\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"contact-status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"contact-list forward-chats-list\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"invitation-reason-wrap hidden\\\">\\n        <textarea class=\\\"text-field textarea-glow input-glow account-glow\\\" type=\\\"text\\\" cols=\\\"10\\\" rows=\\\"5\\\" placeholder='{[print(xabber.getString(\\\"invitation_text_placeholder\\\"))]}' id=\\\"invitation_text\\\" name=\\\"invitation_text\\\"></textarea>\\n    </div>\\n    <button class=\\\"btn-flat btn-main btn-invitation-reason\\\">{[print(xabber.getString(\\\"Invitation_reason_button_text\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590 || image_height && image_height < 80 || (1.5 * image_height) < image_width) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" data-width=\\\"{{image_width}}\\\" data-height=\\\"{{image_height}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"\\n     {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]}\\n     {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]}\\n     data-time=\\\"{{timestamp}}\\\"\\n     data-uniqueid=\\\"{{unique_id}}\\\"\\n     {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]}\\n     data-from=\\\"{{from_jid}}\\\"\\n     {[if (device_id) {]} data-device-id=\\\"{{device_id}}\\\" {[}]}\\n>\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}{[ if (device_id) {]}&#013;{[print(xabber.getString('omemo__dialog_fingerprints__label_device_id'))]}: {{device_id}}{[}]}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"not-decrypted-icon mdi-14px\\\" title=\\\"{[print(xabber.getString('omemo__not_verified_message_title'))]}\\\" {[ if (not_verified_device) { ]}data-device-id=\\\"{{not_verified_device}}\\\" {[ } ]} data-activates=\\\"not-verified-tooltip-{{msgid}}\\\">\\n            <svg class=\\\"mdi mdi-14px mdi-svg-template not-verified-icon-svg\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n            <svg class=\\\"mdi mdi-14px mdi-svg-template not-decrypted-icon-svg\\\" data-svgname=\\\"information\\\"></svg>\\n        </div>\\n        <div id=\\\"not-verified-tooltip-{{msgid}}\\\" class=\\\"dropdown-content not-decrypted-tooltip noselect\\\">\\n            <div class=\\\"not-existing-device-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_existing_device_message_tooltip\\\"))]}</div>\\n            <div class=\\\"not-decrypted-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_decrypted_message_tooltip\\\"))]}</div>\\n            <div class=\\\"not-verified-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_verified_message_tooltip\\\"))]}</div>\\n            <button class=\\\"btn-manage-devices btn-flat btn-main text-color-700\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n            <div class=\\\"not-verified-previously-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_verified_previously_message_tooltip\\\"))]}</div>\\n        </div>\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-msg-video-id=\\\"{{video_id}}\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"></i>\\n</div>\";","export default \"<div class=\\\"unread-marker\\\">\\n    <div class=\\\"unread-marker-content no-select\\\">\\n        {{text}}\\n    </div>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <div class=\\\"audio-control-time\\\">\\n        <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n        <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    </div>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n            <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-unmute-dropdown\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-block-wrap\\\">\\n            <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-group-image\\\">\\n                    <input class=\\\"hidden\\\" title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div id=\\\"{{view.cid}}-group-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                    <div class=\\\"btn-emoji-panel property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-selfie property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-choose-image property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n        </div>\\n        <div class=\\\"group-edit-preloader\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-invite-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-leave-wrap\\\">\\n            <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                <svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n            </div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs not-edit bottom-block-tabs\\\">\\n        <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <ul class=\\\"tabs participant-tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-participant-image\\\">\\n                    <input class=\\\"hidden\\\" title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div id=\\\"{{view.cid}}-participant-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                    <div class=\\\"btn-emoji-panel property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-selfie property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-choose-image property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"></path></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files && !is_encrypted))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,4 C7.790861,4 6,5.790861 6,8 C6,10.209139 7.790861,12 10,12 C12.209139,12 14,10.209139 14,8 C14,5.790861 12.209139,4 10,4 M17.5,13 C15,13 13,15 13,17.5 C13,20 15,22 17.5,22 C20,22 22,20 22,17.5 C22,15 20,13 17.5,13 M10,14 C5.58,14 2,15.79 2,18 L2,20 L11.5,20 C11.169935,19.2078439 11,18.3581691 11,17.5 C11.004284,16.3143165 11.3328048,15.1523902 11.95,14.14 C11.32,14.06 10.68,14 10,14 M17.5,14.5 C19.16,14.5 20.5,15.84 20.5,17.5 C20.5,18.06 20.35,18.58 20.08,19 L16,14.92 C16.42,14.65 16.94,14.5 17.5,14.5 M14.92,16 L19,20.08 C18.58,20.35 18.06,20.5 17.5,20.5 C15.84,20.5 14.5,19.16 14.5,17.5 C14.5,16.94 14.65,16.42 14.92,16 Z\\\" id=\\\"mdi:account-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6,17 C6,15 10,13.9 12,13.9 C14,13.9 18,15 18,17 L18,18 L6,18 M15,9 C15,10.6568542 13.6568542,12 12,12 C10.3431458,12 9,10.6568542 9,9 C9,7.34314575 10.3431458,6 12,6 C13.6568542,6 15,7.34314575 15,9 M3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.8954305 20.1045695,3 19,3 L5,3 C3.89,3 3,3.9 3,5 Z\\\" id=\\\"mdi:account-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alarm-bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,18.66 L15,22 L5,22 L5,18.66 C8.09301265,20.4500491 11.9069873,20.4500491 15,18.66 M22,4 C22,2.8954305 21.1045695,2 20,2 C19.69,2 19.39,2.07 19.12,2.21 C18.82,2.36 18.56,2.58 18.36,2.85 C17.9280885,3.46077217 17.873744,4.26171236 18.219194,4.92522914 C18.564644,5.58874591 19.2519508,6.00355658 20,6 L20.24,6 C21.97,10.43 20.66,15.46 17,18.5 C16.68,18.75 16.35,19 16,19.22 L16,21 L17,21 L17,19.74 C20.14,17.5 22,13.86 22,10 C22,8.5 21.72,7 21.17,5.62 C21.69,5.24 22,4.64 22,4 M18,10 C18,12.1217319 17.1571453,14.1565632 15.6568542,15.6568542 C14.1565632,17.1571453 12.1217319,18 10,18 C5.581722,18 2,14.418278 2,10 C2,5.581722 5.581722,2 10,2 C12.1217319,2 14.1565632,2.84285472 15.6568542,4.34314575 C17.1571453,5.84343678 18,7.87826808 18,10 L18,10 Z\\\" id=\\\"mdi:alarm-bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alert-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,13 L11,13 L11,7 L13,7 M13,17 L11,17 L11,15 L13,15 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C14.6521649,22 17.195704,20.9464316 19.0710678,19.0710678 C20.9464316,17.195704 22,14.6521649 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:alert-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,7 C13.11,7 14,6.1 14,5 C14,4.62 13.9,4.27 13.71,3.97 L12,1 L10.29,3.97 C10.1,4.27 10,4.62 10,5 C10,6.1045695 10.8954305,7 12,7 M16.6,17 L15.53,15.92 L14.45,17 C13.15,18.29 10.87,18.3 9.56,17 L8.5,15.92 L7.4,17 C6.75,17.64 5.88,18 4.96,18 C4.23,18 3.56,17.77 3,17.39 L3,22 C3,22.5522847 3.44771525,23 4,23 L20,23 C20.5522847,23 21,22.5522847 21,22 L21,17.39 C20.44,17.77 19.77,18 19.04,18 C18.12,18 17.25,17.64 16.6,17 M18,10 L13,10 L13,8 L11,8 L11,10 L6,10 C4.34314575,10 3,11.3431458 3,13 L3,14.54 C3,15.62 3.88,16.5 4.96,16.5 C5.5,16.5 6,16.3 6.34,15.93 L8.5,13.8 L10.61,15.93 C11.35,16.67 12.64,16.67 13.38,15.93 L15.5,13.8 L17.65,15.93 C18,16.3 18.5,16.5 19.03,16.5 C20.11,16.5 21,15.62 21,14.54 L21,13 C21,11.3431458 19.6568542,10 18,10 Z\\\" id=\\\"mdi:cake-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bug\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,12 L10,12 L10,10 L14,10 M14,16 L10,16 L10,14 L14,14 M20,8 L17.19,8 C16.7389578,7.21773668 16.1167554,6.54767256 15.37,6.04 L17,4.41 L15.59,3 L13.42,5.17 C12.4901518,4.94442551 11.5198482,4.94442551 10.59,5.17 L8.41,3 L7,4.41 L8.62,6.04 C7.88,6.55 7.26,7.22 6.81,8 L4,8 L4,10 L6.09,10 C6.04,10.33 6,10.66 6,11 L6,12 L4,12 L4,14 L6,14 L6,15 C6,15.34 6.04,15.67 6.09,16 L4,16 L4,18 L6.81,18 C7.85,19.79 9.78,21 12,21 C14.22,21 16.15,19.79 17.19,18 L20,18 L20,16 L17.91,16 C17.96,15.67 18,15.34 18,15 L18,14 L20,14 L20,12 L18,12 L18,11 C18,10.66 17.96,10.33 17.91,10 L20,10 L20,8 Z\\\" id=\\\"mdi:bug\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M4,5 L7,5 L9,3 L15,3 L17,5 L20,5 C21.1045695,5 22,5.8954305 22,7 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.8954305,21 2,20.1045695 2,19 L2,7 C2,5.8954305 2.8954305,5 4,5 M12,8 C9.23857625,8 7,10.2385763 7,13 C7,15.7614237 9.23857625,18 12,18 C14.7614237,18 17,15.7614237 17,13 C17,10.2385763 14.7614237,8 12,8 M12,10 C13.6568542,10 15,11.3431458 15,13 C15,14.6568542 13.6568542,16 12,16 C10.3431458,16 9,14.6568542 9,13 C9,11.3431458 10.3431458,10 12,10 Z\\\" id=\\\"mdi:camera\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chat\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.8954305,2 2,2.8954305 2,4 L2,22 L6,18 L20,18 C21.1045695,18 22,17.1045695 22,16 L22,4 C22,2.8954305 21.1045695,2 20,2 M6,9 L18,9 L18,11 L6,11 M14,14 L6,14 L6,12 L14,12 M18,8 L6,8 L6,6 L18,6\\\" id=\\\"mdi:message-text\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.5,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C17.5,22 22,17.5 22,12 C22,6.5 17.5,2 12,2 M10,17 L5,12 L6.41,10.59 L10,14.17 L17.59,6.58 L19,8 L10,17 Z\\\" id=\\\"mdi:check-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"21 7 9 19 3.5 13.5 4.91 12.09 9 16.17 19.59 5.59\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.5, 12) scale(-1, 1) translate(-11.5, -12)\\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C13.93,5 15.68,5.78 16.95,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-1\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-2\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-2\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-3\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,13.93 18.22,15.68 16.95,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-3\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-4\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 L12,5 Z\\\" id=\\\"mdi:circle-slice-4\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-5\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C10.07,19 8.32,18.22 7.05,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-5\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-6\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-6\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-7\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,10.07 5.78,8.32 7.05,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-7\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-8\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,8.13 8.13,5 12,5 M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 Z\\\" id=\\\"mdi:circle-slice-8\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61467749,4.32037814 C8.21824496,5.30257332 8,6.37579974 8,7.5 C8,12.1944204 11.8055796,16 16.5,16 C17.6242003,16 18.6974267,15.781755 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.91703774 4.71884223,5.46909511 8.44481526,4.36788353 L8.61467749,4.32037814 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 L19,10 L19,19 L5,19 L5,5 L14.03,5 C14,4.84 14,4.67 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkbox-blank-badge-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 C16.4647165,9.9944963 14.0055037,7.53528349 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkout-blank-badge\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cloud\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.35,10.03 C18.67,6.59 15.64,4 12,4 C9.11,4 6.6,5.64 5.35,8.03 C2.34,8.36 0,10.9 0,14 C0,17.3137085 2.6862915,20 6,20 L19,20 C20.3260824,20 21.597852,19.4732158 22.5355339,18.5355339 C23.4732158,17.597852 24,16.3260824 24,15 C24,12.36 21.95,10.22 19.35,10.03 Z\\\" id=\\\"mdi:cloud\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/contact-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,14 C12.33,14 7,15.33 7,18 L7,20 L23,20 L23,18 C23,15.33 17.67,14 15,14 M6,10 L6,7.5 L4,7.5 L4,10 L1.5,10 L1.5,12 L4,12 L4,14.5 L6,14.5 L6,12 L8.5,12 L8.5,10 M15,12 C17.209139,12 19,10.209139 19,8 C19,5.790861 17.209139,4 15,4 C12.790861,4 11,5.790861 11,8 C11,10.209139 12.790861,12 15,12 Z\\\" id=\\\"xabber:contact-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database-lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,3 C15.42,3 19,4.79 19,7 C19,9.21 15.42,11 11,11 C6.58,11 3,9.21 3,7 C3,4.79 6.58,3 11,3 M19,12.03 C17.11,12.24 15.57,13.62 15.13,15.43 C13.92,15.79 12.5,16 11,16 C6.58,16 3,14.21 3,12 L3,9 C3,11.21 6.58,13 11,13 C15.42,13 19,11.21 19,9 L19,12.03 M14,17.71 L14,20.71 C13.07,20.9 12.06,21 11,21 C6.58,21 3,19.21 3,17 L3,14 C3,16.21 6.58,18 11,18 C12.06,18 13.07,17.9 14,17.71 M19.5,14 C20.8807119,14 22,15.1192881 22,16.5 L22,17 C22.5522847,17 23,17.4477153 23,18 L23,22 C23,22.5522847 22.5522847,23 22,23 L17,23 C16.4477153,23 16,22.5522847 16,22 L16,18 C16,17.4477153 16.4477153,17 17,17 L17,16.5 C17,15.1192881 18.1192881,14 19.5,14 M19.5,15 C18.6715729,15 18,15.6715729 18,16.5 L18,17 L21,17 L21,16.5 C21,15.6715729 20.3284271,15 19.5,15 Z\\\" id=\\\"mdi:database-lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C7.58,3 4,4.79 4,7 C4,9.21 7.58,11 12,11 C16.42,11 20,9.21 20,7 C20,4.79 16.42,3 12,3 M4,9 L4,12 C4,14.21 7.58,16 12,16 C16.42,16 20,14.21 20,12 L20,9 C20,11.21 16.42,13 12,13 C7.58,13 4,11.21 4,9 M4,14 L4,17 C4,19.21 7.58,21 12,21 C16.42,21 20,19.21 20,17 L20,14 C20,16.21 16.42,18 12,18 C7.58,18 4,16.21 4,14 Z\\\" id=\\\"mdi:database\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L7,17 L7,15 L14,15 M17,13 L7,13 L7,11 L17,11 M17,9 L7,9 L7,7 L17,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:text-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-cellphone\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,20 L7,20 L7,4 L17,4 M17,1 L7,1 C5.89,1 5,1.89 5,3 L5,21 C5,22.1045695 5.8954305,23 7,23 L17,23 C18.1045695,23 19,22.1045695 19,21 L19,3 C19,1.8954305 18.1045695,1 17,1 Z\\\" id=\\\"xabber:cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-console\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M18,12 L18,14 L13,14 L13,12 L18,12 Z M8.4,6 L11.7,9.3 C12.09,9.69 12.09,10.33 11.7,10.72 L8.42,14 L5.59,14 L9.58,10 L5.57,6 L8.4,6 Z\\\" id=\\\"xabber.monitor-console\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-desktop\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,16 L3,16 L3,4 L21,4 M21,2 L3,2 C1.89,2 1,2.89 1,4 L1,16 C1,17.1045695 1.8954305,18 3,18 L10,18 L10,20 L8,20 L8,22 L16,22 L16,20 L14,20 L14,18 L21,18 C22.1045695,18 23,17.1045695 23,16 L23,4 C23,2.8954305 22.1045695,2 21,2 Z\\\" id=\\\"mdi:monitor\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-tablet\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,18 L4,18 L4,6 L20,6 M21,4 L3,4 C1.89,4 1,4.89 1,6 L1,18 C1,19.1045695 1.8954305,20 3,20 L21,20 C22.1045695,20 23,19.1045695 23,18 L23,6 C23,4.8954305 22.1045695,4 21,4 Z\\\" id=\\\"xabber:tablet\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M9.59,6.41 L10.5,7.5 L8,10 L10.5,12.5 L9.59,13.5 L6,10 L9.59,6.41 Z M14.5,6.50152764 L18,10 L14.5,13.5 L13.5,12.5 L16,10 L13.5,7.5 L14.5,6.50152764 Z\\\" id=\\\"xabber.monitor-tag\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,8 L12,13 L4,8 L4,6 L12,11 L20,6 M20,4 L4,4 C2.89,4 2,4.89 2,6 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.1045695,20 22,19.1045695 22,18 L22,6 C22,4.89 21.1,4 20,4 Z\\\" id=\\\"mdi:email\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/expires\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.03,7.39 L20.45,5.97 C20.0000001,5.46 19.55,5 19.04,4.56 L17.62,6 C16.07,4.74 14.12,4 12.0000001,4 C7.0294373,4 3.00000013,8.0294373 3.00000013,13 C3.00000013,17.9705627 7.0294373,22 12.0000001,22 C17.0000001,22 21.0000001,17.97 21.0000001,13 C21.0000001,10.88 20.26,8.93 19.03,7.39 M13,14 L11,14 L11,7 L13,7 L13,14 M15,1 L9,1 L9,3 L15,3 L15,1 Z\\\" id=\\\"mdi:timer\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C8.13400675,2 5,5.13400675 5,9 C5,11.38 6.19,13.47 8,14.74 L8,17 C8,17.5522847 8.44771525,18 9,18 L15,18 C15.5522847,18 16,17.5522847 16,17 L16,14.74 C17.81,13.47 19,11.38 19,9 C19,5.13400675 15.8659932,2 12,2 M9,21 C9,21.5522847 9.44771525,22 10,22 L14,22 C14.5522847,22 15,21.5522847 15,21 L15,20 L9,20 L9,21 Z\\\" id=\\\"mdi:lightbulb\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L11,9 L11,7 L13,7 M13,17 L11,17 L11,11 L13,11 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 Z\\\" id=\\\"mdi:information\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,0.64 L8.23,3 L5,3 L5,5 L2.97,6.29 C2.39,6.64 2,7.27 2,8 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.11,20 22,19.11 22,18 L22,8 C22,7.27 21.61,6.64 21.03,6.29 L19,5 L19,3 L15.77,3 M7,5 L17,5 L17,9.88 L12,13 L7,9.88 M8,6 L8,7.5 L16,7.5 L16,6 M5,7.38 L5,8.63 L4,8 M19,7.38 L20,8 L19,8.63 M8,8.5 L8,10 L16,10 L16,8.5 L8,8.5 Z\\\" id=\\\"mdi:email-newsletter\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,2 L14,2 C15.1045695,2 16,2.8954305 16,4 L16,6 L20,6 C21.1045695,6 22,6.8954305 22,8 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.89,21 2,20.1 2,19 L2,8 C2,6.89 2.89,6 4,6 L8,6 L8,4 C8,2.89 8.89,2 10,2 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L15,14 L15,18 L18,18 L18,14 L19,14 L19,18 L22,18 L22,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"xabber:key-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L17,14 L17,18 L21,18 L21,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"mdi:key\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-alert\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,17 C11.1,17 12,16.1 12,15 C12,13.9 11.1,13 10,13 C8.9,13 8,13.9 8,15 C8,16.1 8.9,17 10,17 M16,8 C17.1,8 18,8.9 18,10 L18,20 C18,21.1 17.1,22 16,22 L4,22 C2.9,22 2,21.1 2,20 L2,10 C2,8.9 2.9,8 4,8 L5,8 L5,6 C5,3.2 7.2,1 10,1 C12.8,1 15,3.2 15,6 L15,8 L16,8 M10,3 C8.3,3 7,4.3 7,6 L7,8 L13,8 L13,6 C13,4.3 11.7,3 10,3 M22,13 L20,13 L20,7 L22,7 L22,13 M22,17 L20,17 L20,15 L22,15 L22,17 Z\\\" id=\\\"mdi:lock-alert\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M15.6,11 L10.47,16.18 L8.4,14.09 L7,15.5 L10.47,19 L17,12.41 L15.6,11 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-cross\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M14.12,11.47 L12,13.59 L9.88,11.47 L8.5,12.86 L10.61,15 L8.5,17.11 L9.91,18.53 L12.03,16.41 L14.12,18.5 L15.5,17.11 L13.43,15 L15.55,12.9 L14.12,11.47 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-cross\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-open\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,1 C15.24,1 13,3.24 13,6 L13,8 L4,8 C2.8954305,8 2,8.8954305 2,10 L2,20 C2,21.1045695 2.8954305,22 4,22 L16,22 C17.11,22 18,21.11 18,20 L18,10 C18,8.8954305 17.1045695,8 16,8 L15,8 L15,6 C15,4.34 16.34,3 18,3 C19.66,3 21,4.34 21,6 L21,8 L23,8 L23,6 C23,3.24 20.76,1 18,1 M10,13 C11.1045695,13 12,13.8954305 12,15 C12,16.11 11.11,17 10,17 C8.8954305,17 8,16.1045695 8,15 C8,13.8954305 8.8954305,13 10,13 Z\\\" id=\\\"mdi:lock-open-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C9.23857625,1 7,3.23857625 7,6 L7,8 L6,8 C4.8954305,8 4,8.8954305 4,10 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,10 C20,8.8954305 19.1045695,8 18,8 L17,8 L17,6 C17,4.67391755 16.4732158,3.40214799 15.5355339,2.46446609 C14.597852,1.5267842 13.3260824,1 12,1 M12,2.9 C13.71,2.9 15.1,4.29 15.1,6 L15.1,8 L8.9,8 L8.9,6 C8.9,4.29 10.29,2.9 12,2.9 M12.19,10.5 C13.13,10.5 13.88,10.71 14.42,11.12 C14.96,11.54 15.23,12.1 15.23,12.8 C15.23,13.24 15.08,13.63 14.79,14 C14.5,14.36 14.12,14.64 13.66,14.85 C13.4,15 13.23,15.15 13.14,15.32 C13.05,15.5 13,15.72 13,16 L11,16 C11,15.5 11.1,15.16 11.29,14.92 C11.5,14.68 11.84,14.4 12.36,14.08 C12.62,13.94 12.83,13.76 13,13.54 C13.14,13.33 13.22,13.08 13.22,12.8 C13.22,12.5 13.13,12.28 12.95,12.11 C12.77,11.93 12.5,11.85 12.19,11.85 C11.92,11.85 11.7,11.92 11.5,12.06 C11.34,12.2 11.24,12.41 11.24,12.69 L9.27,12.69 C9.22,12 9.5,11.4 10.05,11.04 C10.59,10.68 11.3,10.5 12.19,10.5 M11,17 L13,17 L13,19 L11,19 L11,17 Z\\\" id=\\\"mdi:lock-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,17 C13.1045695,17 14,16.1045695 14,15 C14,13.89 13.1,13 12,13 C10.8954305,13 10,13.8954305 10,15 C10,16.1045695 10.8954305,17 12,17 M18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <defs>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </defs>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <use xlink:href=\\\"#path-1\\\"></use>\\n        </mask>\\n        <use id=\\\"mdi:search\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" xlink:href=\\\"#path-1\\\"></use>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/security\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,12 L19,12 C18.47,16.11 15.72,19.78 12,20.92 L12,12 L5,12 L5,6.3 L12,3.19 M12,1 L3,5 L3,11 C3,16.55 6.84,21.73 12,23 C17.16,21.73 21,16.55 21,11 L21,5 L12,1 Z\\\" id=\\\"mdi:security\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/star-face\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2.5 L8.42,8.06 L2,9.74 L6.2,14.88 L5.82,21.5 L12,19.09 L18.18,21.5 L17.8,14.88 L22,9.74 L15.58,8.06 L12,2.5 M9.38,10.5 C10,10.5 10.5,11 10.5,11.63 C10.5,11.9270425 10.3820003,12.2119189 10.1719596,12.4219596 C9.96191885,12.6320003 9.67704247,12.75 9.38,12.75 C8.75,12.75 8.25,12.25 8.25,11.63 C8.25,11 8.75,10.5 9.38,10.5 M14.63,10.5 C15.25,10.5 15.75,11 15.75,11.63 C15.75,12.2485589 15.2485589,12.75 14.63,12.75 C14,12.75 13.5,12.25 13.5,11.63 C13.5,11 14,10.5 14.63,10.5 M9,15 L15,15 C14.4960889,16.2119097 13.3124982,17.0016023 12,17.0016023 C10.6875018,17.0016023 9.50391113,16.2119097 9,15 L9,15 Z\\\" id=\\\"mdi:star-face\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M13.5,7 L12.5,7 L9,13 L12,13 L10.5,17 L11.5,17 L15,11 L12,11 L13.5,7 Z\\\" id=\\\"xabber:status\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/trash\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,4 L15.5,4 L14.5,3 L9.5,3 L8.5,4 L5,4 L5,6 L19,6 M6,19 C6,20.1045695 6.8954305,21 8,21 L16,21 C17.1045695,21 18,20.1045695 18,19 L18,7 L6,7 L6,19 Z\\\" id=\\\"mdi:trash\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.82,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.5 14.46,13 14.4,13.46 C15,12.96 15.72,12.57 16.5,12.32 L16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 L20,12.18 C20.7,12.35 21.35,12.63 21.95,13 C22,12.68 22,12.34 22,12 C22,6.5 17.5,2 12,2 C6.47,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C12.34,22 12.68,22 13,21.95 C12.59,21.29 12.29,20.55 12.13,19.75 C12.09,19.82 12.05,19.89 12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L12.5,16 C12.81,15.25 13.26,14.58 13.82,14 M18.92,8 L15.97,8 C15.6570216,6.76145777 15.1935734,5.56589587 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 L4.26,14 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57862399,18.9316655 6.0448462,17.667719 5.08,16 M8,8 L5.08,8 C6.03885577,6.32721463 7.57479586,5.06148622 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M18.5,14 C16,14 14,16 14,18.5 C14,21 16,23 18.5,23 C21,23 23,21 23,18.5 C23,16 21,14 18.5,14 M18.5,21.5 C16.84,21.5 15.5,20.16 15.5,18.5 C15.5,17.94 15.65,17.42 15.92,17 L20,21.08 C19.58,21.35 19.06,21.5 18.5,21.5 M21.08,20 L17,15.92 C17.42,15.65 17.94,15.5 18.5,15.5 C20.16,15.5 21.5,16.84 21.5,18.5 C21.5,19.06 21.35,19.58 21.08,20 Z\\\" id=\\\"mdi:web-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.36,14 C16.44,13.34 16.5,12.68 16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 C20,12.69 19.9,13.36 19.74,14 M14.59,19.56 C15.19,18.45 15.65,17.25 15.97,16 L18.92,16 C17.96,17.65 16.43,18.93 14.59,19.56 M14.34,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.68 14.43,13.34 14.34,14 M12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L13.91,16 C13.5,17.43 12.83,18.76 12,19.96 M8,8 L5.08,8 C6.03,6.34 7.57,5.06 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57,18.93 6.03,17.65 5.08,16 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M18.92,8 L15.97,8 C15.65,6.75 15.19,5.55 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,2 C6.47,2 2,6.5 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:web\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/xmpp\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,16.4 C9.75,14.09 8,10.54 8,7 C2,5 8,7 2,5 C2,10.65 6.33,15.11 10.55,17.66 C9.38,18.5 8.15,19 7,19 C7,20 7,19 7,20 C8.2,20 10.03,19.46 12,18.46 C13.97,19.46 15.8,20 17,20 C17,19 17,20 17,19 C15.85,19 14.62,18.5 13.45,17.66 C17.66,15.11 22,10.65 22,5 C16,7 22,5 16,7 C16,10.54 14.25,14.09 12,16.4 Z\\\" id=\\\"mdi:xmpp\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"buttons-wrap\\\">\\n    <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n</div>\\n<div class=\\\"vcard-edit-wrap\\\">\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n    <div class=\\\"info-wrap personal-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field first-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n        </div>\\n        <div class=\\\"input-field middle-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n        </div>\\n        <div class=\\\"input-field last-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n        </div>\\n        <div class=\\\"input-field fullname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n    <div class=\\\"info-wrap nickname-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field nickname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n    <div class=\\\"info-wrap birthday-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field birthday\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n    <div class=\\\"info-wrap job-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field org-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n        </div>\\n        <div class=\\\"input-field job-title\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n        </div>\\n        <div class=\\\"input-field org-unit\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n        </div>\\n        <div class=\\\"input-field role\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n    <div class=\\\"info-wrap site-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field url\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field description\\\">\\n            <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field textarea-glow input-glow account-glow\\\" name=\\\"description\\\"></textarea>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n    <div class=\\\"info-wrap phone-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field phone-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n        </div>\\n        <div class=\\\"input-field phone-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n        </div>\\n        <div class=\\\"input-field phone-mobile\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n    <div class=\\\"info-wrap email-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field email-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n        </div>\\n        <div class=\\\"input-field email-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"vcard-wrap\\\">\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","module.exports = {\"background-images\":{\"image\":[{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0293+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A0tXm8gjfMU/U08VDMRGtuI/AAAAAAAAvrI/IQEscTGZyJY/s1920-w1920-h1080-c/IMG_0293%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0660.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wkrGBuk0DoA/Us9JnUoXnTI/AAAAAAAAkTA/yDQexzLKhKY/s1920-w1920-h1080-c/DSC_0660.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071227-4144-PtLomaReef.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1xZqgaRDIec/Tg1dMJq1vBI/AAAAAAAAALc/7m0Tpv2htVc/s1920-w1920-h1080-c/071227-4144-PtLomaReef.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/976865336_a+view+of+queenstown.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-36YdSRh6q9w/TgtZEChvrkI/AAAAAAAJA0M/zVvIUAdwQ3Q/s1920-w1920-h1080-c/976865336_a%2Bview%2Bof%2Bqueenstown.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-MarshallBeach-lightSky.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--L7AhWZit78/TysVss3ThoI/AAAAAAAARho/n2ToQ-2Kw7g/s1920-w1920-h1080-c/GGB-MarshallBeach-lightSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01079+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ePzy0PYNkjY/ToE9F9iPxKI/AAAAAAAAsWg/o7LkkqWEs2o/s1920-w1920-h1080-c/DSC01079%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8492_HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-pnosgcd6G2c/UbheNBeniVI/AAAAAAAAWp0/hSEX3IwAgyI/s1920-w1920-h1080-c/DSC_8492_HDR-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02202012-04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-El8tXEJMqm4/UOD9tk8_rkI/AAAAAAAAkM0/sZP34rwkVsQ/s1920-w1920-h1080-c/02202012-04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100530_120257_0273-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EpsKJMBxb6I/TBpXudG4_PI/AAAAAAABEHk/_knVZZOptTY/s1920-w1920-h1080-c/20100530_120257_0273-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lines.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Ot1wFdQdaqw/UBSl7ewGOkI/AAAAAAAAPd4/3tUkrKTWDgM/s1920-w1920-h1080-c/Lines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DunesEdge.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WbNq4f1kE7Y/Tu9tVtXGCYI/AAAAAAABFWY/N9NL1MKUt4A/s1920-w1920-h1080-c/DunesEdge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2857.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YPiBdTDD5Vo/UpExbztAgWI/AAAAAAAAFg8/8n5CyP4w8Ps/s1920-w1920-h1080-c/DSC_2857.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0513-edited.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CY6T5q8rqmA/UZWyvmYhLYI/AAAAAAAAAw4/Pi0Uy3nq19I/s1920-w1920-h1080-c/DSC_0513-edited.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stuck_04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-fc8aRqsAEzk/U0MjlhykUtI/AAAAAAAJF1s/nRoV1Yk1z2E/s1920-w1920-h1080-c/stuck_04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dandelion_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ExqBtlpobeE/T-aKZZzVcKI/AAAAAAABhl4/jrErtktlcuA/s1920-w1920-h1080-c/Dandelion_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8670434759_91e92fd1ee_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3nqLFWiEm3E/UXXCrC5RBeI/AAAAAAAANoY/8_ktEhLdCLs/s1920-w1920-h1080-c/8670434759_91e92fd1ee_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2049233526_19f97ff57f_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gJmej39yU_c/TgtZECWgTtI/AAAAAAAJFFY/Y0nVr5_Tchg/s1920-w1920-h1080-c/2049233526_19f97ff57f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-firespinning-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-teMxOetSsy0/TwNDboHbM0I/AAAAAAABFao/F9yQHylkRdo/s1920-w1920-h1080-c/RodeoBeach-firespinning-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rF8zodn1xAI/U_yjoZyDgcI/AAAAAAAB-38/U62D7hi4-NU/s1920-w1920-h1080-c/20140204_Iceland_0234_5_6_32bit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6887-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KiRwrTTHEWk/UdFoWqh2bFI/AAAAAAAAXhA/6PIDVYH9nFY/s1920-w1920-h1080-c/DSC_6887-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-beach-rock.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-6_QxmRRnJO8/TwjqsB2kshI/AAAAAAABFZw/__-irT00R2k/s1920-w1920-h1080-c/SealRocks-sunset-beach-rock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7112.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-HWAadtEQKQE/UtTyRxs2u4I/AAAAAAAAOhk/Y3jT0QJtdhQ/s1920-w1920-h1080-c/DSC_7112.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Invitation.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5NKrifl_xpo/UUxwAqoj7nI/AAAAAAAAwGk/82Dkiz_sEaw/s1920-w1920-h1080-c/Invitation.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_7114-Edit-Recovered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-W5qc4LH_lpo/U_yjzHjSpzI/AAAAAAAB-7E/8MQAw4fsEJc/s1920-w1920-h1080-c/_DX_7114-Edit-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8993.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sy3wa9ofb38/UQtPlF6YOQI/AAAAAAAAfXc/9uYpeM68vOc/s1920-w1920-h1080-c/IMGP8993.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/dsc_4194.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-cFySK9YoOOI/SwTDSXWTa2I/AAAAAAABNnY/1VFL3dYXkgA/s1920-w1920-h1080-c/dsc_4194.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/panthercreek_7509-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-JoKkOqJLegk/T7KQORntaBI/AAAAAAABjLg/FbmDYu5k3DY/s1920-w1920-h1080-c/panthercreek_7509-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6464.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-RYt_J-BlGJs/UmBWyVrQZII/AAAAAAAAFAA/9Y9zqjdXQeU/s1920-w1920-h1080-c/DSC_6464.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080820-5209-MakenaLL.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6IrulujJPwU/Tg1d_n1nptI/AAAAAAAAAMc/O4OAV6udX8Y/s1920-w1920-h1080-c/080820-5209-MakenaLL.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5300.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-cn-CS-vxFn4/UtTvqLzjmrI/AAAAAAAAX3Y/OdfK9XhRGeE/s1920-w1920-h1080-c/DSC_5300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080327-4706-JoshuaTreeOasis.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-mwobIYTjtko/Tg1dd90GDjI/AAAAAAAAAL0/M_NjYSMqoG0/s1920-w1920-h1080-c/080327-4706-JoshuaTreeOasis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/217440037_8ca190627e_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EjnJBBcvhrU/TgtZEIVpLlI/AAAAAAAJJ5s/CQK74NolX7E/s1920-w1920-h1080-c/217440037_8ca190627e_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_1184.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lM1sKRbIu7A/T_mdon8mP-I/AAAAAAAAAwc/SJMO-kWHQLY/s1920-w1920-h1080-c/MSU_1184.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HfCYnCbpqww/Us1HNtNz00I/AAAAAAAAkFE/UJChD7bbmm0/s1920-w1920-h1080-c/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonShwabacher.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-gi8-azW5hAQ/UGdSQqk9G_I/AAAAAAAAJto/inIHRwOCy3c/s1920-w1920-h1080-c/TetonShwabacher.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PVK_5178.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-zAuJ1AZC34Y/TrsJH22VV5I/AAAAAAAAEvc/EzBqDb6tQRE/s1920-w1920-h1080-c/PVK_5178.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3824+pe.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QgFnhS9tfuI/U0tzKPZox-I/AAAAAAAAvhg/EjRaa8ETaYM/s1920-w1920-h1080-c/IMG_3824%2Bpe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101016-4858-GrayWhaleGran1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gb7vG0Z6jrU/Tg1gas5e87I/AAAAAAAAAPY/4zsNQt6LotI/s1920-w1920-h1080-c/101016-4858-GrayWhaleGran1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+Queenstown+Aurora+Australis.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F1T9flY075Y/U0Mgnwr2AJI/AAAAAAAJBJY/eeooel6-ZXY/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BQueenstown%2BAurora%2BAustralis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4393.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RtJjOCkuYL8/UtTvDO3sraI/AAAAAAAAX3c/VVVtMV1yPW0/s1920-w1920-h1080-c/DSC_4393.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-paradise.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2Lhxkz2EBz4/U0MlX7aExHI/AAAAAAAJXMc/Lh1kPpcrBi8/s1920-w1920-h1080-c/trey-ratcliff-road-to-paradise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sunrise+in+Sangam.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7X44UiG6ohw/Ua2Qmj06zkI/AAAAAAAAfYA/owBHOfu6u_I/s1280-w1280-c-h720-k-no/Sunrise%2Bin%2BSangam\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1109-PigeonPEve.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-r3D0LQrT3K4/Tg1bQhpX5hI/AAAAAAAAAIs/ONg4BWnADUM/s1920-w1920-h1080-c/061012-1109-PigeonPEve.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Motion.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-eYFfx8sHLZY/UBSl8KkdpRI/AAAAAAAAPeA/5sJreKxzLYc/s1920-w1920-h1080-c/Motion.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGate+Dawn+from+Slacker+Hill.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GYfXywevB-4/UtTtugxGWlI/AAAAAAAAXpw/e5tyHYdIIK0/s1920-w1920-h1080-c/GGate%2BDawn%2Bfrom%2BSlacker%2BHill.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7006-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iqs_ihvxlzM/Ur0B20OjdgI/AAAAAAAAF7Y/yJ1rAuyEQjQ/s1920-w1920-h1080-c/IMG_7006-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MoraineLake.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YNlHO0F-y_U/UoazYeYqMvI/AAAAAAAAVqg/h8tLY6Zwktw/s1920-w1920-h1080-c/MoraineLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/12-11-12-original.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qdhLu3VPZU8/Uqjrkz-1dzI/AAAAAAAAYTY/Is8QaEy3rZo/s1920-w1920-h1080-c/12-11-12-original.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20090411_132734_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-0EQ-4alz8RY/S9aXij2EEzI/AAAAAAABDQ8/SUAUmq9rm60/s1920-w1920-h1080-c/20090411_132734_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle_BrianMatiash.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BK4o8MjAzHY/T6vkuyTuQ7I/AAAAAAAIovQ/rWAnhK0bJqQ/s1920-w1920-h1080-c/Seattle_BrianMatiash.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Infinity+of+Tokyo.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vCWMbf5t3RI/U0MbNIFWMsI/AAAAAAAJA-w/hbek0tN8Oqk/s1920-w1920-h1080-c/The%2BInfinity%2Bof%2BTokyo.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PatriciaLake.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oMSn89uorIA/UktkPI4oEVI/AAAAAAAAVqo/d_0ZasIPfnc/s1920-w1920-h1080-c/PatriciaLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02212012-08.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_ApXZ5TKn2Y/UOD9xbbz3OI/AAAAAAAAkNY/p6fXkvjZNY8/s1920-w1920-h1080-c/02212012-08.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnds-le-sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aqN5sgbqggQ/T3sLvuIoTmI/AAAAAAABFlQ/jxR2IgWbFM4/s1920-w1920-h1080-c/LandsEnds-le-sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Approaching+Yosemite.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bEYj5hwZ1G8/U0MSbgTqo4I/AAAAAAAJF9c/ijCLJ4jvSuU/s1920-w1920-h1080-c/Approaching%2BYosemite.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Rust.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-B7_iA_X9u6k/UBSl-nRhkxI/AAAAAAAAPeg/QCRwYky8OXM/s1920-w1920-h1080-c/Rust.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3054580997_b9c89c7d9f_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KilhfjagQZw/TgtZGB0uBJI/AAAAAAAJXZc/rjj3xvxSkso/s1920-w1920-h1080-c/3054580997_b9c89c7d9f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0853-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3dXv-q-kMJg/Ute8DoCJgSI/AAAAAAAAlHI/A3PJNXvm8g4/s1920-w1920-h1080-c/DSC_0853-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Across+the+Alaskan+Fjords.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-h782AeqXwL4/U0MTcwzNuyI/AAAAAAAJBlg/B0ICHy6uj-I/s1920-w1920-h1080-c/Across%2Bthe%2BAlaskan%2BFjords.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0592.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rOuBbaxoNAU/T-zOq9MmziI/AAAAAAAABdU/y24M7n3oj70/s1920-w1920-h1080-c/IMGP0592.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071121-3891-MontcitoMorn.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-X5n9ak4dE1s/Tg1c8c9xvWI/AAAAAAAAALE/M9bf_hSgUHI/s1920-w1920-h1080-c/071121-3891-MontcitoMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8551.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-0QWWEWkAEkA/UTmo6qnkIgI/AAAAAAAAWsU/VIzT5UsUyh8/s1920-w1920-h1080-c/DSC_8551.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_20130330_120430-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-f1YF98XfEmY/UVmHsvQBxvI/AAAAAAAAT9g/0Uk7XjxUFCw/s1920-w1920-h1080-c/IMG_20130330_120430-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-surf-burn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-zcGhuTDGZ7Q/TvI44kbopOI/AAAAAAABFaY/677iL2Z8O8s/s1920-w1920-h1080-c/SutroSunset-surf-burn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Beach.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lMCO5r3MLUQ/UZURZdDoWWI/AAAAAAAAPOU/FayJm6cQrN4/s1920-w1920-h1080-c/The%2BBeach.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Take+It+or+Leave+It.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-jrCbEVo5pok/UTUniMfAPQI/AAAAAAAAMlc/taFKyOwN7ro/s1920-w1920-h1080-c/Take%2BIt%2Bor%2BLeave%2BIt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ENS-+Macro+Snow-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JMRLCkgYWUI/UR0He_hKbyI/AAAAAAAAOyM/Fjml1QshbrU/s1920-w1920-h1080-c/ENS-%2BMacro%2BSnow-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1351.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DHg264B2vlg/Ul9y7zxl9iI/AAAAAAAAE6A/KNGHpq_cH1M/s1920-w1920-h1080-c/DSC_1351.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7939+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lA8lfuSjpBY/U0tzavr8B0I/AAAAAAAAvh8/YNJ4VVT6axk/s1920-w1920-h1080-c/IMG_7939%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071124-3917-BigSurSky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vQXExn8x3Wo/Tg1dCJ3WSJI/AAAAAAAAALM/j6v5p4iMLDc/s1920-w1920-h1080-c/071124-3917-BigSurSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3189889363_6357f5f645_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mA6_1F0fM7U/TgtZGJt2oII/AAAAAAAJKTg/te1m0BOVycg/s1920-w1920-h1080-c/3189889363_6357f5f645_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01070+Mosaic.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-nCN9lgyjKd0/UpBNC_yRLBI/AAAAAAAAD_s/xH5Pb5wEGH4/s1920-w1920-h1080-c/DSC01070%2BMosaic.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1182.CR2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2y17u99oVV8/TwyPAbOBPqI/AAAAAAAAF9w/EQOhIwGaHiA/s1920-w1920-h1080-c/IMG_1182.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Grassy+Roof.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Y_Bp6GUWfSE/U0Maxnb6OyI/AAAAAAAJA4U/a05iPi39_7c/s1920-w1920-h1080-c/The%2BGrassy%2BRoof.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal+Rocks-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rQdS7R8LdHM/T1Jy2z5kZcI/AAAAAAABFZY/Cqb-Q9aWw2Q/s1920-w1920-h1080-c/Seal%2BRocks-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MountainSplendor.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f6OToCJWRrg/UUsOySkJXoI/AAAAAAAATgk/DWwubrzxFPY/s1920-w1920-h1080-c/MountainSplendor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4460.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GQv4Q_NZKH8/UDZ1v6AEcSI/AAAAAAAA6ik/i90ZeH2jexc/s1920-w1920-h1080-c/IMG_4460.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled+(101+of+207).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tw3AkYSVojM/U0MlwltSINI/AAAAAAAJBMA/7_5x_BUOOww/s1920-w1920-h1080-c/untitled%2B%2528101%2Bof%2B207%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6674-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-X3k5JeDbKW4/UZtfuMrJ49I/AAAAAAAAVpI/Qy3yA3weGXM/s1920-w1920-h1080-c/DSC_6674-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-07-13-hodgeman-ks-lightning-supercell.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NE7B7ZtjC9M/UknSexY2-_I/AAAAAAAAN6g/od62b4KTS9U/s1920-w1920-h1080-c/5-07-13-hodgeman-ks-lightning-supercell.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Thamserku.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gvCvkN6ll9Y/UtRUq4mYc8I/AAAAAAAAGpo/RecztlhW01k/s1920-w1920-h1080-c/Thamserku.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ohau-cliff-hawaii-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-lKPOvxP_3hQ/U0MjW1IS8QI/AAAAAAAJBP4/qTn4pFXZq_8/s1920-w1920-h1080-c/ohau-cliff-hawaii-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7439storm2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-PBAhFhrSEPM/Ugj3wyodrvI/AAAAAAAAIOs/Fo7lNmwWNu0/s1920-w1920-h1080-c/7439storm2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bondi_sml.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OuaQJ-ktrms/TmH7HMco5NI/AAAAAAAADYk/CvmoywXR_ck/s1920-w1920-h1080-c/bondi_sml.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+A+Great+Wall+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bm8YwGRxgzI/U0MfR72bkDI/AAAAAAAJKHE/TKs1mWF8US4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BA%2BGreat%2BWall%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TwilightRocks_SanMateoCoast-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WiGnP1yACq0/T2-Ib08jHdI/AAAAAAABFaw/uRs4YlY_qss/s1920-w1920-h1080-c/TwilightRocks_SanMateoCoast-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Farm+of+Eden.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-To5JBx7eAO4/U0MaTRPOM4I/AAAAAAAJEWM/8Bgvm9uL6Do/s1920-w1920-h1080-c/The%2BFarm%2Bof%2BEden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8031438226_5713c1a86c_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeCrM9fKDYw/UkPR39wFICI/AAAAAAAALrQ/1VmRr7zq_N4/s1920-w1920-h1080-c/8031438226_5713c1a86c_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1078-PelicanCove.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hn2QgYPEDxo/Tg1bUgAlTfI/AAAAAAAAAI0/R33ZpN3IaJ8/s1920-w1920-h1080-c/061012-1078-PelicanCove.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC03916+Green+Leaf+Texture.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Lpppujp4Qb4/UpBTNYFdx7I/AAAAAAAAD_4/SCgq46wEvcU/s1920-w1920-h1080-c/DSC03916%2BGreen%2BLeaf%2BTexture.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Fickle+Mistress.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Z9mJn5vva2U/T6sVZGdrvgI/AAAAAAAAdAo/rdpy_ia2NS8/s1920-w1920-h1080-c/The%2BFickle%2BMistress.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090227-0384-McCluresPoint.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-K7DKKrLhMec/Tg1eUKdLbXI/AAAAAAAAAM4/BaH6ytbEX4U/s1920-w1920-h1080-c/090227-0384-McCluresPoint.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080816-4952-WaianSands.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tCgHZWwSulc/Tg1dtfmRPHI/AAAAAAAAAMI/ol6-WLOo7WU/s1920-w1920-h1080-c/080816-4952-WaianSands.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0684.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xOVjmeJjM3o/TqtYP_buAoI/AAAAAAAAFlA/xUHqJSkr-MU/s1920-w1920-h1080-c/IMG_0684.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071229-4276-LaJollaFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-e6TcvHbkNxo/Tg1dYGAJKTI/AAAAAAAAALw/_t-M3-wmbeg/s1920-w1920-h1080-c/071229-4276-LaJollaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090911-2088-AngelIslandSky2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n76GULHmI8U/Tg1fNmGyDbI/AAAAAAAAAOA/pNieTMoo0ro/s1920-w1920-h1080-c/090911-2088-AngelIslandSky2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1134103121_gateway+to+the+temple+of+heaven.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-08NVs0omPPw/TgtZEFlihuI/AAAAAAAJBBo/KKdqrpOP5Z0/s1920-w1920-h1080-c/1134103121_gateway%2Bto%2Bthe%2Btemple%2Bof%2Bheaven.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DolphinWalk.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-WHdVljxASJk/UOue-BcvLNI/AAAAAAAAwoo/ENRQQBJtKsA/s1920-w1920-h1080-c/DolphinWalk.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+paint+on+rock!.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-1OMPOm50As0/Ua2didd-IjI/AAAAAAAAfX4/afXkw0vQ4Nc/s1280-w1280-c-h720-k-no/Red%2Bpaint%2Bon%2Brock%2521\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-20-11-sunset-clouds365-kdelay.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sVsjQwFKpM0/UFN9mKAiexI/AAAAAAAASuM/qpOQevOJY8k/s1920-w1920-h1080-c/5-20-11-sunset-clouds365-kdelay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/maui-13.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A5xnIm26hoM/UQ6xWBcP60I/AAAAAAAAFZI/xCilpfxW-3Y/s1920-w1920-h1080-c/maui-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sloat-SunsetBeachFoam.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2oWY5eMxbnY/TwJ1W3DnAII/AAAAAAABFbs/V9UTfZKkOnM/s1920-w1920-h1080-c/Sloat-SunsetBeachFoam.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6436.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hjg_1FAJV7k/T8miVTXavMI/AAAAAAAAIgo/Ksveh_v5Pws/s1920-w1920-h1080-c/DSC_6436.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090501-0963-CycloneOfLt.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-duWLWrx3RtU/Tg1erB-vvtI/AAAAAAAAANU/3iD8-ATfJsw/s1920-w1920-h1080-c/090501-0963-CycloneOfLt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1189866210_spanish+sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-zAb56uSfuX0/TgtZEG6yqnI/AAAAAAAJBDQ/5prXR1sSzyU/s1920-w1920-h1080-c/1189866210_spanish%2Bsunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5433.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dN576MDlyEM/TiRJgIjUtZI/AAAAAAAD6lY/sbNK1sQOiow/s1920-w1920-h1080-c/IMG_5433.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4957.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EJI2_bMWrg/U0_6WXfnu0I/AAAAAAAA2IA/qnv2qDY374E/s1920-w1920-h1080-c/388A4957.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Olmsted-Sunset-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_X4BN2gmOh4/TqTdEJ8Q95I/AAAAAAAAEx4/4HIX-pD4OuI/s1920-w1920-h1080-c/Olmsted-Sunset-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/new-england-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-z9s9Br2P5fo/UKZedhD_eYI/AAAAAAAACfk/2-qRWoFQDcs/s1920-w1920-h1080-c/new-england-4.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9VBXTbvWld0/U_yjmbN6zVI/AAAAAAAB-3c/rSgR3kL3uTQ/s1920-w1920-h1080-c/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bodie-11.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NFuPWEa3vrE/UFs2mhJrWQI/AAAAAAAAST4/QAg74w1fZpI/s1920-w1920-h1080-c/bodie-11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8003.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-xjlOWCsBOHg/UL2Bg7-fWJI/AAAAAAAAEQM/_Af3LToQDmg/s1920-w1920-h1080-c/IMGP8003.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20110710-160024.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GN97YhnT3Qo/Tj1SVC1wv-I/AAAAAAAADi0/upwFGIqVhPQ/s1920-w1920-h1080-c/20110710-160024.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/River+and+Mount.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mdbG7ZFFzKQ/U0MX5tKa1vI/AAAAAAAJCBM/XGhf_-p25Ys/s1920-w1920-h1080-c/River%2Band%2BMount.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060607-0405-PillarsPast.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-USkNl2UVpk8/Tg1a6ynrEKI/AAAAAAAAc0c/fcUJz1E5SKw/s1920-w1920-h1080-c/060607-0405-PillarsPast.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8949932059_416d4806ab_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rU4h5IKilhs/UbC8PJyZCII/AAAAAAAABBo/tPQZAwV8nxA/s1920-w1920-h1080-c/8949932059_416d4806ab_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-5.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-iXtTEIicPCE/Thz5P1Y-mFI/AAAAAAACqmA/QwzDzmHWk94/s1920-w1920-h1080-c/untitled-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140105-untitled+shoot-2908_HDR_HDR.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-kM5nzgAtWSI/Us2ewqEBtFI/AAAAAAAABiM/iwvLzC2OMEk/s1920-w1920-h1080-c/20140105-untitled%2Bshoot-2908_HDR_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100731-4524-HapunaLight1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EF8NaWPwjTM/Tg1gLGBR_9I/AAAAAAAAAPE/3DlU_Kv1HHQ/s1920-w1920-h1080-c/100731-4524-HapunaLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonSnakeOverlook.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-RCFt3utBaXk/UE5kxyUxo6I/AAAAAAAAJWQ/jtgzKjcGfuU/s1920-w1920-h1080-c/TetonSnakeOverlook.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120212-IMG_4250.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-5FV5VQzT0WQ/Tzy0dNznpGI/AAAAAAAAEwc/5uIfwjNBMhc/s1920-w1920-h1080-c/20120212-IMG_4250.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100312-3521-MonolithicLight1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KKZmrbmQdYM/Tg1fx0f9EaI/AAAAAAAAAOs/zg07LmkK2eg/s1920-w1920-h1080-c/100312-3521-MonolithicLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8156803630_fcb67dbe98_k.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p3T0Z0zLK5E/UJhoD6_Ac1I/AAAAAAAAgMQ/fqQxNGKpL-c/s1920-w1920-h1080-c/8156803630_fcb67dbe98_k.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4088949046_5d094cb2e2_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yX9BOjrswig/TgtZEPKtS_I/AAAAAAAJEmo/jrnHGoDlpHw/s1920-w1920-h1080-c/4088949046_5d094cb2e2_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8621-2-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4eLicoBRkAQ/Uc7OMQqqKMI/AAAAAAAAXbw/eMQHZ3fhXGA/s1920-w1920-h1080-c/DSC_8621-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1171692863_the+eiffel+from+beneath.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PQQBBUfBmNs/TgtZENaPpRI/AAAAAAAJA1Y/mfOoa5PJw4g/s1920-w1920-h1080-c/1171692863_the%2Beiffel%2Bfrom%2Bbeneath.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Sunset+on+a+Texas+Farm.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9-6Sd41GxEQ/U0MR8Gvqf4I/AAAAAAAJRB0/9fYITnA4fQk/s1920-w1920-h1080-c/A%2BSunset%2Bon%2Ba%2BTexas%2BFarm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/300928932_3bf6d408df_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DfDrf9tZth0/TgtZGBjmXqI/AAAAAAAJA_A/e6jq_VQrXaY/s1920-w1920-h1080-c/300928932_3bf6d408df_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ReflectingMoonlight.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-B7gaJXyGoIs/UHOmYB8GzPI/AAAAAAAAwHA/MGpwJlaw7Yw/s1920-w1920-h1080-c/Reflecting%25252520Moonlight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Solar+Flower.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zuD-bqjkRMs/U0MdYYTiWJI/AAAAAAAJJLE/xEEn0-D32-Q/s1920-w1920-h1080-c/The%2BSolar%2BFlower.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061119-1290-HaenaSurf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DtOOMCEQEzs/Tg1baI_IkFI/AAAAAAAAc0g/4HYnmK0I21k/s1920-w1920-h1080-c/061119-1290-HaenaSurf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3425202839_7a6b829432_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Mo0DARoQ5pg/TgtZGObV66I/AAAAAAAJA4A/x3NBiBZ1T08/s1920-w1920-h1080-c/3425202839_7a6b829432_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3302.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EGI_DF6_jjM/U0_6WeYaAcI/AAAAAAAA2IA/onrkX5wYXC0/s1920-w1920-h1080-c/388A3302.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2388+e.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uWYftkrNY7Y/U08nbhRFXEI/AAAAAAAAvt8/Jvqvy9ZX7Rw/s1920-w1920-h1080-c/IMG_2388%2Be.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060506-0094-Farscape.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mB0CsB02334/Tg1a0rca9TI/AAAAAAAAc0M/poMn2aae0XU/s1920-w1920-h1080-c/060506-0094-Farscape.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090102-0143-SeaAndStorm.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-rqPXOCN3Sf4/Tg1eJr7jzJI/AAAAAAAAAMs/neSQj8_NJbQ/s1920-w1920-h1080-c/090102-0143-SeaAndStorm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-Wave_mono-square.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_9KsThqIDII/TsKQNHpnMcI/AAAAAAABFcM/myl4tBgFSMs/s1920-w1920-h1080-c/GGB-Wave_mono-square.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KTagpsQRiZw/Tk84FHT3wvI/AAAAAAABMJE/lGUSRehuqK0/s1920-w1920-h1080-c/DSC_2817.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Morning+at+the+Secret+Lak2e.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r9JZ23uiJdw/U0MRzWVvfDI/AAAAAAAJA5Q/4xCghAQGdp8/s1920-w1920-h1080-c/A%2BMorning%2Bat%2Bthe%2BSecret%2BLak2e.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-s8Arhr77hCs/UqTF_xWLYVI/AAAAAAAAXK8/uRcPFpV7CPM/s1920-w1920-h1080-c/C21T0817.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091009-2169-LibOfAges3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeOuV8_xtzQ/Tg1fcY4BfBI/AAAAAAAAAOQ/y0D10NZbTOw/s1920-w1920-h1080-c/091009-2169-LibOfAges3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SFBay-Sunrise-Hank-n-Pilings-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZ_Ll43savw/TzCKeTsXQHI/AAAAAAAASAc/n4AJeYm6ehA/s1920-w1920-h1080-c/SFBay-Sunrise-Hank-n-Pilings-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Adventure+in+Argentina-7283-March+31,+2009-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-q7WJKw9Oqog/U0MSH9OpjdI/AAAAAAAJGxU/FDOzRfCcMro/s1920-w1920-h1080-c/Adventure%2Bin%2BArgentina-7283-March%2B31%252C%2B2009-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SunetReflection_16x9-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--s1xvTZu_8s/TvEFum2qOkI/AAAAAAABFiQ/RVtjU4CacrI/s1920-w1920-h1080-c/SunetReflection_16x9-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1221.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-id9Mf91TyIg/UQmGXFzYiAI/AAAAAAAAlfo/n2RM1udWSeM/s1920-w1920-h1080-c/IMG_1221.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-New-Zealand+(362+of+696).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4-wMlkvbnxI/U0MiMX47iJI/AAAAAAAJJJ8/lstLqeHqMOM/s1920-w1920-h1080-c/Trey-Ratcliff-New-Zealand%2B%2528362%2Bof%2B696%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Rocks+of+Iceland.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EENXFBPvH8/U0Mc5Ty31YI/AAAAAAAJBIY/d9kb4PcgsXc/s1920-w1920-h1080-c/The%2BRocks%2Bof%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012-Favorites-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_TPUkTQ0foE/UOu3R1Fih9I/AAAAAAAAUwU/n2BcAi9lFAI/s1920-w1920-h1080-c/2012-Favorites-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Exclamation-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p2S6pYJG8TY/UkLZ-2heppI/AAAAAAAAdAo/UEwJsuYTGXM/s1920-w1920-h1080-c/Exclamation-4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01099+Plant.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-AM_AYNzr-a0/UpBNRCa9JbI/AAAAAAAAD_w/gATI2Qr7EHw/s1920-w1920-h1080-c/DSC01099%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-24-13.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k85UvBDxqso/UbdXjw35hhI/AAAAAAAAFh4/E7cP1B2hXgg/s1920-w1920-h1080-c/1-24-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LowerAntelope1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Hy-GW9jdRmM/UOOY4T51IhI/AAAAAAAAKiI/dj3WLyRqMJE/s1920-w1920-h1080-c/LowerAntelope1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DelicateArch.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lTCOr1mGi98/T0m262j2RnI/AAAAAAAAGbs/4Ab-Mhv-4_A/s1920-w1920-h1080-c/DelicateArch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_3091-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-dzQdFd1d2cg/UpExTYfIJ6I/AAAAAAAAFgo/jW1vrNByXqg/s1920-w1920-h1080-c/DSC_3091-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lorne+Road.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SPVIRuebjx0/U0MWpwm-GJI/AAAAAAAJJKQ/b1X__UQq1K8/s1920-w1920-h1080-c/Lorne%2BRoad.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110429-7971-Faultlines.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-9evAJAwXovk/Tg1aR0viDRI/AAAAAAAAc0I/TecuJZTaV44/s1920-w1920-h1080-c/110429-7971-Faultlines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+NEX+7-+Sunset+2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-2Q98cG0kiX8/U0MgMcXhJgI/AAAAAAAJKoU/iqJaKYOi6J0/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNEX%2B7-%2BSunset%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ree1zkofuLM/UPBTkiEo3pI/AAAAAAAAfWU/t0UKepl53qw/s1920-w1920-h1080-c/IMGP8556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Most+Beautiful+Road+in+the+World.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Cp1EGSOiT7o/U0MbuGaep5I/AAAAAAAJIA0/Hi4dBFthsQE/s1920-w1920-h1080-c/The%2BMost%2BBeautiful%2BRoad%2Bin%2Bthe%2BWorld.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chicago.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KxjcNjAfrow/U0MTi1JasjI/AAAAAAAJKS4/JcqmHStMKgE/s1920-w1920-h1080-c/Chicago.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070211-2329-GarrapataSurf1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-p8gu7w4UaB0/Tg1cD-zJRXI/AAAAAAAAAJw/xKPs4AJ8WTU/s1920-w1920-h1080-c/070211-2329-GarrapataSurf1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Day+Break+G+.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KwGZ0753oAA/T_SUbhKUrmI/AAAAAAAAhqg/aN2q0nhUYNA/s1920-w1920-h1080-c/Day%2BBreak%2BG%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070902-3129-BowlingBall1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EIrEuHD0skg/Tg1cUtz3htI/AAAAAAAAc00/ykp5Z4-BtGg/s1920-w1920-h1080-c/070902-3129-BowlingBall1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+OTW+to+Glen.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ggjaMcHz6Fw/U0Mgf-CsIDI/AAAAAAAJFdQ/iyuO6PIuUdg/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BOTW%2Bto%2BGlen.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/136.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DZDQ-Jc4VPA/TSjtGSyY5lI/AAAAAAAAkNQ/r8BTRHGP7qI/s1920-w1920-h1080-c/136.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1311-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-smKqSEXvptA/UpZ3FAZqrSI/AAAAAAAAf5w/iIG6Dg0XSKs/s1920-w1920-h1080-c/DSC_1311-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/In+a+Foreign+Land+-+West+Fjords,+Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5vOp8Qd9Cr0/UZURZbC6EvI/AAAAAAAAgTY/jZBHwF9W4VU/s1920-w1920-h1080-c/In%2Ba%2BForeign%2BLand%2B-%2BWest%2BFjords%252C%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hell's+Gate+Bridge-6.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sZXaqdy-xcA/UKzgVo7pqnI/AAAAAAAAIaA/tvF7kHoKH2I/s1920-w1920-h1080-c/Hell%2527s%2BGate%2BBridge-6.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/End+Game+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vYrcLbr_syE/UO0CdVlLb_I/AAAAAAAAgOE/-NoOWCD3-LY/s1920-w1920-h1080-c/End%2BGame%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+The+Egg+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-fSZtzjxYoBk/U0MfcOvbsrI/AAAAAAAJBP8/prm689xvgE4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BThe%2BEgg%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8642.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IFmqkzp2Z74/SlgjPMN0INI/AAAAAAAAJlI/cVrfkqJwBj4/s1920-w1920-h1080-c/IMG_8642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3234.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-81O00JEe7GY/U0_6WV9qs6I/AAAAAAAA2IA/xSYNSA5zuIo/s1920-w1920-h1080-c/388A3234.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4648-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Xb-0VhFJErE/U0_6WZpo_5I/AAAAAAAA2IA/3wWOfPmtuno/s1920-w1920-h1080-c/388A4648-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2238-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0gRcRJvCyq8/UYWMMwK-xyI/AAAAAAAAgOg/YAmwDINMMW4/s1920-w1920-h1080-c/MOL_2238-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Kona-Hawaii-Stormy-Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EgToYDexIWA/TugFtw6MbOI/AAAAAAAAJ_E/AFdXppomBHM/s1920-w1920-h1080-c/Kona-Hawaii-Stormy-Sky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BakerBeach-SunsetColor.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-AGyN05vOAVg/Trv455hOvXI/AAAAAAABFag/ruA7zfHRDik/s1920-w1920-h1080-c/BakerBeach-SunsetColor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/red+bridge+in+late+afternoon.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-voPn3r8W5cQ/TgtZEGX9FFI/AAAAAAAJG7g/wotb_OlghAE/s1920-w1920-h1080-c/red%2Bbridge%2Bin%2Blate%2Bafternoon.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-sunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-i1rPphMhUYQ/T1l7sJNRR5I/AAAAAAABFaA/ISCx26OdOHM/s1920-w1920-h1080-c/LandsEnd-sunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130915-7372-34873c91-2048.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3d-tkshy_0Y/Um32gHQ1usI/AAAAAAAACGA/O4ZCsNcd1-M/s1920-w1920-h1080-c/20130915-7372-34873c91-2048.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Ocean+Sigh.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KKLEMMadjkQ/UO8V4We8BYI/AAAAAAAAwHI/245vkVmGU8w/s1920-w1920-h1080-c/Ocean%2BSigh.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoCove-SmallSunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cFtlqrFqSy0/Tpr3ij-CA7I/AAAAAAABC7g/PhNSHOv9-dw/s1920-w1920-h1080-c/RodeoCove-SmallSunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-01ZxJyYSOq4/UtTs57pjoXI/AAAAAAAAOYg/L4SWL7LqweM/s1920-w1920-h1080-c/DSC_1556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Road+to+Lindis+Pass.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wBaT-XTU5lw/U0McsiS2QGI/AAAAAAAJG6g/emxVwa5ILwo/s1920-w1920-h1080-c/The%2BRoad%2Bto%2BLindis%2BPass.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Life+in+the+greenhouse-3.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-t4GuDMvJgtk/TPK0WgSeLBI/AAAAAAADI4c/zYc1x7I-S9k/s1920-w1920-h1080-c/Life%2Bin%2Bthe%2Bgreenhouse-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7995122298_d4743a46ce_k.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dVPjiuCL-og/UNi-6EF0QjI/AAAAAAAAK5E/33w0ipRlzuc/s1920-w1920-h1080-c/7995122298_d4743a46ce_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/McWay+Milky+Way.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4J2fjwHlZpk/UtTyvD-FnJI/AAAAAAAAX1k/TuYoeLc-Ku8/s1920-w1920-h1080-c/McWay%2BMilky%2BWay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-queenstown-nz-nikon-d800.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxsx0IEs6eA/U0MlLb1IerI/AAAAAAAJP20/dPosYR9XVxw/s1920-w1920-h1080-c/trey-ratcliff-queenstown-nz-nikon-d800.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chef+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YB4kZ5ge9Cc/U0MTgZTfmZI/AAAAAAAJQpw/V9nAX7xkgF0/s1920-w1920-h1080-c/Chef%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ConvictLakeSunrise.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FAIPD0L_XLs/UBctAcHLwcI/AAAAAAAAJAo/fsicVZWEcT8/s1920-w1920-h1080-c/ConvictLakeSunrise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01009+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k1Op3rHp90U/ToFAGEMaH4I/AAAAAAAAraU/f_xZikhzlCY/s1920-w1920-h1080-c/DSC01009%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0444_5_6-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-UHWxgek6Ei0/T58Hpp9zkeI/AAAAAAAANzY/M8D4GtsE6cY/s1920-w1920-h1080-c/DSC_0444_5_6-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090424-0690-CrystCvBreakers.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9FMwjMIo6MU/Tg1efx1FWSI/AAAAAAAAANE/NuC3xJSPApo/s1920-w1920-h1080-c/090424-0690-CrystCvBreakers.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Sky+Forever.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-rYUyEz24110/U0MddxVVpKI/AAAAAAAJI0g/Yo2Aeee9akk/s1920-w1920-h1080-c/The%2BSky%2BForever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140310_Iceland_1392-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bjac3OgFBG8/U_yjp004PtI/AAAAAAAB-4U/jq6sA93FbVI/s1920-w1920-h1080-c/20140310_Iceland_1392-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3410783929_310572ed16_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1oYAqn8Hi9o/TgtZEE_8tKI/AAAAAAAJJKI/8CbtKab2l0U/s1920-w1920-h1080-c/3410783929_310572ed16_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/G+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-udPQ4zAGUYg/UZURZTfLDhI/AAAAAAAAPSc/ptIJgEKd2LQ/s1920-w1920-h1080-c/G%252B.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0861.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-v6_xr8m1Nh4/UqTF_6FhNQI/AAAAAAAATJY/VWbCHgg5quc/s1920-w1920-h1080-c/C21T0861.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3505475407_d776e4d589_o-1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TVzStzhfexU/S_5S8_zMy5I/AAAAAAADFE0/fN7-JZzP46I/s1920-w1920-h1080-c/3505475407_d776e4d589_o-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DteiBArt5UI/U0MYH6zthEI/AAAAAAAJFtY/UU1t1FU6uX4/s1920-w1920-h1080-c/Seattle.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100409-3657-PinnacleRock3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eOzWq5Yn-SY/Tg1f10Dgx4I/AAAAAAAAAOw/PiXj6h2JAio/s1920-w1920-h1080-c/100409-3657-PinnacleRock3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-Milford-Sound-100.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PwjNo1puYPI/U0MiQaw-PxI/AAAAAAAJF3M/gyTiKomggGc/s1920-w1920-h1080-c/Trey-Ratcliff-Milford-Sound-100.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061125-1635-Maelstrom3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5E0jD9xU4kU/Tg1brt6WipI/AAAAAAAAc0s/2YRKYYKsEkM/s1920-w1920-h1080-c/061125-1635-Maelstrom3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A1865_HDR.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zrMZyIFb_wM/U0_6WbX2k0I/AAAAAAAA2IA/EM_Lt3L7XOg/s1920-w1920-h1080-c/388A1865_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2337.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxwr24FdX3I/TwZMCaKx4XI/AAAAAAAAQnE/DcLxR0jnfqE/s1920-w1920-h1080-c/IMG_2337.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1531.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EIEk1-tv81w/TGD0hHBXZEI/AAAAAAAAav0/MfGEerqGlfk/s1920-w1920-h1080-c/IMG_1531.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C4577.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KN7d8PlNOxU/UA7HP8WNpTI/AAAAAAAASLc/esv8pSYjYmQ/s1920-w1920-h1080-c/FI4C4577.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RaceTrack-tilted.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TiuUGmgrIJo/T2fhWrPoAtI/AAAAAAAAX-0/KhLFCt5muZ0/s1920-w1920-h1080-c/RaceTrack-tilted.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tempest+(1)-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-aN5bGPX4Rig/UW_esdzHpZI/AAAAAAAAUYo/lhx3gIuY2Tc/s1920-w1920-h1080-c/tempest%2B%25281%2529-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+lonely+grass+house.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BqdD6DbXnso/TgtZGH_h6AI/AAAAAAAJA0Q/VNpKkFnn1eg/s1920-w1920-h1080-c/the%2Blonely%2Bgrass%2Bhouse.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BeanHollow-sunset-surf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bhHK29YjgVc/T3CquVOc6hI/AAAAAAABFZI/Z-FfTyBzwLI/s1920-w1920-h1080-c/BeanHollow-sunset-surf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140328_Hawaii_2209-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JOT24t6ZLx4/U_yjrKLK2zI/AAAAAAAB-4o/KC0ZWVXh110/s1920-w1920-h1080-c/20140328_Hawaii_2209-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_402.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-a860A9miaZQ/ThtTuOdNWNI/AAAAAAABSE0/tjO54r6kego/s1920-w1920-h1080-c/RHeaRy_402.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningBlue-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-w_It3dmq8_Q/Tr26ZtIDRNI/AAAAAAAAGVg/qOM8lD2pCpU/s1920-w1920-h1080-c/MorningBlue-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071118-3765-LvrsPtMorn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-3l1ZJxwb6rI/Tg1czp-9MFI/AAAAAAAAAK0/rdFg0gGfCqg/s1920-w1920-h1080-c/071118-3765-LvrsPtMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/forest+fog+v2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f3E6blFBDVk/Tg0tjUx3BJI/AAAAAAAAgMY/f8tnlRGQisU/s1920-w1920-h1080-c/forest%2Bfog%2Bv2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/oil3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-cQXP45_tLq0/T0m27oIexHI/AAAAAAAAGb8/keNzP_2lN60/s1920-w1920-h1080-c/oil3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FoggySunrise-HawkHill-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nwpgAk2m0O8/ToM1yp5NLQI/AAAAAAABC64/ExPWPjc-oLE/s1920-w1920-h1080-c/FoggySunrise-HawkHill-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-SlackersRidge-Sunrise-fog-headlights-wide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-s-CrcrZfoEY/TzlsdNVcPpI/AAAAAAAAS2I/vgewR4SWII0/s1920-w1920-h1080-c/GGB-SlackersRidge-Sunrise-fog-headlights-wide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4+horses.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PFORpB2nRWU/TgtZEBZXStI/AAAAAAAJG78/sg8P1h1FTu4/s1920-w1920-h1080-c/4%2Bhorses.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-02-12-part2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-LuTnYJ-_AcA/UbdXj-v1fMI/AAAAAAAAFhg/emAw_2y06Ak/s1920-w1920-h1080-c/1-02-12-part2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1071616194_the+farm+of+eden.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mWoPAMsZ8qM/TgtZECWsZDI/AAAAAAAJGYQ/mGJ5umfc76I/s1920-w1920-h1080-c/1071616194_the%2Bfarm%2Bof%2Beden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_2155.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ll7ATwQQOnE/UkPP_YH9WKI/AAAAAAAALoA/_9E2BHedhG4/s1920-w1920-h1080-c/MWF_2155.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_465.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-hDuDewqWJhc/ThYuDF3m4II/AAAAAAABSc8/OMs4oB1Xj6U/s1920-w1920-h1080-c/RHeaRy_465.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101027-4887-TestOfTime.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lOZvJ3yPdfc/Tg1gbgvj2bI/AAAAAAAAAPc/bgWip6MWRVI/s1920-w1920-h1080-c/101027-4887-TestOfTime.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1272-Edit-Edit-2-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Ov6cnpCqcKo/Ue52zucefaI/AAAAAAAAZuc/Ya8H97MGDxo/s1920-w1920-h1080-c/DSC_1272-Edit-Edit-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshallBeachSunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-BjCgH3F-OtM/ToojnEsMoHI/AAAAAAAAFNw/RMun2UfSHvI/s1920-w1920-h1080-c/MarshallBeachSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Chris+Chabot.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5L66J8m3eOc/US-gTtMRQbI/AAAAAAAAX5c/kyQnx5QiiKw/s1920-w1920-h1080-c/by%2BChris%2BChabot.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chasing+the+Sunset.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-oeJbNPb-T-M/UZURZeo6N9I/AAAAAAAAPQU/py94YP9ogqg/s1920-w1920-h1080-c/Chasing%2Bthe%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1428.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KK0a8yX7hUc/TnemEmslOEI/AAAAAAAAG4I/qj90bfgIkqs/s1920-w1920-h1080-c/IMG_1428.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6160-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Fz5s5Sq3uSc/UqXO06_DNPI/AAAAAAAAhPw/UNBDEnOdEhs/s1920-w1920-h1080-c/DSC_6160-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130805_mit_and_river_00001-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGY-AaDQgJc/UgG4BcMHLWI/AAAAAAAAVgA/pUfLz3uxV-w/s1920-w1920-h1080-c/20130805_mit_and_river_00001-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tree+in+the+park.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-OIKJTN2YWhU/TgtZGPb42zI/AAAAAAAJA5c/IY3N83zJARw/s1920-w1920-h1080-c/tree%2Bin%2Bthe%2Bpark.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_1449.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-qLopnv-fFT0/TxYB5_vxoEI/AAAAAAABFlo/0zpzDJeTYYk/s1920-w1920-h1080-c/_MG_1449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3K9C4807.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-4x17JQmbu1s/Ur0CrKBRTzI/AAAAAAAAGH4/t-G8zEmm1jU/s1920-w1920-h1080-c/3K9C4807.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP4090-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hhp_SMvb6a0/UOSjNI1cZnI/AAAAAAAAGjU/0XLFokAU-bw/s1920-w1920-h1080-c/IMGP4090-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8703.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ZVK5-96bzpA/UtTypXkQUHI/AAAAAAAARwI/_iTqNhaMZ6c/s1920-w1920-h1080-c/DSC_8703.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-milford11.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ISfFDxxtu-s/U0MkxpnU1rI/AAAAAAAJBQQ/gmuXSo3KcFQ/s1920-w1920-h1080-c/trey-ratcliff-milford11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Joel++Tjintjelaar.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sVAg7ixe6zM/US-gUOy49yI/AAAAAAAAXrM/6iXuvw5XdBw/s1920-w1920-h1080-c/by%2BJoel%2B%2BTjintjelaar.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-V4KqnGwqPtA/Ur0CJf-GmTI/AAAAAAAAGBA/LO0uFjb-Erc/s1920-w1920-h1080-c/IMG_3857-Edit-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1311.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9n3C3hJmGGc/UQmHUE2y6RI/AAAAAAAAlfs/6JKtNnI29Uk/s1920-w1920-h1080-c/IMG_1311.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6743-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZsqwlPxJ08/Ulff-DU9xQI/AAAAAAAAdbg/pJkMnw8uLCk/s1920-w1920-h1080-c/DSC_6743-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_DarkMorningWindyFog.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qiK0GrZEcpQ/TtZtCl10xrI/AAAAAAAAHow/WGJu8GP6dmA/s1920-w1920-h1080-c/GGB_DarkMorningWindyFog.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-ratcliff-toronto-Recovered.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HiLp9PsqEEg/U0MiTxSu0yI/AAAAAAAJP3w/ZWMfpXVaQVI/s1920-w1920-h1080-c/Trey-ratcliff-toronto-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070319-2657-PathToLight.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-VGh9JQ9DCzM/Tg1cKU7qBRI/AAAAAAAAAJ4/Dyi6MrlgffU/s1920-w1920-h1080-c/070319-2657-PathToLight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6244-7.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-UBxJsB_kCVU/UettpK1i2BI/AAAAAAAAK3s/siEVsMTSHIg/s1920-w1920-h1080-c/MWF_6244-7.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3363.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Fje9gDslRI0/U0_6WU_6rMI/AAAAAAAA2IA/m4PXkm_hAvI/s1920-w1920-h1080-c/388A3363.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8520.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-sTiWMAC13YQ/UTmo6ED7v9I/AAAAAAAAWsQ/PfI4WYswhJw/s1920-w1920-h1080-c/DSC_8520.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1870.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YOIwgQ1uXcM/SRGZJ-A3yvI/AAAAAAAADMI/6qvORkHqWS4/s1920-w1920-h1080-c/700_1870.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Dream+Catcher+-+Palouse,WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-skB9ljKV58M/UXp3kiaG3DI/AAAAAAAAgRM/hZ3rTbu1XwU/s1920-w1920-h1080-c/The%2BDream%2BCatcher%2B-%2BPalouse%252CWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+India.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-H8NDmFzpF_A/TgtZEOagTaI/AAAAAAAIPp0/eTfdvWDBvt4/s1920-w1920-h1080-c/Farewell%2BIndia.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SonomaCoast-Arch-surf-longexp.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-x0qCPDjYL9w/T2Z8tuYaHII/AAAAAAABFXc/empnlAhR_eY/s1920-w1920-h1080-c/SonomaCoast-Arch-surf-longexp.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2398605326_bf7dde0cf7_o.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-bXrGY2Cafa0/TgtZGEzbZDI/AAAAAAAJA5g/JWbeuWkbTLc/s1920-w1920-h1080-c/2398605326_bf7dde0cf7_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+View+from+the+Ranch+in+Argentina.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-txUs9Q95dM8/U0MR9lvvDNI/AAAAAAAJIA8/vY9TD4TiPzw/s1920-w1920-h1080-c/A%2BView%2Bfrom%2Bthe%2BRanch%2Bin%2BArgentina.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00077.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5uz5EzVcvNU/UEpN7gJg2nI/AAAAAAAAI7s/-Xwxg57SCn0/s1920-w1920-h1080-c/inverness-to-istanbul-00077.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SanGregorioCliffReflection.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-465XgZS4LQo/UOuDAiDRcrI/AAAAAAAAKng/4m7maZotsgg/s1920-w1920-h1080-c/SanGregorioCliffReflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/santa-cruz-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-U0yjKIXF2fs/U0MjfTbjf1I/AAAAAAAJEbY/MkqCoe1DfG4/s1920-w1920-h1080-c/santa-cruz-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061122-1421-LtAtEndOfPier.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-7Zi62qJ-NNg/Tg1bfusNzfI/AAAAAAAAAJA/P4bDaf-68Ys/s1920-w1920-h1080-c/061122-1421-LtAtEndOfPier.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_SUE4322.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vA0vdrM3_ro/UnDyzCqXFaI/AAAAAAAAGxw/GAtvLCwZbAM/s1920-w1920-h1080-c/_SUE4322.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Bamboo+Forest.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bkNEhcz00Z8/U0MZQ3MdO3I/AAAAAAAJGy4/S-coTfmsQfE/s1920-w1920-h1080-c/The%2BBamboo%2BForest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02146+Red+Plant.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tyOlTzJRvmw/UpBQXuuK_JI/AAAAAAAAD_0/PL7enPiYUT8/s1920-w1920-h1080-c/DSC02146%2BRed%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/01_MG_3677.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YHEf8jl_LDg/Tgxgtdub2iI/AAAAAAAAAMQ/zmkWf0WkFTI/s1920-w1920-h1080-c/01_MG_3677.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RedTide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-feW_gVKW6j8/UI5fg6xQBXI/AAAAAAAAWQY/DIOuGTieAMM/s1920-w1920-h1080-c/RedTide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091220-2536-TheCurl.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-lR3vG062kEk/Tg1fjlh053I/AAAAAAAAAOc/Sv1zKPXPkPQ/s1920-w1920-h1080-c/091220-2536-TheCurl.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-close-to-tepako-new-zealand.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Q1AA5A9uiYU/U0MkdTp90YI/AAAAAAAJJIw/SuamKxYgwts/s1920-w1920-h1080-c/trey-ratcliff-close-to-tepako-new-zealand.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6837_CropBrightContrast.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Hqmu2H_l2XY/SwIysuFOIiI/AAAAAAABLWk/W9rX5qlmk4c/s1920-w1920-h1080-c/DSC_6837_CropBrightContrast.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061121-1389-UndPierHanalei.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-VZ8vGJ6Qfvc/Tg1bgCMJ1HI/AAAAAAAAAJE/QMa5LYy7phM/s1920-w1920-h1080-c/061121-1389-UndPierHanalei.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100924-IMG_5794-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-eCSjsP08EcA/T_0K5wVePeI/AAAAAAAARxk/I-Qx3ciOzUE/s1920-w1920-h1080-c/20100924-IMG_5794-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+San+Francisco.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-N7h4Iit041g/U0MUZ6H8WdI/AAAAAAAJKok/V-IfPQ_XXK4/s1920-w1920-h1080-c/Farewell%2BSan%2BFrancisco.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-GCr_cZIif7g/Tnarp7XhOMI/AAAAAAAABPU/WNrHyAJOLNA/s1920-w1920-h1080-c/stream.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071110-3579-HvnsGate.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0DC0pkVJw5g/Tg1cjeX4YpI/AAAAAAAAAKc/bNEDQtv0J4A/s1920-w1920-h1080-c/071110-3579-HvnsGate.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100726-4239-LightAtAhalanui.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m-0LmCqZxSo/Tg1gLoaJJKI/AAAAAAAAAPI/KNkzyqLgUa0/s1920-w1920-h1080-c/100726-4239-LightAtAhalanui.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_380.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-4026KDnYCqc/ThYb2MMKRLI/AAAAAAABSEs/3N3nOtyl_lI/s1920-w1920-h1080-c/RHeaRy_380.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrissyField-SaltMarsh-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OwU2batkg6A/TrbvnMATI7I/AAAAAAAAF3w/q_7_jgF0ngE/s1920-w1920-h1080-c/CrissyField-SaltMarsh-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tekapo-new-zealand-trey-ratcliff-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mGgW1ovI2PE/U0Mjzq2YJuI/AAAAAAAJA0o/aLuxOVgUjlY/s1920-w1920-h1080-c/tekapo-new-zealand-trey-ratcliff-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/p1000284.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-patMHu2oyfs/RJBWFz5TABI/AAAAAAACnSo/ZP9KYfCSFM8/s1920-w1920-h1080-c/p1000284.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2617.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-_p1iKjPzjGc/TIW63f_px1I/AAAAAAAAOck/NCDLhcVRam8/s1920-w1920-h1080-c/IMG_2617.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8280686512_7820f388dc_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NeMzsWIU6RU/UZURZR7U_aI/AAAAAAAAgSY/-AtSrt0ig5Q/s1920-w1920-h1080-c/8280686512_7820f388dc_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02700.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9Nj6ilPU0NI/Ts9Gk0pfW_I/AAAAAAAAD4I/GWbtz0c91tE/s1920-w1920-h1080-c/DSC02700.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A6457.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-jTQjx2iGz84/U0_6WWCDwxI/AAAAAAAA2IA/FmHhYqwC0Y8/s1920-w1920-h1080-c/388A6457.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TufaSunset-1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uk4W-F3OXbM/Tqwm9e_vuJI/AAAAAAABFcE/zPYFePKqTxs/s1920-w1920-h1080-c/TufaSunset-1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1142336.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7ZuJOGpJ5-0/UHRHfwcGEUI/AAAAAAAAKsU/s31OrXjVZ9A/s1920-w1920-h1080-c/P1142336.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Glacier+Point+Milky+Way+Panorama.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YxXTf0j_MTQ/UtTwF4t9yEI/AAAAAAAAW8g/dYsGmWzs81Y/s1920-w1920-h1080-c/Glacier%2BPoint%2BMilky%2BWay%2BPanorama.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_6908_09_10_11_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-gBb9HtLb3zw/U_yjyTFvcAI/AAAAAAAB-64/G_Jt5mnm-mU/s1920-w1920-h1080-c/_DX_6908_09_10_11_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00177.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yCO0vebn5x0/UFBrOZtDNZI/AAAAAAAAJO8/jX4MgPfHQbE/s1920-w1920-h1080-c/inverness-to-istanbul-00177.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0554.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-59MYsAxhB_I/UtTzqg1a7VI/AAAAAAAAWds/BLWELYZHUWE/s1920-w1920-h1080-c/DSC_0554.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Blue.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-p4V1WVO8Dhw/UBSl6P5W35I/AAAAAAAAPdg/UFIS4M1KDBE/s1920-w1920-h1080-c/Blue.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridge-night-mono.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5IpprOs0T78/T3PwhE-VJ9I/AAAAAAAAYzA/-2X-oY9C3N0/s1920-w1920-h1080-c/BayBridge-night-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9645-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-utp4ouvAO10/Ud6okYh24yI/AAAAAAAAYrg/fRr-tnaqxBI/s1920-w1920-h1080-c/DSC_9645-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A8818-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bCmJvz5jD9s/U_yj0wk6KLI/AAAAAAAB-7s/t7dIu3T7nvw/s1920-w1920-h1080-c/_X7A8818-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C6008.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Pg1HXtyXBZ0/UGHWhKaSrhI/AAAAAAAASZE/q3omNbvxCJU/s1920-w1920-h1080-c/FI4C6008.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/10-13-12highres.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-boXHwu7eW_g/UjjGBMhSzwI/AAAAAAAANJE/9w555NqrJws/s1920-w1920-h1080-c/10-13-12highres.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1080441.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gKcKe_o5slw/RapYX1Oyx0I/AAAAAAAAa9Q/P9rYqEPs7dc/s1920-w1920-h1080-c/P1080441.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal_Rocks-centered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PtAU0On5OII/Tr8FOZ3yVuI/AAAAAAAAGY4/IYyAYzHZzo0/s1920-w1920-h1080-c/Seal_Rocks-centered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3144-3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-129Q91osfKU/UKsTjV0_Q0I/AAAAAAACKD0/ejMXCx6_w14/s1920-w1920-h1080-c/IMG_3144-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A5208-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-7wj7ipdaCbI/U_yj0qysNgI/AAAAAAAB-7k/dl8d2M4N5vE/s1920-w1920-h1080-c/_X7A5208-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+by+Alistair+Nicol.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vK7sTdwps8g/UKPHFTynz-I/AAAAAAAARas/_RETAXGVU9g/s1920-w1920-h1080-c/Red%2Bby%2BAlistair%2BNicol.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Silver+Lake+StarTrails.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rQ9SZ0dfJ_I/UtTzyqBufcI/AAAAAAAAOj4/zAOnrvu9aG8/s1920-w1920-h1080-c/Silver%2BLake%2BStarTrails.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP7962.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-fOXNAoVsl2E/UONnO-Zp2zI/AAAAAAAAyPo/kjEzrMZXylk/s1920-w1920-h1080-c/IMGP7962.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-19.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-q2yAJwhwIic/Th0QR-JaxiI/AAAAAAAABCo/YIGFyyYRXBI/s1920-w1920-h1080-c/untitled-19.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080229-4653-GraytonStream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cjUv9eE6oRE/Tg1dXWtEjRI/AAAAAAAAc1E/ScCXWwu6HbM/s1920-w1920-h1080-c/080229-4653-GraytonStream.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6902-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-x838dk0Z5UE/UaXxyeQ21gI/AAAAAAAAm-o/7OSZeQrHSO0/s1920-w1920-h1080-c/DSC_6902-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lupines.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-oWXc6hihoxM/UAQ2flp_ioI/AAAAAAAAgLE/wL2UgiGSdRk/s1920-w1920-h1080-c/Lupines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridgeSunrise-LE.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-k1-SvxtkRaI/TzW2PE5LU_I/AAAAAAAA14A/JuGDMoDvbCQ/s1920-w1920-h1080-c/BayBridgeSunrise-LE.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-fJVeA8ZcZSU/UAbPQdXxfbI/AAAAAAAAgLI/tIVVrrPINVs/s1920-w1920-h1080-c/Iceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+trane+and+the+pharoah.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-B4s7SDef3U8/TwttGH3PVKI/AAAAAAAAR8k/Gp5uWnBs4JE/s1920-w1920-h1080-c/the%2Btrane%2Band%2Bthe%2Bpharoah.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6930-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-F44_mY6bA2c/UaiW3nWnsrI/AAAAAAAAWKk/pVPuQcy_ygQ/s1920-w1920-h1080-c/DSC_6930-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Funston-Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hs9pldJQseQ/Tw9Z3Mea0PI/AAAAAAABFTs/u8KBBQQ9At4/s1920-w1920-h1080-c/Funston-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0913.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ouB3hbNdnVY/Tzlw8hO_W7I/AAAAAAAAAVQ/GNAVkaDa0lw/s1920-w1920-h1080-c/IMGP0913.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP5017.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YiCUO9G6Vfg/ULgv8pQPeGI/AAAAAAAAD-k/NGhYvPuu5bc/s1920-w1920-h1080-c/IMGP5017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061228-2049-UTPScripps1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JkxqJu_ZG6I/Tg1b6ZErN-I/AAAAAAAAAJk/sD_vHpTz-hU/s1920-w1920-h1080-c/061228-2049-UTPScripps1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071010-3287-SausMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-o11hGOKretw/Tg1cW-5ZUOI/AAAAAAAAAKQ/bz8-ylAE0_A/s1920-w1920-h1080-c/071010-3287-SausMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+New+York+-+Inception.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uw6YFcXJKbo/U0MgUuctfgI/AAAAAAAJEXg/rLxRH7N4ths/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNew%2BYork%2B-%2BInception.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lEy_31bnK1A/TyYVYFaoUxI/AAAAAAAAPxc/_4v9O3EKy6c/s1920-w1920-h1080-c/LandsEnd-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Spires-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MjADvnIjxV0/U0MdmA5ytOI/AAAAAAAJKn4/0ZUjaXODMKA/s1920-w1920-h1080-c/The%2BSpires-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/32+Hours++Counting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-xbmT1vIDvZc/UZURZTZzmhI/AAAAAAAAgSo/f1msNjQ2YSw/s1920-w1920-h1080-c/32%2BHours%2B%2526%2BCounting.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2018-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IPbUv2dc9E4/Ugotamqb0xI/AAAAAAAAbME/zTVKgdkCdRY/s1920-w1920-h1080-c/DSC_2018-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_9976.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tFk1NsophJc/UqWc4p6NF9I/AAAAAAAAHws/4zvvKSi-qRk/s1920-w1920-h1080-c/MSU_9976.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reef-mono.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5-bmm_yEw8Q/ToaN8JLAR1I/AAAAAAABC7I/eMpXTtyj67Y/s1920-w1920-h1080-c/Reef-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dreams.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wWAxuHAMqWo/UZURZU59sUI/AAAAAAAAPOY/bxIdsdlg4DE/s1920-w1920-h1080-c/Dreams.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2705.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-D-a8TeEMxVU/T0u5OcN_KcI/AAAAAAAAQ3A/buaoFgy2i-Y/s1920-w1920-h1080-c/IMG_2705.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-WaterfallRock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-F3PyWBuTa9A/Txo6n6KVzRI/AAAAAAABFQ4/bhv0lJobcUE/s1920-w1920-h1080-c/SutroSunset-WaterfallRock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060820-0818-ThePhotogs.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m6gJXedR5K0/Tg1bJIJrdDI/AAAAAAAAAIk/luzGf-NHcC0/s1920-w1920-h1080-c/060820-0818-ThePhotogs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Portofino2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F33Ezsq01cw/TgkRlUvin5I/AAAAAAAI6wA/g434OYIBJiA/s1920-w1920-h1080-c/Portofino2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110521-8046-PacificaLt2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QOLm5NyrBAg/Tg1hGjt7CQI/AAAAAAAAc2A/oW-ErAUPpKY/s1920-w1920-h1080-c/110521-8046-PacificaLt2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_3511_2_3_4_5_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QVbxD_ZZCa0/U_yjxBJn4WI/AAAAAAAB-6k/fAnDqFKCfh4/s1920-w1920-h1080-c/_DX_3511_2_3_4_5_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0880.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uNim7D5ywdM/UqTGRcbr78I/AAAAAAAAXKY/2Fv7yLI2kZc/s1920-w1920-h1080-c/C21T0880.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Pescadero.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FNrstx8M7hY/TyH51o60WuI/AAAAAAAAGTY/3nRvYRuPjEU/s1920-w1920-h1080-c/Pescadero.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Temple+Over+Kyoto.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-I7qT8fiUqZU/TgkSotvmFkI/AAAAAAAI6h0/ASyt4FPWAso/s1920-w1920-h1080-c/Temple%2BOver%2BKyoto.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4154b.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7FTPwrBoDBs/Ufb1a1gM-UI/AAAAAAAADK0/NrOPNAfCG7I/s1920-w1920-h1080-c/DSC_4154b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0663-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JLMulqzQsQQ/UqBrOg83JWI/AAAAAAAAgsY/vzUeMdvC-h0/s1920-w1920-h1080-c/DSC_0663-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_130628_MCu_1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IevMmNQigxY/Uc3F-z0I5qI/AAAAAAAAItw/eRKlk6yr6TY/s1920-w1920-h1080-c/GGB_130628_MCu_1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090810-1930-NeedleAndHaystack.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-SUKN-r5lw5A/Tg1fNM6yIEI/AAAAAAAAAN8/PULlaJpHBkI/s1920-w1920-h1080-c/090810-1930-NeedleAndHaystack.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012.+purple+is+my+favorite+color.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-vtVHPLJKT3w/T9KLSzUhuOI/AAAAAAAABiY/3a5M4phhFs0/s1920-w1920-h1080-c/2012.%2Bpurple%2Bis%2Bmy%2Bfavorite%2Bcolor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-55UeILqE2s0/T0PDELei3HI/AAAAAAABFbU/4_nqVtef2m8/s1920-w1920-h1080-c/SealRocks-sunset-reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/New+York+-+NEX7+-+Trey+Ratcliff+(8+of+21).png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-XxP1oir93Fg/U0MW6gL3miI/AAAAAAAJA0U/hP0D1e9JC-w/s1920-w1920-h1080-c/New%2BYork%2B-%2BNEX7%2B-%2BTrey%2BRatcliff%2B%25288%2Bof%2B21%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Patience.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Gp7BKH79U6k/T_rPHeEUv4I/AAAAAAAAPL8/LSoFOwB9QNU/s1920-w1920-h1080-c/Patience.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8828.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-RZKOyMbLobw/UONnVGAE9tI/AAAAAAAAyPM/60as7LUVuHI/s1920-w1920-h1080-c/IMGP8828.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-01-13-spider-crawler-lightning-road-albany-tx.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oYOr7AcS0F4/UZUYFMNixiI/AAAAAAAAGL0/6fp4ZSWjH90/s1920-w1920-h1080-c/5-01-13-spider-crawler-lightning-road-albany-tx.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Blue+City.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4wJlrgKnUsI/U0MZbQCL-5I/AAAAAAAJOwE/yL0yy2OMWtI/s1920-w1920-h1080-c/The%2BBlue%2BCity.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/06152012-12.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_OVIBu35BFs/UOD9ybxkzmI/AAAAAAAAkNo/YyQXlMNgeEk/s1920-w1920-h1080-c/06152012-12.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/D30_0895.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-onm54VnIRFQ/SBnwVTP3Y4I/AAAAAAAAvJc/jJxlxmTu5t8/s1920-w1920-h1080-c/D30_0895.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Metal-1.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-TKsDKeRS95U/Tkrw6TiAyPI/AAAAAAAC4HY/bygELaJa5-s/s1920-w1920-h1080-c/Metal-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0300.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-b_ZyO6A8eec/UNcwXdvdtMI/AAAAAAAAR4k/YcThGSa1EHE/s1920-w1920-h1080-c/DSC_0300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6868.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Mc32ZHV--b0/SwIy9sStc0I/AAAAAAABLXg/AB-YvtyK-wk/s1920-w1920-h1080-c/DSC_6868.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/class3_05.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EUrlRFim4uQ/Uo5D2fBJduI/AAAAAAAABZU/73PLVw3Xxk0/s1920-w1920-h1080-c/class3_05.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshalBeach-sunset-rocks-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-_SFDsIPPKzI/TxhNwgko__I/AAAAAAABFhY/uz_fTrjtNFg/s1920-w1920-h1080-c/MarshalBeach-sunset-rocks-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_O9V5569_HDR.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WrzPVL3SMFs/Uq-D3XLVHUI/AAAAAAAAPBY/JQpQw38ggyM/s1920-w1920-h1080-c/_O9V5569_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-mountain-forever.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n8kCRwIAl3I/U0MlTxDHALI/AAAAAAAJEL0/VwbBzYmP0nQ/s1920-w1920-h1080-c/trey-ratcliff-road-to-mountain-forever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-sunset-16x9.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-grccgI_cL8k/TwH0-_dHIvI/AAAAAAABFbM/sqNxtA-Gi30/s1920-w1920-h1080-c/RodeoBeach-sunset-16x9.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sky+Painting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-XZGw1LIoIQk/Ua2ANshiwmI/AAAAAAAAfX8/PIcgUJRHb3M/s1280-w1280-c-h720-k-no/Sky%2BPainting\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0816-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-dKrL8_a8MmE/UrWktdbZX_I/AAAAAAAAilY/2Ce0qzN9r3s/s1920-w1920-h1080-c/DSC_0816-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1204.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NvzWYFZm9b0/UQmFrRIGaDI/AAAAAAAAlew/em5aqVHnV3M/s1920-w1920-h1080-c/IMG_1204.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU8463.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9SBIVQE_N98/UnDyKXBM-VI/AAAAAAAAGw8/JRqWBIObFek/s1920-w1920-h1080-c/_MSU8463.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4067.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oVqvzpNBaE8/UlmYCAD6pNI/AAAAAAAAQPQ/xDn8iGotkyo/s1920-w1920-h1080-c/DSC_4067.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_D3_0763-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-SzwsBTne5SM/U_yjvpyvA6I/AAAAAAAB-6A/q0imuvbf0Yw/s1920-w1920-h1080-c/_D3_0763-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4772+p4.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uXesNMoRpN8/U08k4CCBTsI/AAAAAAAAvr0/7ZtIaGpNfHU/s1920-w1920-h1080-c/IMG_4772%2Bp4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-rocks-misty.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sSh1MI_KB_c/TwXF_f9Tr4I/AAAAAAAAL-g/ivbuKnmkfLI/s1920-w1920-h1080-c/SutroSunset-rocks-misty.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+docs.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-djAiXa_L7EU/TgtZGJZPcFI/AAAAAAAJBA0/Ih2FgNUBZYE/s1920-w1920-h1080-c/the%2Bdocs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/AtAnchor.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-25-BIcSpaLU/UX-tEB0seYI/AAAAAAAAU2Y/SX0W4AL4YQM/s1920-w1920-h1080-c/AtAnchor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Razor+to+the+Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WUT3n130gGw/U0MR8lh-SbI/AAAAAAAIpgw/VO52olLVJN8/s1920-w1920-h1080-c/A%2BRazor%2Bto%2Bthe%2BSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4070581709_a1c668a779_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--ETG9eU1_Xw/Tgt5l8cyMwI/AAAAAAAIWTg/nWSbj2O5c6w/s1920-w1920-h1080-c/4070581709_a1c668a779_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6165.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-PAZT1pXjMM8/UrM5S_Ht1cI/AAAAAAAACVE/adGv8TflzYc/s1920-w1920-h1080-c/IMG_6165.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CliffHouseSunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aIBq7YhM6-M/TxMQytFssDI/AAAAAAAANXs/9RurRnKmOOw/s1920-w1920-h1080-c/CliffHouseSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01034.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/--Km5pB3lBaM/Ua3DdDBGtcI/AAAAAAAAPV4/p_BFy_Ps50w/s2560/DSC01034\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Big-Sur-Coastal-Seascape-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-LVkYomDgo1g/TwoREmpuoLI/AAAAAAAAMiE/duaVKfg5Blg/s1920-w1920-h1080-c/Big-Sur-Coastal-Seascape-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100804-4696-PololuMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hXPVBw1iPyc/Tg1gUs9WABI/AAAAAAAAAPU/J-g25o_00Gk/s1920-w1920-h1080-c/100804-4696-PololuMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1600.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GwSLzDzfyGA/UWoqCg-pk2I/AAAAAAAAMh0/JeyhZ3UqFys/s1920-w1920-h1080-c/MOL_1600.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0652_3_4_tonemapped.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Sm0TD1_vzFo/ULrHwJOPf3I/AAAAAAAAEMY/NGUYdwUEtGY/s1920-w1920-h1080-c/IMGP0652_3_4_tonemapped.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CGPier-storm-mono.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gE1QbuQR45Q/TqiD0bdOG7I/AAAAAAAAE8w/fawdaKhXGu4/s1920-w1920-h1080-c/CGPier-storm-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Night+Falls+on+Crater+Lake+-+Crater+Lake,+OR1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8h4vm06cRYo/UZURZQG4KwI/AAAAAAAAPOE/GltqdZojKKE/s1920-w1920-h1080-c/Night%2BFalls%2Bon%2BCrater%2BLake%2B-%2BCrater%2BLake%252C%2BOR1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0213.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uaGTbkMBysI/R7qYVHTGv6I/AAAAAAAABiQ/IU0yK7OgvYc/s1920-w1920-h1080-c/IMG_0213.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP1985_stitch.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-14sNcCfmulY/UOj-YBSQ8oI/AAAAAAAALsk/v-C7ZmZ-UIk/s1920-w1920-h1080-c/IMGP1985_stitch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qd290nJU0FM/UZYXTBbrzeI/AAAAAAAAVhI/gNH2tEzLT80/s1920-w1920-h1080-c/Reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ibiza+dock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QyxGZeaBON4/TgtZEYemvZI/AAAAAAAAgVE/_VepyvNFiTE/s1920-w1920-h1080-c/ibiza%2Bdock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trippin'-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-b4ZiJXUmZLg/TUCPhc_z2pI/AAAAAAAAAgM/uY37UMRjGsw/s1920-w1920-h1080-c/Trippin%2527-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1612.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2A31P4WBC8s/UtT1BndamcI/AAAAAAAAO1E/Qj5CF7S1UeU/s1920-w1920-h1080-c/DSC_1612.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/YosemiteFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1dANL8dJDT0/T6h0JShpn-I/AAAAAAAAIDk/l_dKhWvFXUs/s1920-w1920-h1080-c/YosemiteFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/07_20090416.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8kQQYYzz_l8/UZSathUsJGI/AAAAAAAAsUM/3Z4WK9CG8wE/s1920-w1920-h1080-c/07_20090416.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7222-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-yYJUfqBHHXw/UoffDIFgJOI/AAAAAAAARpQ/M7Nskp7pTDg/s1920-w1920-h1080-c/DSC_7222-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_9581.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gcU_icksx-A/TnuyXEh2MeI/AAAAAAAAFhE/sjZHDkU_Vlg/s1920-w1920-h1080-c/IMG_9581.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100525-IMG_6788-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--y_TRuOOPTA/T_0KxukaPeI/AAAAAAAARw0/VTeenM1J2xI/s1920-w1920-h1080-c/20100525-IMG_6788-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MagicBallContest.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6nBwDVfR-BE/UXrL2u6iqII/AAAAAAAAUro/CL47d2nXDzE/s1920-w1920-h1080-c/MagicBallContest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eDbulGr2hu8/Ur0CIxLk-FI/AAAAAAAAGA4/R7oAYMeXRws/s1920-w1920-h1080-c/IMG_3857-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP9268.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-K258GmbSDxM/T_TBV0i4kLI/AAAAAAAABro/rW_nlHdct7U/s1920-w1920-h1080-c/IMGP9268.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hooded+Lady+of+the+Valley.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-31H2j9KKMi0/UTpeMK5JrEI/AAAAAAAAPHo/4QOl-12J750/s1920-w1920-h1080-c/Hooded%2BLady%2Bof%2Bthe%2BValley.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_4776.CR2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MxVUPW7j-L0/UCFpW985f5I/AAAAAAAAJI8/HQfELZDoN7I/s1920-w1920-h1080-c/_MG_4776.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-3-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1cz2zcbiz-4/Th0QVgyAMBI/AAAAAAAABC4/gVc-Bp_mFGs/s1920-w1920-h1080-c/untitled-3-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/sky_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1o-jUyycpcE/UIdjwEWDS3I/AAAAAAAAED4/7Mj-xSqdO5E/s1920-w1920-h1080-c/sky_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TunnelViewWinter.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGVPhdUiKwY/UOOZDe9JFQI/AAAAAAAAKiY/Noq6gsZlXxk/s1920-w1920-h1080-c/TunnelViewWinter.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3674678524_f49854f3b1_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ZGfUihferj8/TgtZGKAJjOI/AAAAAAAAdd8/e-EXjm51hhA/s1920-w1920-h1080-c/3674678524_f49854f3b1_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/I+Cover+the+Waterfront+-+Alki+Beach,+WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Zj8Aex6oXYo/UW6x5FfAtjI/AAAAAAAANiY/lukbqNiI2go/s1920-w1920-h1080-c/I%2BCover%2Bthe%2BWaterfront%2B-%2BAlki%2BBeach%252C%2BWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/morning+with+coffee+in+yellowstone.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HdhuOcwGEcs/TgtZEZtITGI/AAAAAAAAVmw/nPx5UAR0qic/s1920-w1920-h1080-c/morning%2Bwith%2Bcoffee%2Bin%2Byellowstone.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Bristlecone_Stars.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xu-TTAEZtQo/UbtDr65unqI/AAAAAAAABKo/-2asqRlMolw/s1920-w1920-h1080-c/Bristlecone_Stars.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/StillStanding.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Bz1rXnbAy1s/UQNThZKgMRI/AAAAAAAAScM/eUItE7glPn0/s1920-w1920-h1080-c/StillStanding.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Salt_Point.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FDe6_2rxtEs/UkBgjq9ZJmI/AAAAAAAAELo/zT29ZhT2NAA/s1920-w1920-h1080-c/Salt_Point.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untouched.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KPCupfttZeg/UYEMyuiN84I/AAAAAAAAU5k/74L4iR6gMDk/s1920-w1920-h1080-c/untouched.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TacomaChiluly--10.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--LqjPK05as8/TsSfH1cu69I/AAAAAAAATUE/JyMyDxcW1Ms/s1920-w1920-h1080-c/TacomaChiluly--10.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5165-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5ntl45J8Lxg/UiHZG2mJ1nI/AAAAAAAAb8s/f10TxWDh2zA/s1920-w1920-h1080-c/DSC_5165-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Group+TWO.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HbF8zRNZt-o/UMPHYkBuCMI/AAAAAAAAKUQ/GYFSC7-LVqs/s1920-w1920-h1080-c/Group%2BTWO.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrackedIsSometimesGood.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5lm5qxI06OU/TqkYjHdt_lI/AAAAAAAAKOc/Eqb40U2Jsiw/s1920-w1920-h1080-c/CrackedIsSometimesGood.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0472.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ot6zDqm0p1s/UM-oZwFOYBI/AAAAAAAAImc/_9QNnbQXa5Y/s1920-w1920-h1080-c/IMG_0472.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2167.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HW1I0DVsq6A/UlmXtm9TvGI/AAAAAAAAQOM/MBQeGBzVB2M/s1920-w1920-h1080-c/MOL_2167.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/T3_IMG_3936.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r3jKfQruwv4/Uc6B8fRsKmI/AAAAAAAAIAg/VCLgE4EqjtY/s1920-w1920-h1080-c/T3_IMG_3936.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8941Autumn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-TFEx1ptMuoc/UpN7a9C-YlI/AAAAAAAAKUI/A3KeBF2vSnE/s1920-w1920-h1080-c/8941Autumn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6682.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-l9peRQpmVRQ/T54s3ZTfGBI/AAAAAAAAJQk/-_8lDImWzwE/s1920-w1920-h1080-c/IMG_6682.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5908.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nFgpOv4T3M0/TWLTD6xOiJI/AAAAAAAAPFs/PSfnLjBIrVU/s1920-w1920-h1080-c/IMG_5908.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0935.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-acdH1dPsUdk/ToQNXK7HgDI/AAAAAAAATyM/95rFxKIy_Dw/s1920-w1920-h1080-c/IMG_0935.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/11-17-12-India+Trip-Kanheri+Caves+(JPEGs)-20.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ko4QbKawOzs/UMrlGpBHGtI/AAAAAAAAMbA/TVYDrsxchf4/s1920-w1920-h1080-c/11-17-12-India%2BTrip-Kanheri%2BCaves%2B%2528JPEGs%2529-20.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU3203.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E5h_DjLkO9g/UJGAP4Q_1jI/AAAAAAAABI0/xb_a1wwuddA/s1920-w1920-h1080-c/_MSU3203.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5328.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-3vJ7YydpvVU/T3Fad0DfOvI/AAAAAAAAIIg/rJ5piFMcgKg/s1920-w1920-h1080-c/IMG_5328.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5974.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qwOaqE4cYCg/Ur0CAf2nO5I/AAAAAAAAF-I/b2vYQp-TxW4/s1920-w1920-h1080-c/IMG_5974.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1755.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nVpMVoplcjA/UlmXtr57GiI/AAAAAAAAQOo/YPNo51GXyLU/s1920-w1920-h1080-c/MOL_1755.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2828.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RM253k65h0g/RuWXqF2PN3I/AAAAAAAAASw/bWQAJ47AvxQ/s1920-w1920-h1080-c/IMG_2828.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_T3_0788.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-JhsS5Efemfw/UAUNCf1J1aI/AAAAAAAACno/1178JtnVPVQ/s1920-w1920-h1080-c/IMG_T3_0788.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0471-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IOB7UYjdfKk/UWxRNQruJpI/AAAAAAAAqYo/ZYOTEFEaUUQ/s1920-w1920-h1080-c/DSC_0471-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8176.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-97kOELXyRw0/UpKzpdSGLsI/AAAAAAAACU8/t7toymdF9ys/s1920-w1920-h1080-c/IMG_8176.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSCF0155-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-v5W9oXSutcs/UjX_nq7Q1DI/AAAAAAAAPVE/A201XC4J5qs/s1920-w1920-h1080-c/DSCF0155-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1017.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-OvptEVwUDuA/UE_P875OPoI/AAAAAAAAPWM/ocqkejUt5AQ/s1920-w1920-h1080-c/IMG_1017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4701.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SCc_19Vl5Ng/SuoniirQlZI/AAAAAAAAGOo/UsRZ0o6GJeI/s1920-w1920-h1080-c/IMG_4701.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6000.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GMJoozxAcgE/Tk7h8aldhrI/AAAAAAAAFZ8/SnFiv5CZcYE/s1920-w1920-h1080-c/IMG_6000.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/austin+2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-G4bChH6K3mY/ULdpTli69GI/AAAAAAAAJIg/cfku63jtnY4/s1920-w1920-h1080-c/austin%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2526-3b.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-11t9DgvNYhY/UG3HjpR9T9I/AAAAAAAAIO4/FSkNbPYzUMA/s1920-w1920-h1080-c/IMG_2526-3b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6451.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YtE41zDzZZM/UBCa4Ui2cuI/AAAAAAAAOMg/Uzs03aPfWak/s1920-w1920-h1080-c/IMG_6451.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4369+-+Large.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-mPicgJz8Yes/USOzc3Ki2TI/AAAAAAAADVA/QzQqtctMISI/s1920-w1920-h1080-c/IMG_4369%2B-%2BLarge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0109.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1n2blvh-lkQ/TX_WqEAkKAI/AAAAAAAAAI4/xlaLPLcp6nI/s1920-w1920-h1080-c/DSC_0109.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HBDE39Hgv9M/TyXGMvNUzjI/AAAAAAAAA_A/nBMmnHMcT0o/s1920-w1920-h1080-c/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6499.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iTxENBfrZfY/T5ZLrTvoeCI/AAAAAAAAJD8/ik0c31ZcTOw/s1920-w1920-h1080-c/IMG_6499.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningGlory.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-8K8X3n7zPKE/UOOZGSlNvjI/AAAAAAAAKig/yTCbEVh-lCw/s1920-w1920-h1080-c/MorningGlory.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1984.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-MXAy1Q1e8pw/TtPRnPCM4AI/AAAAAAAAQc0/Vvc74HYL35s/s1920-w1920-h1080-c/IMG_1984.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1841.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-LQXZpNUUdw8/UWoqJONj7-I/AAAAAAAAMh0/7m100XOFcEo/s1920-w1920-h1080-c/MOL_1841.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/9082667654_c7919ec6ed_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iVr5r1Yycbs/UkPSMp_2CZI/AAAAAAAALrA/ME5aBtr5fdM/s1920-w1920-h1080-c/9082667654_c7919ec6ed_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Wyoming-5.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jwJEWGscrls/T-dsvGIbyRI/AAAAAAAABp4/Pgn_t5V2LNs/s1920-w1920-h1080-c/Wyoming-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8981.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FeRCoqwVOB4/Tkgq-geJE3I/AAAAAAAAFYo/xdj-91ytvg8/s1920-w1920-h1080-c/IMG_8981.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/04_20080526.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ENSOsH-5iPQ/UZSar_1xTLI/AAAAAAAAsTo/CjPKgR3jXAs/s1920-w1920-h1080-c/04_20080526.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0432.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jmMSVP61kaQ/TqtX5OPLfZI/AAAAAAAAFkk/8dE_CxpTiHM/s1920-w1920-h1080-c/IMG_0432.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tah+prohm+ruins.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-N-jkCCpnvmM/Tg0t85f5-dI/AAAAAAAABj8/otdYcgGq4ZU/s1920-w1920-h1080-c/tah%2Bprohm%2Bruins.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0642.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Lk6txIIotmM/ToZuJ99slYI/AAAAAAAAQIg/y0jvaiYTIHA/s1920-w1920-h1080-c/IMG_0642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MC2_8779.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QpB1YMuAXEA/TikI95S2KmI/AAAAAAAAPSw/kJPeHft92m4/s1920-w1920-h1080-c/MC2_8779.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0366.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E57LJIzkkd8/UM-oHjiKHJI/AAAAAAAAIjY/QKAP7QTXBNY/s1920-w1920-h1080-c/IMG_0366.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1818.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--qL9ddvO4gs/UWoqHffdewI/AAAAAAAAMh0/uf5mp_xqsHI/s1920-w1920-h1080-c/MOL_1818.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3027.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Xdz2ceNVzdw/Tm5L7A9tdYI/AAAAAAAAFsg/k4Tjwbi73Cw/s1920-w1920-h1080-c/IMG_3027.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0242.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ejLi6Bg7IUI/TonR_AZLYLI/AAAAAAAAQWk/A1bVgL3p2A4/s1920-w1920-h1080-c/IMG_0242.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0423-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-iNpCGNJTrRo/Ugbk1ZMLczI/AAAAAAAAOE0/FZWVWqXGdT8/s1920-w1920-h1080-c/DSC_0423-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/WahclelaFalls.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-q9gWC1ZIAvg/UbZrg9lIcAI/AAAAAAAAL4I/xzSlyLfAGrQ/s1920-w1920-h1080-c/WahclelaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9166.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CaqC7SHp_2w/SF8sHokHjwI/AAAAAAAACyw/gC4j26zZen8/s1920-w1920-h1080-c/DSC_9166.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7449.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bo0_R3Hshio/UOUefGb4bpI/AAAAAAAARno/EBZGWRhWwzk/s1920-w1920-h1080-c/IMG_7449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/path_of_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-y9mHkm6F9NI/UJH6oUvIN3I/AAAAAAAADqU/ueLAmjtceMI/s1920-w1920-h1080-c/path_of_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1905.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nEEPZA887gc/SRGbDPl6jgI/AAAAAAAADOc/LH5WYu-Vc1k/s1920-w1920-h1080-c/700_1905.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2079-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ps4uT_pEdCE/RpKjlC16MuI/AAAAAAAAAt0/n09gNExGMl0/s1920-w1920-h1080-c/DSC_2079-1.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6457-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-M6BRAUZHPyo/UfbbKobVOKI/AAAAAAAAK_M/4WIHtFv7Idk/s1920-w1920-h1080-c/MWF_6457-2.jpg\"]}]}}","module.exports = {\"background-patterns\":{\"image\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern1.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern2.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern3.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern4.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern5.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern6.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern7.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-1667135_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2069198_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2425614_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2790359_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2863542_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-3288642_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-geometric-pattern-background_1319-242.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/animals-16908_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/autumn-1801896_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/backdrop-3346304_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141891_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141892_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/basket-2023197_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo45.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo55.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo63.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan20.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo102.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo106.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo135.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo75.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo76.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo80.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan21.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan30.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan50.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-1545368_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-3368023_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/braiding-2697075_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-2191647_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3324067_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3334141_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-145980_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-33708_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor125.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor126.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor129.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor131.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor139.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor44.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/christmas-1091551_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circle-2696910_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005197_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005321_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cube-402231_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cute-3047767_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decor-763806_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decorative-1781458_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/design-3289984_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/diamonds-1524471_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/dreamcatcher-3334128_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1299131_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1788412_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-4655084_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-pattern-1603073_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil14.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor81.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geometric-patterns-1978688_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/goltum10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/gothic-756211_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-753533_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-763804_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart34.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart39.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart51.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart53.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/hexagon-1312786_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-1bjZ4CEqGLSGiWI.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-3PniNaR4EM.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-6oQV3ly2I1vFY5Je.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-9fPsO9xLXxzONha.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-AJ5CKq0awy4d9EF.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Elrl20LiRFHXr.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Fu9UMDonFXB4mIqU.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-HxkaMXBjzP.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-UwawezoPZ9I.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VFpI9G4V62V.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VcTxveu7iXkz.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ka9dtT7zZFsY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-nJw0PAz0l03dSZY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ybmMVJ4cYA.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-z9Xwv2KKSbgW2b.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga16.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga25.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan03.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow110.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow24.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/magnolia-732331_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha23.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mesh-2697072_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic28.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic87.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic88.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mosaic-2790339_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music57.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music58.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-1008150_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-3289978_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-403769_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-5415668_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-728509_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-755266_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-756209_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rail-2721626_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast22.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast38.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast43.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast60.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast68.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast69.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast79.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5095521_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5100472_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor12.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor26.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor27.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor35.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor67.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sand89.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1320742_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1781493_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1837442_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-3289975_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085294_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085297_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086306_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086309_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086311_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089796_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089797_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1822610_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-5095737_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-757848_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor47.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz101.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star-2721633_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star49.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/stars-1005267_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tile-1892631_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970709_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970776_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/triangle-753534_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/vector-1603109_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/violet10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2697053_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2721632_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-2484120_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148806274.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810246.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810353.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot47.png\"]}}","var map = {\n\t\"./attention/attention.mp3\": 17533\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 10253;","var map = {\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 65705\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 81089;","var map = {\n\t\"./beep_positive/beep_positive.mp3\": 66391,\n\t\"./beep_up/beep_up.mp3\": 51922,\n\t\"./bleep/bleep.mp3\": 83113,\n\t\"./cellular_click/cellular_click.mp3\": 70180,\n\t\"./computer_chime/computer_chime.mp3\": 14528,\n\t\"./ether/ether.mp3\": 86123,\n\t\"./good_chime/good_chime.mp3\": 11691,\n\t\"./mono_u/mono_u.mp3\": 63414,\n\t\"./pixel_beep/pixel_beep.mp3\": 66488,\n\t\"./plop/plop.mp3\": 88711,\n\t\"./pop/pop.mp3\": 730,\n\t\"./retro_game/retro_game.mp3\": 76496,\n\t\"./tiny_noize/tiny_noize.mp3\": 28288\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60255;","var map = {\n\t\"./future-synth/future-synth.mp3\": 66849,\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 36445,\n\t\"./retro-chiptune/retro-chiptune.mp3\": 15737\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 90683;","var map = {\n\t\"./_auth_request/_auth_request.mp3\": 48710,\n\t\"./_call_connecting/_call_connecting.mp3\": 2301,\n\t\"./_phone_busy/_phone_busy.mp3\": 33246\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60623;","var constants = {\n\n    ASSETS_URL_PREFIX: './',\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_DEFAULT_GREY: \"assets/images/favicon-grey.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n    DOWNTIME_RECONNECTION_TIMEOUT: 15,\n    PING_SENDING_INTERVAL: 10,\n\n    IDLING_MINIMAL_TIMEOUT: 10,\n    IDLING_MAXIMUM_TIMEOUT: 90,\n    IDLING_DEFAULT_TIMEOUT: 30,\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 900000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            urls: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, ',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, 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qqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    USE_SOCIAL_AUTH: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    BACKGROUND_IMAGES_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-images.xml',\n    BACKGROUND_PATTERNS_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-patterns.xml',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE'\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport Recorder from 'opus-recorder';\nimport encoderPath from 'opus-recorder/dist/encoderWorker.min.js';\nimport VanillaQR from \"VanillaQR\";\nimport idleJs from \"idle-js\";\nimport backgroundImagesXml from \"xml-loader!~/xmls/background-images.xml\";\nimport backgroundPatternsXml from \"xml-loader!~/xmls/background-patterns.xml\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    idleJs: idleJs,\n    opusRecorder: Recorder,\n    opusRecorderEncoderPath: encoderPath,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    VanillaQR: VanillaQR,\n    magnificPopup: magnificPopup,\n    backgroundImagesXml: backgroundImagesXml,\n    backgroundPatternsXml: backgroundPatternsXml,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = require('~/templates/'+path.join('/')+'.json'),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = tpl;\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprints_devices');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.fingerprint_devices_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.settings_modal');\n    addTemplate('base.setting_radio_input');\n    addTemplate('base.setting_language_radio_input');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.unregister_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.change_account_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.delete_files_media_gallery');\n    addTemplate('accounts.single_account_settings_modal');\n    addTemplate('accounts.account_settings_modal');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item_modal');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item_modal');\n    addTemplate('accounts.current_token_item_modal');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n    addTemplate('accounts.status_message_input_widget');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_modal');\n    addTemplate('vcard.vcard_edit_modal');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_placeholder');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.unread_marker');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.web');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.job');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.contact-add');\n    addSvgTemplate('svg.check');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.device-cellphone');\n    addSvgTemplate('svg.device-console');\n    addSvgTemplate('svg.device-desktop');\n    addSvgTemplate('svg.device-tablet');\n    addSvgTemplate('svg.device-web');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.client');\n    addSvgTemplate('svg.client-outline');\n    addSvgTemplate('svg.database-lock');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.bug');\n    addSvgTemplate('svg.cloud');\n    addSvgTemplate('svg.key');\n    addSvgTemplate('svg.key-variant');\n    addSvgTemplate('svg.account');\n    addSvgTemplate('svg.alert-circle');\n    addSvgTemplate('svg.security');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.check-circle');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.information');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.account-cancel');\n    addSvgTemplate('svg.web-cancel');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.chat');\n    addSvgTemplate('svg.star-face');\n    addSvgTemplate('svg.alarm-bell');\n    addSvgTemplate('svg.id');\n    addSvgTemplate('svg.expires');\n    addSvgTemplate('svg.database');\n    addSvgTemplate('svg.lock');\n    addSvgTemplate('svg.lock-open');\n    addSvgTemplate('svg.lock-alert');\n    addSvgTemplate('svg.lock-check');\n    addSvgTemplate('svg.lock-cross');\n    addSvgTemplate('svg.lock-question');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.circles-outline');\n    addSvgTemplate('svg.circle-slice-1');\n    addSvgTemplate('svg.circle-slice-2');\n    addSvgTemplate('svg.circle-slice-3');\n    addSvgTemplate('svg.circle-slice-4');\n    addSvgTemplate('svg.circle-slice-5');\n    addSvgTemplate('svg.circle-slice-6');\n    addSvgTemplate('svg.circle-slice-7');\n    addSvgTemplate('svg.circle-slice-8');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","\n    let sounds = {};\n\n    let attention_json = require('~/sounds/attention/attention.json'),\n        attention = [];\n\n\n    Object.keys(attention_json).forEach(item => {\n        let audio = require(`~/sounds/attention/${item}/${item}.mp3`),\n            attention_sound = {\n                file_name: item,\n                name: attention_json[item].name,\n                audio: audio,\n                not_selectable: attention_json[item].not_selectable,\n        };\n        attention.push(attention_sound);\n    });\n\n    let ringtones_json = require('~/sounds/ringtones/ringtones.json'),\n        ringtones = [];\n\n\n    Object.keys(ringtones_json).forEach(item => {\n        let audio = require(`~/sounds/ringtones/${item}/${item}.mp3`),\n            ringtone = {\n                file_name: item,\n                name: ringtones_json[item].name,\n                audio: audio,\n                not_selectable: ringtones_json[item].not_selectable,\n        };\n        ringtones.push(ringtone);\n    });\n\n    let dialtones_json = require('~/sounds/dialtones/dialtones.json'),\n        dialtones = [];\n\n\n    Object.keys(dialtones_json).forEach(item => {\n        let audio = require(`~/sounds/dialtones/${item}/${item}.mp3`),\n            dialtone = {\n                file_name: item,\n                name: dialtones_json[item].name,\n                audio: audio,\n                not_selectable: dialtones_json[item].not_selectable,\n        };\n        dialtones.push(dialtone);\n    });\n\n    let notifications_json = require('~/sounds/notifications/notifications.json'),\n        notifications = [];\n\n\n    Object.keys(notifications_json).forEach(item => {\n        let audio = require(`~/sounds/notifications/${item}/${item}.mp3`),\n            notification = {\n                file_name: item,\n                name: notifications_json[item].name,\n                audio: audio,\n                not_selectable: notifications_json[item].not_selectable,\n        };\n        notifications.push(notification);\n    });\n\n    let system_json = require('~/sounds/system/system.json'),\n        system_sound_list = [];\n\n\n    Object.keys(system_json).forEach(item => {\n        let audio = require(`~/sounds/system/${item}/${item}.mp3`),\n            system_item = {\n                file_name: item,\n                name: system_json[item].name,\n                audio: audio,\n                not_selectable: system_json[item].not_selectable,\n        };\n        system_sound_list.push(system_item);\n    });\n\n    sounds.attention = attention;\n    sounds.ringtones = ringtones;\n    sounds.dialtones = dialtones;\n    sounds.notifications = notifications;\n    sounds.system = system_sound_list;\n    sounds.all_sounds = attention.concat(ringtones).concat(dialtones).concat(notifications).concat(system_sound_list);\n\n    export default sounds;","import _ from \"underscore\";\nimport $ from \"jquery\";\nimport constants from \"xabber-constants\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    var sprite = options.sprite,\n        tag_name = sprite ? (options.tag_name || 'span') : 'img',\n        emoji_size = options.emoji_size || 20,\n        href = options.href ? ` href=\"#${options.href}\" ` :\"\",\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        let data = emoji_data[emoji],\n            emoji_code = data && Number(data.code).toString(16);\n        if (data) {\n            (emoji_code.length < 4) && (emoji_code = \"0\".repeat(4 - emoji_code.length) + emoji_code);\n            let img_src = tag_name === 'img' ? (sprite ? ' src=\"'+ constants.ASSETS_URL_PREFIX + 'assets/images/emoji/blank.gif\"' : '  src=\"' + constants.ASSETS_URL_PREFIX + 'assets/images/emoji/svg32/emoji_u' + emoji_code + '.svg\"') : '';\n            return '<' + tag_name + img_src + href + title + ' class=\"emoji emoji-w' + emoji_size +\n                (sprite ? (' sprite-' + sprite + '\" style=\"background-position: ' + '-' + (emoji_size * data.x) + 'px ' + '-' + (emoji_size * data.y) + 'px;\" ') : '\" ') +\n                'alt=\"' + emoji + '\" ' +\n                'data-emoji=\"' + emoji + '\"/>';\n        }\n        else\n            return emoji;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.28) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (max_size){\n        if (size.width > size.height) {\n            if (size.width > max_size) {\n                size.height *= max_size / size.width;\n                size.width = max_size;\n            }\n        } else {\n            if (size.height > max_size) {\n                size.width *= max_size / size.height;\n                size.height = max_size;\n            }\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml' || file.type.includes('image/gif') || (width < MAX_IMG_SIZE && height < MAX_IMG_SIZE)) {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                dialog_options || (dialog_options = []);\n                let options = dialog_options || [];\n                buttons || (buttons = {});\n                if (typeof(dialog_options) === \"object\" && !Array.isArray(dialog_options)){\n                    options = [];\n                }\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.no_dialog_options) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n            }\n\n            if (dialog_options.quoted_text) {\n                dialog.$modal.find('.modal-content').append(`<div class=\"dialog-quoted-text\">${dialog_options.quoted_text}</div>`);\n            }\n            if (dialog_options.cancel_button_main) {\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n            }\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options, header) {\n            return this.common(header || getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, cancel_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\n$.fn.isVisibleInViewport = function() {\n    let elementTop = $(this).offset().top,\n        elementBottom = elementTop + $(this).outerHeight();\n\n    let viewportTop = $(window).scrollTop(),\n        viewportBottom = viewportTop + $(window).height();\n\n    return elementBottom > viewportTop && elementTop < viewportBottom;\n};\n\n$.fn.isVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        (eleTop >= containerTop && eleBottom <= containerBottom) ||\n        // Some part of the element is visible in the container\n        (eleTop < containerTop && containerTop < eleBottom) ||\n        (eleTop < containerBottom && containerBottom < eleBottom)\n    );\n};\n\n$.fn.isFullyVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleTop >= containerTop && eleBottom <= containerBottom\n    );\n};\n\n$.fn.isBottomVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleBottom <= containerBottom\n    );\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {}\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                        if (options.decode_uri)\n                            x = x.replace(list[i], decodeURI(list[i]));\n                        else\n                            x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1 && !(type.indexOf('application') > -1))\n            return true;\n        else\n            return false;\n    },\n\n    tryReadingFile: function(file) {\n        return new Promise((resolve, reject) => {\n            let r = new FileReader();\n            r.onload = (e) => {\n                resolve();\n            };\n            r.onerror = (e) => {\n                console.log(r.error);\n                reject(r.error);\n            };\n            r.readAsDataURL(file)\n        });\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size && size != 0)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport sounds from \"xabber-sounds\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    sounds: sounds,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils,\n    bc = new BroadcastChannel(\"xabber-web\");\n\nbc.onmessage = (event) => {\n    if (event.data === `1` && !bc.disabled_client) {\n        bc.postMessage(`2`);\n    }\n    if (event.data === `2`) {\n        bc.disabled_client = true\n    }\n};\n\nbc.postMessage(`1`);\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        client_name: 'Xabber for Web'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this.check_config = new $.Deferred();\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.extendFunction();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n\n        window.ononline = () => {\n            this.disconnectWhenConnecting();\n        };\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_gray', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT_GREY).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description client-text-color-500\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            idling: true,\n            idling_time: 'default',\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            jingle_calls: true,\n            notifications_volume_enabled: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            sound_on_call: 'marching-band-dave-girtsman',\n            sound_on_dialtone: 'marching-band-dave-girtsman',\n            sound_on_connection: '_call_connecting',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: '_auth_request',\n            sound_on_call_busy: '_phone_busy',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.cacheFavicons();\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'ASSETS_URL_PREFIX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'USE_SOCIAL_AUTH',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n            if (this._settings.get(\"idling_time\") === 'default' && config.IDLING_DEFAULT_TIMEOUT != null)\n                this._settings.set(\"idling_time\", config.IDLING_DEFAULT_TIMEOUT);\n            else if (this._settings.get(\"idling_time\") === 'default')\n                this._settings.set(\"idling_time\", constants.IDLING_DEFAULT_TIMEOUT);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.ASSETS_URL_PREFIX) {\n                constants.ASSETS_URL_PREFIX = config.ASSETS_URL_PREFIX;\n            }\n            if (config.BACKGROUND_IMAGES_XML_URL)\n                constants.BACKGROUND_IMAGES_XML_URL = config.BACKGROUND_IMAGES_XML_URL;\n            if (config.BACKGROUND_PATTERNS_XML_URL)\n                constants.BACKGROUND_PATTERNS_XML_URL = config.BACKGROUND_PATTERNS_XML_URL;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.DOWNTIME_RECONNECTION_TIMEOUT)\n                constants.DOWNTIME_RECONNECTION_TIMEOUT = config.DOWNTIME_RECONNECTION_TIMEOUT;\n            if (config.IDLING_MINIMAL_TIMEOUT)\n                constants.IDLING_MINIMAL_TIMEOUT = config.IDLING_MINIMAL_TIMEOUT;\n            if (config.IDLING_MAXIMUM_TIMEOUT)\n                constants.IDLING_MAXIMUM_TIMEOUT = config.IDLING_MAXIMUM_TIMEOUT;\n            if (config.PING_SENDING_INTERVAL)\n                constants.PING_SENDING_INTERVAL = config.PING_SENDING_INTERVAL;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            constants.FAVICON_DEFAULT = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT;\n            constants.FAVICON_DEFAULT_GREY = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT_GREY;\n            constants.FAVICON_MESSAGE = constants.ASSETS_URL_PREFIX + constants.FAVICON_MESSAGE;\n            constants.BACKGROUND_IMAGE = constants.ASSETS_URL_PREFIX + constants.BACKGROUND_IMAGE;\n\n\n            constants.CLIENT_LOGO = constants.ASSETS_URL_PREFIX + constants.CLIENT_LOGO;\n            constants.TOOLBAR_LOGO = constants.ASSETS_URL_PREFIX + constants.TOOLBAR_LOGO;\n\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            if (bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                self._cache.save('notifications', granted);\n                self._cache.save('endpoint_key', undefined);\n                self.check_config.resolve(true);\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    updateFaviconConnected: function () {\n        let is_disconnected = false;\n        this.accounts.each((account) => {\n            if (account.get('enabled') && (!account.isConnected() || (account.session && account.session.get('auth_failed')))){\n                is_disconnected = true;\n                return;\n            }\n        });\n        this.updateAllMessageCounterOnDisconnect(is_disconnected);\n    },\n\n    disconnectWhenConnecting: function (is_fast) {\n        this.accounts.each((account) => {\n            if (account.session && account.connection && account.get('enabled') && !account.session.get('reconnecting') && !account.session.get('connected')){\n                account.activate();\n            }\n        });\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\nimport { transliterate as query_transliterate } from 'transliteration';\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return (scrollHeight - (scrollTop + offsetHeight)) < 10;\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        if (options.close_settings && this.children.main_overlay){\n            this.children.main_overlay.hide();\n            this.children.main_overlay.$el.detach();\n            return;\n        }\n        if (!(tree && tree.main_overlay)){\n            _.each(this.children, function (view) {\n                view.hide();\n            });\n        }\n        if (!(tree && tree.main_overlay))\n            this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (tree.main_overlay && (name != 'main_overlay'))\n                return;\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        if (_.isNull(path)){\n            this.$el.addClass('hidden');\n            return;\n        } else {\n            this.$el.removeClass('hidden');\n        }\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          let query_transliterated = query_transliterate(query);\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              let saved_chat = acc.chats.getSavedChat();\n              saved_chat.set('opened', true);\n              saved_chat.item_view.updateLastMessage();\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                      || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1\n                      || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                          || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1) {\n                          let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        xabber.error(name);\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if (!attrs || !attrs.show_placeholder) {\n            new_attrs.show_placeholder = null;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || options.right_force_close)\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        new_attrs = _.extend(new_attrs, attrs);\n        let chat_item_view;\n        if (_.isUndefined(new_attrs.chat_item)){\n            chat_item_view = this.screen.get('chat_item');\n            if (chat_item_view && chat_item_view.content)\n                chat_item_view.content._prev_scrolltop = chat_item_view.content.getScrollTop() || chat_item_view.content._scrolltop;\n        }\n        if (name){\n            let tree = this.screen_map.get(name);\n            if (tree && tree.main_overlay){\n                if (!this.screen.get('previous_screen'))\n                    new_attrs.previous_screen = {...this.screen.attributes};\n            } else {\n                new_attrs.previous_screen = undefined;\n            }\n        }\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    showChatPlaceholder: function () {\n        try {\n            xabber.right_panel.$el.children().detach();\n            xabber.right_panel.$el.append(xabber.chat_placeholder.$el);\n        } catch (e) {\n            console.log(e)\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    template: templates.toolbar,\n\n    events: {\n        \"click .toolbar-logo\":             \"clickAllChats\",\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .saved-chats\":           \"showSavedChats\",\n        \"click .mentions\":              \"showNotifications\",\n        \"click .settings\":              \"showSettings\",\n        \"click .settings-modal\":              \"showSettingsModal\",\n        \"click .jingle-calls\":              \"showPlaceholder\",\n        \"click .geolocation-chats\":              \"showPlaceholder\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n    },\n\n    onUpdatedScreen: function (name) {\n        if (name === 'account_settings_modal' || name === 'settings-modal'){\n            return;\n        }\n        if ((name === 'all-chats') &&\n            (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active') ||\n                this.$('.toolbar-item:not(.toolbar-logo).chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active'))) {\n            return;\n        }\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'settings-modal', 'search', 'jingle-calls', 'geolocation-chats', 'about'], name)) {\n            this.$('.toolbar-item:not(.toolbar-logo).'+name).addClass('active');\n        }\n    },\n\n    clickAllChats: function (ev) {\n        this.$('.all-chats').click();\n    },\n\n    showAllChats: function (ev, no_unread) {\n        let $el;\n        if (ev && ev.target)\n            $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        else\n            $el = this.$('.all-chats');\n        let is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        let options = {}\n        no_unread && (options.no_unread = no_unread);\n        xabber.body.setScreen('all-chats', options);\n        xabber.trigger('show_all_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showArchive: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showSavedChats: function (ev, no_unread) {\n        if (xabber.accounts.enabled.length === 1){\n            let saved_chat = xabber.accounts.enabled[0].chats.getSavedChat();\n            saved_chat.item_view && saved_chat.item_view.open({right_contact_save: true, clear_search: false, scroll_to_chat: true});\n            this.$('.active').removeClass('active');\n            this.$('.saved-chats').addClass('active');\n            saved_chat.once(\"change:active\", () => {\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).'+xabber.body.screen.get('name')).addClass('active');\n            });\n        } else {\n            this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n                .filter('.saved-chats').addClass('active');\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_saved_chats', no_unread);\n            xabber.trigger('update_placeholder');\n        }\n    },\n\n    showNotifications: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.mentions').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_notification_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showChatsByAccount: function (account) {\n        if (this.data.get('account_filtering') === account.get('jid'))\n            this.data.set('account_filtering', null);\n        else\n            this.data.set('account_filtering', account.get('jid'));\n        if (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active')) {\n            this.showAllChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active')) {\n            this.showArchive(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')) {\n            this.showSavedChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')) {\n            this.showNotifications(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).jingle-calls').hasClass('active') ||\n            this.$('.toolbar-item:not(.toolbar-logo).geolocation-chats').hasClass('active')){\n            this.showAllChats(null, true);\n            return;\n        }\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettingsModal: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showPlaceholder: function (ev) {\n        if (xabber.chats_view && xabber.chats_view.active_chat){\n            xabber.chats_view.active_chat.model.trigger('hide_chat');\n            xabber.chats_view.active_chat = null;\n        }\n        let screen_name = this.$('.toolbar-item:not(.toolbar-logo).settings').hasClass('active') ? 'all-chats' : xabber.body.screen.get('name');\n        xabber.body.setScreen(screen_name, {chat_item: null});\n        let $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        $el.addClass('active');\n        xabber.trigger('update_placeholder');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    if (chat.get('unread') || chat.get('const_unread')){\n                        xabber.error(chat);\n                        console.log(chat.get('unread'));\n                        console.log(chat.get('const_unread'));\n                    }\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n        xabber.recountAllMessageCounter();\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        if (c >= 100)\n            c = '99+';\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        if (document.fullscreenElement) {\n            document.exitFullscreen();\n        } else if(this.$el.length) {\n            this.$el[0].requestFullscreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function (status) {\n        let status_text;\n        if (this.model.get('status') == 'device_busy')\n            status_text = 'dialog_jingle_message__status_device_busy';\n        else if (this.model.get('status') == 'busy')\n            status_text = 'dialog_jingle_message__status_busy';\n        else if (this.model.get('status') == 'accepted_another_device')\n            status_text = 'dialog_jingle_message__status_another_device_accepted';\n        else\n            status_text = 'dialog_jingle_message__status_disconnected';\n        this.updateStatusText(xabber.getString(status_text));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n\n                        let xPercent = (((this.$el.offset().left - this.pos1)/window.innerWidth) * 100),\n                            yPercent = (((this.$el.offset().top - this.pos2)/window.innerHeight) * 100);\n\n\n                        // set the element's new position:\n                        this.$el.css('left', xPercent + '%');\n                        this.$el.css('top', yPercent + '%');\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            let video_sources = {\n                src: options.player.video_src,\n                provider: options.player.provider,\n            };\n            options.player.type && (video_sources.type = options.player.type);\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    video_sources,\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        });\n\n        if (options.player && options.player.video_file && options.player.video_file.key) {\n            options.player.key = options.player.video_file.key;\n            options.player.video_file.type && (options.player.type = options.player.video_file.type);\n        }\n\n        if (options.player && options.player.key && options.player.chat_item.model && options.player.video_src && !options.player.video_decrypted){\n            options.player.chat_item.model.messages.decryptFile(options.player.video_src, options.player.key).then((result) => {\n                options.player.video_src = result;\n                options.player.video_decrypted = true;\n                dfd.resolve();\n            });\n        } else\n            dfd.resolve();\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.settings_modal,\n    ps_selector: '.settings-panel',\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"click .btn-back\": \"backToMenu\",\n        \"click .btn-back-subsettings\": \"backToSubMenu\",\n        \"click .settings-tabs-wrap.global-settings-tabs .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .desktop-notifications-clue-wrap b\": \"goToWebNotifications\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.idling label\": \"setIdling\",\n        \"change #idle_timeout\": \"setIdlingTimeout\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        // \"click .setting.volume-enable label\": \"setNotificationsVolumeEnabled\",\n        \"click .private-notifications label\": \"setPrivateNotifications\",\n        \"click .group-notifications label\": \"setGroupNotifications\",\n        \"click .notifications-lever label\": \"setNotifications\",\n        \"click .jingle-calls label\": \"setJingleCalls\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .client-main-color-item\": \"chooseMainColor\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function (options) {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n        this.model.on('change:language', this.updateLanguage, this);\n        this.model.on('change:avatar_shape', this.updateAvatarLabel, this);\n        this.model.on('change:notifications_private', this.updateSoundsLabel, this);\n        this.model.on('change:notifications_group', this.updateSoundsLabel, this);\n        this.model.on('change:call_attention', this.updateSoundsLabel, this);\n        this.model.on('change:private_sound', this.updateSoundsLabel, this);\n        this.model.on('change:group_sound', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_private_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_group_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_call', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_dialtone', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_attention', this.updateSoundsLabel, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        $(document).on(\"keyup\", (ev) => {\n            if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible')) {\n                this.closeSettings();\n            }\n        });\n        xabber.once('accounts_ready',() => {\n            xabber.accounts.on(\"list_changed add change:enabled destroy\", this.updateAccounts, this);\n        })\n    },\n\n    render: function (options) {\n        let settings = this.model.attributes,\n            lang = settings.language;\n        this.updateSounds();\n        this.updateLanguages();\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.notifications-lever input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.jingle-calls input[type=checkbox]')\n            .prop({checked: settings.jingle_calls});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.sound input[type=radio][name=attention_sound]').prop('disabled', !settings.call_attention)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_private));\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_group));\n        this.$('.desktop-notifications-clue-wrap').hideIf(settings.notifications);\n        this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !settings.notifications);\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.idling input[type=checkbox]')\n            .prop({checked: settings.idling});\n        this.$('#idle_timeout')\n            .val(settings.idling_time).prop('disabled', !settings.idling);\n        // this.$(`#notifications_volume_enable`)\n        //     .prop('checked', settings.notifications_volume_enabled);\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${settings.main_color}\"]`).addClass('chosen-client-color');\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        // this.$('.volume-setting .disabled').switchClass('hidden', settings.notifications_volume_enabled);\n        // this.$('#notifications_volume').prop('disabled', !settings.notifications_volume_enabled);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateAvatarLabel();\n        this.updateSoundsLabel();\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.updateLanguage();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        this.$('.left-column').removeClass('hidden');\n        this.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back').removeClass('hidden');\n        this.$('.btn-back-subsettings').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.$('.desktop-notifications-clue-wrap b').addClass('client-text-color-500');\n        this.updateAccounts(options);\n        this.updateHeight();\n        this.updateSliders();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateAccounts: function (options) {\n        if (this.settings_single_account_modal){\n            this.settings_single_account_modal.removeChild('blocklist');\n            this.removeChild('single_account');\n        }\n        if (xabber.accounts.length === 1 && xabber.accounts.enabled.length){\n            this.$('.accounts-info-wrap').addClass('hidden');\n            this.$('.btn-add-account').addClass('hidden');\n            this.$('.single-account-info-wrap').removeClass('hidden');\n            let first_account = xabber.accounts.models[0];\n            this.single_account_has_rendered = false;\n            this.settings_single_account_modal = this.addChild('single_account', xabber.AccountSettingsSingleModalView, {\n                model: first_account,\n                forced_ps_container: this.ps_container,\n                single_account_modal: true,\n                el: this.$('.single-account-info-wrap .single-account-info')[0]\n            });\n            if (!this.single_account_has_rendered){\n                this.settings_single_account_modal.show(null, options);\n            }\n            first_account.trigger('render_single_settings', this.settings_single_account_modal);\n            this.settings_single_account_modal.addChild('blocklist', xabber.BlockListView, {\n                account: first_account,\n                el: this.settings_single_account_modal.$('.block-list-view-wrap')[0]\n            });\n        } else {\n            this.$('.btn-add-account').removeClass('hidden');\n            this.$('.accounts-info-wrap').removeClass('hidden');\n            this.$('.single-account-info-wrap').addClass('hidden');\n        }\n        this.updateHeight();\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        if (blur_switched)\n            this.$('#blur')[0].value = appearance.blur;\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        if (vignetting_switched)\n            this.$('#vignetting')[0].value = appearance.vignetting;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    jumpToBlock: function (ev) {\n        if ($(ev.target).closest('.switch').length)\n            return;\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name'));\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back').addClass('hidden');\n            this.$('.btn-back-subsettings').removeClass('hidden');\n            this.$('.btn-back-subsettings').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        if ($tab.attr('data-block-name') === 'interface_language')\n            this.$('.settings-panel-head .description').removeClass('hidden');\n        else\n            this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column.main-left-column').hasClass('hidden'))\n            height = this.$('.left-column.main-left-column').height();\n        if (!this.$('.right-column.main-right-column').hasClass('hidden'))\n            height = this.$('.right-column.main-right-column').height();\n        this.ps_container.css('height', height + 'px');\n        setTimeout(() => {\n            this.updateScrollBar();\n        }, 500)\n    },\n\n    updateSliders: function () {\n        this.$('.range-field.range-field-design').each((idx, item) => {\n            let $input = $(item).find('input'),\n                range_min = $input.attr('min'),\n                range_max = $input.attr('max'),\n                range_value = $input.val(),\n                left =  ((182 / (range_max - range_min)) * (range_value - range_min)) + 10;\n            $(item).find('span.thumb').css('left', left + 'px');\n            if ($input.hasClass('materialize-timer'))\n                $(item).find('span.value').text(range_value + 's');\n            else\n                $(item).find('span.value').text(range_value);\n        })\n\n    },\n\n    updateSounds: function () {\n\n        this.$('.notification-field').html('<form action=\"#\"></form>');\n\n        sounds.notifications.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'private_sound',\n                    input_id: `${this.cid}-private-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.notification-field:not(.group-notification-field)').append(element);\n                let group_element = $(templates.setting_radio_input({\n                    input_name: 'group_sound',\n                    input_id: `${this.cid}-group-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.group-notification-field').append(group_element);\n            }\n        });\n\n        let element_no_sound = $(templates.setting_radio_input({\n            input_name: 'private_sound',\n            input_id: `${this.cid}-private-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.notification-field:not(.group-notification-field)').prepend(element_no_sound);\n\n        let group_element_no_sound = $(templates.setting_radio_input({\n            input_name: 'group_sound',\n            input_id: `${this.cid}-group-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.group-notification-field').prepend(group_element_no_sound);\n\n        this.$('.dialtone-field').html('<form action=\"#\"></form>');\n        sounds.dialtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'dialtone_sound',\n                    input_id: `${this.cid}-dialtone-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.dialtone-field').append(element);\n            }\n        });\n\n        this.$('.ringtone-field').html('<form action=\"#\"></form>');\n        sounds.ringtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'call_sound',\n                    input_id: `${this.cid}-call-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.ringtone-field').append(element);\n            }\n        });\n\n        this.$('.attention-field').html('<form action=\"#\"></form>');\n        sounds.attention.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'attention_sound',\n                    input_id: `${this.cid}-attention-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.attention-field').append(element);\n            }\n        });\n\n    },\n\n    updateLanguages: function () {\n        this.$('.languages-list').html('<form action=\"#\"></form>');\n\n        let default_element = $(templates.setting_language_radio_input({\n            input_name: 'language',\n            input_id: `${this.cid}-default`,\n            label: xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]),\n            value: 'default',\n            progress: {},\n        }));\n\n        this.$('.languages-list').append(default_element);\n\n        if (!window.navigator.language.includes('en')){\n            let second_lang = xabber.get(\"default_language\") === 'en' ? window.navigator.language : 'en',\n                second_prog, second_prog_text,\n                second_locale = Object.keys(client_translation_progress)\n                    .find(key => !second_lang.indexOf(key)) || constants.languages_another_locales[second_lang] && Object.keys(client_translation_progress)\n                    .find(key => !constants.languages_another_locales[second_lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (second_locale) {\n                second_prog = client_translation_progress[second_locale];\n                second_prog_text = (second_prog == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                    : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${second_prog}%`]);\n\n                let second_element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${second_lang}`,\n                    label: constants.languages[second_lang],\n                    value: second_lang,\n                    progress: {\n                        text: second_prog_text\n                    },\n                }));\n                this.$('.languages-list').append(second_element);\n            }\n        }\n\n\n        for (let lang in constants.languages) {\n            if (!lang || lang == xabber.get(\"default_language\") || lang == window.navigator.language)\n                continue;\n\n            let locale = Object.keys(client_translation_progress)\n                .find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress)\n                .find(key => !constants.languages_another_locales[lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (locale) {\n                let progress = client_translation_progress[locale],\n                    progress_text = (progress == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                        : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${progress}%`]);\n\n                let element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${lang}`,\n                    label: constants.languages[lang],\n                    value: lang,\n                    progress: {\n                        text: progress_text\n                    },\n                }));\n                this.$('.languages-list').append(element);\n            }\n        }\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head')\n        else\n            this.$('.settings-panel-head').addClass('lined-head')\n    },\n\n    closeSettings: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        if (xabber.body.screen && xabber.body.screen.get('previous_screen')){\n            let previous_screen = xabber.body.screen.get('previous_screen');\n            previous_screen.close_settings = true;\n            xabber.body.setScreen(previous_screen.name, previous_screen);\n            xabber.body.screen.attributes.close_settings = undefined;\n        } else\n            xabber.toolbar_view.showAllChats();\n    },\n\n    backToMenu: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        let $tab = $(ev.target).closest('.btn-back-subsettings'),\n            block_name = $tab.attr('data-subblock-parent-name'),\n            $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent)\n        } else {\n            this.$('.btn-back').removeClass('hidden');\n            this.$('.btn-back-subsettings').addClass('hidden');\n        }\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    goToWebNotifications: function (ev) {\n        this.$('.settings-tab[data-block-name=\"web-notifications\"]').click();\n    },\n\n    setIdling: function (ev) {\n        let value = !this.model.get('idling');\n        this.model.save('idling', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.idling').find('input').prop('checked', value);\n        this.$('#idle_timeout').prop('disabled', !value);\n    },\n\n    setIdlingTimeout: function (ev) {\n        let $target = $(ev.target),\n            value = $(ev.target).val();\n        value = parseInt(value);\n        if (_.isNaN(value)){\n            value = constants.IDLING_DEFAULT_TIMEOUT;\n        } else if (value < constants.IDLING_MINIMAL_TIMEOUT){\n            value = constants.IDLING_MINIMAL_TIMEOUT;\n        }\n        this.model.save('idling_time', value);\n        $target.val(value);\n        ev.preventDefault();\n    },\n\n    setNotificationsVolumeEnabled: function (ev) {\n        ev.preventDefault();\n        let value = !this.model.get('notifications_volume_enabled');\n        this.model.save('notifications_volume_enabled', value);\n        this.$('#notifications_volume_enable').prop('checked', value);\n        this.$('.volume-setting .disabled').switchClass('hidden', value);\n        this.$('#notifications_volume').prop('disabled', !value);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications');\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                    this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                    this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                    this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                    this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                    this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n        $(ev.target).closest('.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n        $(ev.target).closest('.group-notifications').find('input').prop('checked', value);\n    },\n\n    setJingleCalls: function (ev) {\n        let value = !this.model.get('jingle_calls');\n        this.model.save('jingle_calls', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !value)\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !value)\n        $(ev.target).closest('.jingle-calls').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    chooseMainColor: function (ev) {\n        let color = $(ev.target).closest('.client-main-color-item').attr('data-value');\n        this.model.save('main_color', color);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${color}\"]`).addClass('chosen-client-color');\n        xabber.trigger('update_main_color');\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#vignetting')[0].value : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#blur')[0].value : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value,\n            locale = Object.keys(client_translation_progress).find(key => !value.indexOf(key)) || constants.languages_another_locales[value] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[value].indexOf(key)),\n            progress = client_translation_progress[locale],\n            platform_text;\n\n        (value == 'default') && (progress = 100);\n\n        if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && value === 'default') || value === 'en')) {\n            platform_text = xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 100) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_full_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translations\")}</a>`, constants.SHORT_CLIENT_NAME, ])\n             + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 0) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_no_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation\")}</a>`]);\n        } else {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_partial_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation_team\")}</a>`, constants.SHORT_CLIENT_NAME])\n                + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        }\n        let modal_classes = ['change-language-modal'], inverted_buttons;\n        if (progress == 0){\n            modal_classes.push('change-language-modal-no-ok');\n        } else if (progress != 0 && progress < 70){\n            inverted_buttons = true;\n        }\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"),\n            platform_text,\n            {modal_class: modal_classes, no_dialog_options: true, inverted_buttons: inverted_buttons},\n            { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    updateLanguage: function () {\n        if (this.model.get('language') === 'default'){\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]));\n        } else {\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(constants.languages[this.model.get('language')]);\n        }\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n\n        if (!xabber.settings.language)\n            return;\n\n        let lang = xabber.settings.language,\n            locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key)),\n            progress = client_translation_progress[locale];\n\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && lang === 'default') || lang === 'en')) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation_english\", [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" class=\"email-link\" href='mailto:${constants.EMAIL_FOR_JOIN_TRANSLATION}'>${constants.EMAIL_FOR_JOIN_TRANSLATION}</a>`, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME]);\n            }\n            platform_text = xabber.getString(\"settings__interface_language__text_description_platform\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${constants.PROJECT_CROWDIN_URL}</a>`]);\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    },\n\n    updateAvatarLabel: function () {\n        let shape = this.model.get('avatar_shape'), label_text;\n        if (shape === 'circle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_circle\");\n        if (shape === 'squircle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_squircle\");\n        if (shape === 'octagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_octagon\");\n        if (shape === 'hexagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_hexagon\");\n        if (shape === 'pentagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_pentagon\");\n        if (shape === 'rounded')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_rounded\");\n        if (shape === 'star')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_star\");\n        this.$('.settings-tab[data-block-name=\"avatars\"] .settings-block-label').text(label_text);\n    },\n\n    updateSoundsLabel: function () {\n        let sound_private_value = this.model.get('private_sound') && this.model.get('notifications_private') ? this.model.get('sound_on_private_message') : '',\n            sound_group_value = this.model.get('group_sound') && this.model.get('notifications_group') ? this.model.get('sound_on_group_message') : '',\n            sound_on_attention = this.model.get('call_attention') ? this.model.get('sound_on_attention') : '',\n            sound_private_text, sound_group_text, sound_on_attention_text;\n\n\n        if (sound_private_value === '')\n            sound_private_text = 'No sound';\n        else\n            sound_private_text = sound_private_value.replace('_', ' ');\n\n        if (sound_group_value === '')\n            sound_group_text = 'No sound';\n        else\n            sound_group_text = sound_group_value.replace('_', ' ');\n\n        if (sound_on_attention === '')\n            sound_on_attention_text = 'No sound';\n        else\n            sound_on_attention_text = sound_on_attention.replace('_', ' ');\n\n        this.$('.settings-tab[data-block-name=\"chats-notifications\"] .settings-block-label').text(sound_private_text);\n        this.$('.settings-tab[data-block-name=\"groupchats-notifications\"] .settings-block-label').text(sound_group_text);\n        this.$('.settings-tab[data-block-name=\"attention-calls\"] .settings-block-label').text(sound_on_attention_text);\n    },\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_modal_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        if (this.type == 'repeating-pattern') {\n            this.onGetPatternsCallback(env.backgroundPatternsXml)\n        } else {\n            this.onGetImagesCallback(env.backgroundImagesXml);\n        }\n        callback && callback();\n    },\n\n    onGetPatternsCallback: function (data) {\n        if (!(data && data['background-patterns'] && data['background-patterns'].image))\n            return;\n        let images = [];\n        data = data['background-patterns'].image;\n        data.forEach((item) => {\n            images.push({thumbnail: item});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        if (!(data && data['background-images'] && data['background-images'].image))\n            return;\n        let images = [];\n        data = data['background-images'].image;\n        data.forEach((item) => {\n            let thumbnail = item.thumbnail,\n                fs_img = item['fullscreen-image'];\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        if ((this.type == 'repeating-pattern' && !this.model.patterns_library) || (this.type == 'images' && !this.model.img_library))\n            return;\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_modal_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev && ev.target && ev.target.closest ? ev.target.closest('.drag-handle') : $(ev.target).closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 10,\n            out_duration: 10,\n            opacity: 0.4\n        },\n        close: {out_duration: 10}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval && is_disconnected === undefined)\n            return;\n        clearInterval(this._blink_interval);\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1 || $icon.attr('href').indexOf(this.cache.favicon_gray) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT_GREY) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval || is_disconnected !== undefined) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    updateAllMessageCounterOnDisconnect: function (is_disconnected) {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon(is_disconnected);\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon(is_disconnected);\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_msg += incoming_subscriptions;\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        if (!this.get('focused')) {\n            this.set('all_msg_counter', this.setAllMessageCounter());\n        }\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = sounds.all_sounds.find(item => item.file_name === name);\n        if (filename) {\n            let audio = new window.Audio(filename.audio);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    },\n\n\n    initIdleJS: function () {\n        if (this.idleJs)\n            this.idleJs.stop();\n        let self = this,\n            idling_time = self._settings.get('idling_time') * 1000\n\n        this.idleJs = new idleJs({\n            idle: idling_time, // idle time in ms\n            events: ['mousemove', 'keydown', 'mousedown', 'touchstart', 'focus', 'blur'], // events that will trigger the idle resetter\n            onIdle: () => {\n                if (self._settings.get('idling'))\n                    self.set('idle', true);\n                else\n                    self.set('idle', false);\n            } , // callback function to be executed after idle time\n            onActive:() => {\n                self.set('idle', false);\n            }  , // callback function to be executed after back form idleness\n            keepTracking: true, // set it to false if you want to be notified only on the first idleness change\n            startAtIdle: false // set it to true if you want to start in the idle state\n        })\n        this.idleJs.start();\n    },\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this._settings.on(\"change:idling_time\", this.initIdleJS, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    this.initIdleJS();\n\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.main_overlay_panel = this.body.addChild('main_overlay', this.NodeView, {\n        classlist: 'main-overlay-wrap hidden'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_modal_view = this.main_overlay_panel.addChild(\n        'settings_modal', this.SettingsModalView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    utils = env.utils;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    },\n\n    submit_unregister: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER}).c('remove');\n\n        conn._addSysHandler(this._submit_unregister_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    _submit_unregister_cb: function (stanza) {\n        var i, error = null, conn = this._connection;\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Unregistration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Unregistration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('secret').t(old_token.token).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('XABBER_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('EXPLICIT_MESSAGE_ENCRYPTION', 'urn:xmpp:eme:0');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditModalView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-modal-wrap account-vcard-edit-wrap',\n    template: templates.vcard_edit_modal,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function (options) {\n        options.$el.html('');\n        options.$el.append(this.$el);\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')},\n    pretty_datetime_date = (timestamp) => { return utils.pretty_datetime(timestamp, 'MMM DD, YYYY')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            xabber.on(\"start_accounts\", () => {\n                this.trigger('start');\n            }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isReconnecting: function () {\n            return this.session && this.session.get('reconnecting');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails && res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            jid += '/xabber-web-' + xabber.get('client_id');\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            } else if (status === Strophe.Status.ERROR && (condition === 'policy-violation')) {\n                this.onAuthFailed(condition);\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({\n                    connected: true,\n                    reconnected: true,\n                    reconnecting: false,\n                    conn_retries: 0\n                });\n            } else if (status === Strophe.Status.ERROR && (condition === 'policy-violation')) {\n                this.onAuthFailed(condition);\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.change_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.change_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.change_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.change_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.change_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        unregisterAccountCallback: function (status, condition) {\n            if (this.unregister_account_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.unregister_account_view.close();\n                    this.trigger('deactivate', this);\n                    this.deleteAccount();\n                    xabber.settings_modal_view.closeSettings();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"account_unregister_failed\") + condition});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"wrong_password\")});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.unregister_account_view.data.set('step', 1);\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.unregister_account_connection_manager = undefined;\n                    this.unregister_account_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function (text) {\n            if (!this.auth_view && !text){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            } else if (text){\n                if (this.auth_view)\n                    return;\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                    no_reconnect: true\n                });\n                let dialog_text = xabber.getString(\"XMPP_EXCEPTION\") + \": \" + text;\n                utils.dialogs.ask_extended(xabber.getString(\"error\"), xabber.getString(\"modal_policy_violation_text\"),\n                    {modal_class: 'modal-policy-violation', no_dialog_options: true, quoted_text: text, cancel_button_main: true},\n                    {\n                        ok_button_text: xabber.getString(\"disable_account\"),\n                        cancel_button_text: xabber.getString(\"account_settings\"),\n                        optional_button: 'account-reconnect',\n                        optional_button_text: xabber.getString(\"account_reconnect\")\n                    }).done((res) => {\n                    if (res){\n                        if (res === 'account-reconnect')\n                            this.reconnect();\n                        else {\n                            this.save('enabled', false);\n                            this.deactivate()\n                        }\n                    } else {\n                        this.showSettingsModal();\n                    }\n                });\n                return;\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function (callback) {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('public-label').text(),\n                        omemo_id = $token.find('omemo-id').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address, omemo_id: omemo_id});\n                });\n                this.x_tokens_list = tokens_list;\n                callback && callback();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                if (this._fast_interval_worker)\n                    this._fast_interval_worker.terminate();\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n                if (this.connection && !this.connection.disconnecting\n                    && this.connection.authenticated && this.connection.connected){\n                    this.getVCard();\n                    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n                        this.trigger('ready_to_get_roster');\n                }\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: this.retraction_version};\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQ(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                if (msg.collection && msg.collection.chat && msg.collection.chat.get('group_chat'))\n                    $(msg_iq).append(\"<retry to='\" + msg.collection.chat.get('jid') + \"' xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                else\n                    $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            this.showSettingsModal(block_name);\n        },\n\n        showSettingsModal: function (block_name) {\n            if (xabber.accounts.length === 1){\n                xabber.body.setScreen('settings-modal', {account_block_name: block_name});\n                xabber.trigger('update_placeholder');\n                return;\n            }\n            let has_modal_settings = !_.isUndefined(this.settings_account_modal);\n            if (!has_modal_settings)\n                this.settings_account_modal = new xabber.AccountSettingsModalView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings_modal', {\n                account: this, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_modal_settings) {\n                this.trigger('render_settings');\n                this.settings_account_modal.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_account_modal.$('.block-list-view-wrap')[0]\n                });\n            }\n            this.settings_account_modal.updateHeight();\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_account_modal && this.settings_account_modal.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings, dont_change_screen) {\n            this.show_settings_after_delete = show_settings;\n            this.dont_change_screen_after_delete = dont_change_screen;\n            let screen = xabber.body.screen;\n            if (screen.get('account') && screen.get('account') === this && screen.get('name') === 'account_settings_modal')\n                this.show_settings_after_delete = true;\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.omemo){\n                this.omemo.destroy();\n                this.omemo = undefined;\n            }\n            this.groups_settings\n            if (this.groups_settings){\n                this.groups_settings.clearStorage();\n            }\n            if (this.groupchat_settings){\n                this.groupchat_settings.destroy();\n                this.groupchat_settings = undefined;\n            }\n            if (this.chat_settings){\n                this.chat_settings.destroy();\n                this.chat_settings = undefined;\n            }\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations && this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster && this.cached_roster.deleteDataBase();\n            this.cached_server_features && this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback, errback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        testGalleryFileSlot: function(file, callback) {\n            if (this.get('gallery_token') && this.get('gallery_url')){\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: {size: file.size, name: file.name, hash: sha1(bytes)},\n                        success: (response) => {\n                            console.log(response);\n                            callback && callback(response);\n                        },\n                        error: (response) => {\n                            console.log(response);\n                            callback && callback(response.responseJSON);\n                        }\n                    });\n                }\n                reader.onerror = (e) => {\n                    console.log(reader.error);\n                    callback && callback(false)\n                };\n                reader.readAsDataURL(file);\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature, errback) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                this.set('gallery_auth', true)\n                this.gallery_iq_answered = false;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            this.gallery_auth_errback = errback;\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                            setTimeout(() => {\n                                if (!this.gallery_iq_answered)\n                                    this.handleCommonGalleryErrors({status: 500}, errback)\n                            }, 5000)\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response, errback)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code) {\n                this.gallery_iq_answered = true;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response, errback) {\n            !errback && (errback = this.gallery_auth_errback);\n            this.gallery_auth_errback = undefined;\n            let err_text;\n            response && response.responseJSON && response.responseJSON.error && (err_text = response.responseJSON.error);\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                    errback && errback('No Media Gallery server feature');\n                }\n            } else if (response.status === 500) {\n                this.set('gallery_url', null);\n                this.set('gallery_token', null);\n                errback && errback(xabber.getString(\"media_gallery_server_error\"));\n            } else {\n                errback && errback('Media Gallery error - ' + (err_text || response.status));\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData(),\n                        metadata = {};\n                    file.duration && (metadata.duration = file.duration);\n                    formData.append('file', file, file.name);\n                    formData.append('metadata', JSON.stringify(metadata));\n                    if (file.size)\n                        formData.append('size', file.size);\n                    if (file.voice)\n                        formData.append('media_type', file.type + '+voice');\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/avatar/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id)\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({id: file_id}),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n    },\n\n    onQuit: function () {\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount(true);\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login', {chat_item: null});\n    },\n\n    onQuitAccounts: function () {\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length);\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings-modal', {account_block_name: null});\n            } else if (account.dont_change_screen_after_delete) {\n                return;\n            } else {\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .filter-chats': 'filterChats',\n        'click .account-item-avatar-wrap': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n        xabber.updateFaviconConnected();\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        xabber.updateFaviconConnected();\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    filterChats: function (ev) {\n        ev.stopPropagation();\n        let is_single = $(ev.target).closest('.single-item').length;\n        if (is_single){\n            xabber.body.setScreen('settings-modal', {account_block_name: null});\n            xabber.trigger('update_placeholder');\n            return;\n        }\n        xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        if (xabber.toolbar_view.data.get('account_filtering') != this.model.get('jid'))\n            this.$el.addClass('active');\n        xabber.toolbar_view.showChatsByAccount(this.model);\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        this.$el.find('.single-item').removeClass('single-item');\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n            if (this.model.enabled.length === 1)\n                this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        });\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.$el.find('.single-item').removeClass('single-item');\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardModalView = xabber.VCardView.extend({\n    template: env.templates.vcard.vcard_modal,\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function ($el) {\n        this.vcard_edit_modal = new xabber.VCardEditModalView({model: this.model});\n        this.vcard_edit_modal.show({$el: $el});\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .gallery-file .checkbox-field\": \"selectFile\",\n        \"click .btn-delete-selection\": \"deleteSelectedFiles\",\n        \"click .settings-tab:not(.settings-deletion-button)\": \"onTabClick\",\n        \"click .show-deletion\": \"showDeleteFilesView\",\n        \"click .btn-back-gallery\": \"backToMain\",\n        \"click .gallery-file\": \"onClickFile\",\n        \"click .btn-close-selection\": \"disableFilesSelect\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            if (this.current_options.type === 'avatars'){\n                this.getAvatars(this.current_options)\n            } else {\n                this.getFiles(this.current_options)\n            }\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (this.parent){\n                this.parent.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                this.parent.updateHeight();\n            }\n            if (xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label').length){\n                xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                xabber.settings_modal_view.updateHeight();\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice');\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').addClass('grid');\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        }\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.settings-tab'),\n            file_type = $target.attr('data-media-type'),\n            tab_header = $target.attr('data-header-text');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(tab_header);\n        this.parent.$('.btn-select-files').removeClass('hidden');\n        this.parent.$('.btn-sorting').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.$('.gallery-wrap').addClass('hidden');\n        this.$('.media-gallery-items-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').attr('data-value', file_type);\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    backToMain: function (ev) {\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.parent.$('.btn-select-files').addClass('hidden');\n        this.parent.$('.btn-sorting').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(xabber.getString(\"account_cloud_storage\"));\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.$('.gallery-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').addClass('hidden');\n        this.updateStorage();\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    showDeleteFilesView: function (ev) {\n        xabber.trigger('show_delete_files', {model: this.account, gallery_view: this});\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.media-gallery-items-wrap').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove();\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: false,\n                }));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(`<div class=\"no-files\">${xabber.getString(\"no_files\")}</div>`)\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n        if (this.parent && this.parent.updateHeight)\n            this.parent.updateHeight();\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({id: file_id}),\n                    success: (response) => {\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    enableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').addClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').addClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.onSelectFile();\n    },\n\n    disableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').removeClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.$('.gallery-file .checkbox-field input:checked').prop('checked', false);\n    },\n\n    selectFile: function (ev) {\n        let $target_input = $(ev.target).closest('.checkbox-field').find('input');\n        $target_input.prop('checked', !$target_input.prop('checked'));\n        this.onSelectFile();\n    },\n\n    onSelectFile: function () {\n        if (!this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        let selected_count = this.$('.gallery-file .checkbox-field input:checked').length,\n            selected_header;\n        selected_header = xabber.getQuantityString(`media_gallery_selected_${this.$('.media-gallery-items-wrap').attr('data-value')}_header`, selected_count);\n        this.$('.gallery-selection-head').text(selected_header);\n\n        this.$('.gallery-file .checkbox-field input:checked').closest('.gallery-file').addClass('selected-gallery-file');\n        this.$('.gallery-file .checkbox-field input:not(:checked)').closest('.gallery-file').removeClass('selected-gallery-file');\n    },\n\n    deleteSelectedFiles: function () {\n        this.$('.gallery-file .checkbox-field input:checked').each((idx, item) => {\n            let file_id = $(item).closest('.gallery-file').attr('data-id');\n            if (file_id){\n                if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n                    this.deleteAvatar({target: item});\n                } else {\n                    this.deleteFile({target: item});\n                }\n            }\n        })\n        this.disableFilesSelect();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.DeleteFilesFromGalleryView = xabber.BasicView.extend({\n    className: 'modal main-modal delete-files-modal',\n    ps_selector: '.modal-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    template: templates.delete_files_media_gallery,\n    events: {\n        \"click .btn-confirm\": \"deleteFilesFiltered\",\n        \"click .btn-delete-files-percent\": \"deletePercent\",\n        \"click .btn-cancel\": \"close\",\n        \"click .gallery-file\": \"onClickFile\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.gallery_view = options.gallery_view;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$el.removeClass('wide-deletion');\n        this.$('.media-gallery-delete-items-wrap').addClass('hidden');\n        this.$('.deletion-variants').removeClass('hidden');\n        this.$('.modal-footer').addClass('hidden');\n        this.$('.gallery-files').addClass('hidden');\n        this.$('.list-variant.tab').addClass('hidden');\n        this.$('.delete-files-preview-container').addClass('hidden');\n        this.$('.setting-name').addClass('hidden');\n        this.$('.delete-files-preview-wrap .gallery-files').html('');\n        this.$('.media-gallery-delete-items-wrap .no-files').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files\"));\n        this.updateScrollBar();\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target),\n            gallery;\n\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.gallery_view.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    deletePercent: function (ev) {\n        let $target = $(ev.target).closest('.btn-delete-files-percent'),\n            percent = $target.attr('data-value');\n        this.$el.addClass('wide-deletion');\n        this.$('.deletion-variants').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files_header\"));\n        this.updateScrollBar();\n        let options = {percent: percent}\n        this.current_page_preview = 1\n        $(env.templates.contacts.preloader()).appendTo(this.$('.modal-content'))\n        this.getFilesForDeletion(options);\n    },\n\n    getFilesForDeletion: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        let current_page = this.current_page_preview;\n                        if (current_page < response.total_pages){\n                            this.current_page_preview++;\n                            options.page = this.current_page_preview;\n                            this.getFilesForDeletion(options)\n                        } else {\n                            this.$('.preloader-wrapper').remove();\n                            this.$('.modal-footer').removeClass('hidden');\n                            this.$('.media-gallery-delete-items-wrap').removeClass('hidden');\n                            this.updateScrollBar();\n                        }\n                        this.renderForDeletion(response);\n                        if (current_page === 1 && response.items && response.items.length){\n                            this.date_lte_for_deletion = response.items[0].created_at;\n                        } else if (current_page === 1) {\n                            this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                        }\n                    },\n                    error: (response) => {\n                        console.log(response)\n                        this.$('.preloader-wrapper').remove();\n                        this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                        this.updateScrollBar();\n                    }\n                });\n            }\n        });\n    },\n\n    renderForDeletion: function (response) {\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: true,\n                }));\n                if (item.media_type && item.media_type.includes('image')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-images'));\n                    this.$('.delete-files-images').removeClass('hidden');\n                } else if (item.media_type && item.media_type.includes('video')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-videos'));\n                    this.$('.delete-files-videos').removeClass('hidden');\n                } else if (item.media_type && item.media_type.includes('+voice')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-voices'));\n                    this.$('.delete-files-voices').removeClass('hidden');\n                } else {\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-files'));\n                    this.$('.delete-files-files').removeClass('hidden');\n                }\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n            let dropdown_settings = {\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'right'\n            };\n            this.$('.dropdown-button').dropdown(dropdown_settings)\n            this.$('.list-variant.tab:not(.hidden)').length && this.$('.list-variant.tab:not(.hidden)').first().click();\n            this.updateScrollBar();\n        }\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (!this.date_lte_for_deletion)\n            return\n\n        utils.dialogs.ask(xabber.getString(\"media_gallery_delete_files_confirm_delete_header\"), xabber.getString(\"media_gallery_delete_files_confirm_delete_text\"),\n            null, { ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (!res)\n                return;\n            $(env.templates.contacts.preloader()).appendTo(this.$('.modal-footer'))\n            this.account.testGalleryTokenExpire(() => {\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                        url: this.account.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({date_lte: this.date_lte_for_deletion}),\n                        success: (response) => {\n                            console.log(response);\n                            this.close();\n                        },\n                        error: (response) => {\n                            this.account.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        this.gallery_view.updateStorage();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AccountSettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.account_settings_modal,\n    ps_selector: '.settings-panel',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-back\": \"showSettings\",\n        \"click .btn-back-settings\": \"backToMenu\",\n        \"click .btn-back-subsettings-account\": \"backToSubMenu\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .settings-tab[data-block-name='status']\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-account):not(.settings-non-tab)\": \"jumpToBlock\",\n        \"click .tokens-wrap .settings-tab.token-wrap\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\",\n        \"click .settings-tab.unregister-account\": \"unregisterAccount\",\n\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"click .color-picker-button\": \"changeColor\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-revoke-token\": \"revokeXToken\",\n        \"click .devices-wrap .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .btn-select-files\": \"enableFilesSelect\",\n        \"click .all-sessions .device-encryption.active\": \"openFingerprint\",\n        \"click .device-information-trust\": \"openFingerprintDevice\",\n        \"click .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function (options) {\n        if (options.forced_ps_container){\n            this.ps_container = options.forced_ps_container;\n        }\n        this.status_field = new xabber.StatusMessageModalWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardModalView,\n            {model: this.model,});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.groups.on(\"change\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"add\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"destroy\", this.updateGroupsLabel, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"update_omemo_devices\", this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateXTokens, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n        if (options && !options.single_account_modal) {\n            $(document).on(\"keyup.account_settings_modal\", (ev) => {\n                if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible') && !options.single_account_modal) {\n                    this.closeSettings();\n                }\n            });\n        }\n    },\n\n    render: function (options) {\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.$('.btn-sorting').addClass('hidden');\n        this.$('.settings-panel-head-title').removeClass('hidden');\n        this.$('.media-gallery-button.btn-more').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column').hasClass('hidden'))\n            height = this.$('.left-column').height();\n        if (!this.$('.right-column').hasClass('hidden'))\n            height = this.$('.right-column').height();\n        this.ps_container.css('height', height + 'px');\n        this.updateScrollBar();\n    },\n\n    updateBlockedLabel: function () {\n        if (!(this.model.blocklist && this.model.blocklist.list))\n            return;\n\n        let blocked_count = Object.keys(this.model.blocklist.list).length,\n            label_text = blocked_count === 0 ? xabber.getString(\"no_entries\") : xabber.getQuantityString(\"entry_count\", blocked_count);\n        this.$('.settings-tab[data-block-name=\"blocklist\"] .settings-block-label').text(label_text);\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head');\n        else\n            this.$('.settings-panel-head').addClass('lined-head');\n        if (this.getScrollTop() >= 180)\n            this.$('.settings-account-head').addClass('head-scrolled');\n        else\n            this.$('.settings-account-head').removeClass('head-scrolled');\n    },\n\n    jumpToBlock: function (ev) {\n        this.jumpToBlockHandler(ev);\n    },\n\n    jumpToBlockHandler: function (ev) {\n        if ($(ev.target).closest('.device-encryption').length || $(ev.target).closest('.btn-revoke-token').length)\n            return;\n\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name')),\n            block_name = $tab.attr('data-block-name');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n            if (block_name != 'media-gallery'){\n                this.$('.media-gallery-button.btn-more').addClass('hidden');\n            }\n        }\n        if (block_name === 'password'){\n            xabber.trigger('change_account_password', this.model);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (block_name === 'media-gallery'){\n            this.gallery_view.$('.media-gallery-items-wrap:not(.delete-files-preview-wrap)').removeClass('select-items-state');\n            this.gallery_view.disableFilesSelect();\n            this.gallery_view.backToMain();\n        }\n        if (block_name === 'blocklist'){\n            this.$('.blocklist-tabs-wrap .tabs .indicator').remove();\n            this.$('.blocklist-tabs-wrap .tabs').tabs();\n            this.$('.blocklist-tabs-wrap .indicator').addClass('ground-color-500');\n        }\n        if (block_name === 'vcard-tab'){\n            this.vcard_view.showEditView(this.$('.vcard'));\n        }\n        if (block_name === 'device-information'){\n            $elem.attr('data-token-uid', $tab.attr('data-token-uid'));\n            this.updateDeviceInformation($tab.attr('data-token-uid'));\n        }\n        this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', '');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back-settings').addClass('hidden');\n            this.$('.btn-back-subsettings-account').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToMenu: function (ev) {\n        this.backToMenuHandler(ev);\n    },\n\n    backToMenuHandler: function (ev) {\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.backToSubMenuHandler(ev);\n    },\n\n    backToSubMenuHandler: function (ev) {\n        let $tab = $(ev.target).closest('.btn-back-subsettings-account'),\n            block_name = $tab.attr('data-subblock-parent-name');\n        if (!block_name){\n            this.backToMenu(ev);\n            return;\n        }\n        let $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent);\n            this.deselectBlocked();\n        } else {\n            this.$('.btn-back-settings').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').addClass('hidden');\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateNameCSS();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        this.$('.settings-tab[data-block-name=\"profile\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"encryption\"]').showIf(connected);\n        this.$('.profile-image-dropdown').showIf(connected);\n        this.$('.set-groupchat-avatar').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    closeSettings: function (ev) {\n        xabber.settings_modal_view.closeSettings();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, () => {\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    deleteAccount: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            [], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            this.model.deleteAccount(true);\n        });\n    },\n\n    unregisterAccount: function () {\n        xabber.trigger('unregister_account', this.model);\n    },\n\n\n\n\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status');\n        this.$('.settings-block-wrap.status .settings-subblock-wrap .status').attr('data-status', status);\n\n        this.$('.settings-tab[data-block-name=\"status\"] .settings-block-label').text(this.model.getStatusMessage());\n    },\n\n    updateOmemoDevices: function () {\n        if (this.model.omemo && this.model.omemo.store){\n            let identity_key = this.model.omemo.store.get('identityKey');\n            if (identity_key){\n                this.$('.btn-manage-devices').removeClass('hidden2');\n            } else {\n                this.model.omemo.store.once('change:identityKey', () => {\n                    this.$('.btn-manage-devices').removeClass('hidden2');\n                }, this);\n            }\n        }\n        else\n            this.$('.btn-manage-devices').addClass('hidden2');\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    renderAllXTokens: function () {\n        this.$('.sessions-wrap').html(\"\");\n        this.$('.orphaned-fingerprints-wrap').html(\"\");\n        this.$('.device-encryption-warning').addClass('hidden');\n        this.$('.device-encryption-warning').attr('data-not-trusted-count', 0);\n        this.$('.settings-tab[data-block-name=\"devices\"] .settings-block-label').text(xabber.getQuantityString(\"settings_account__devices_subheader_label\", this.model.x_tokens_list.length));\n        $(_.sortBy(this.model.x_tokens_list, '-last_auth')).each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime_date(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    pretty_token.is_omemo = this.model.omemo ? true : false\n                    let $cur_token_html = $(templates.current_token_item_modal(pretty_token));\n                    this.$('.current-session').append($cur_token_html);\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item_modal(pretty_token));\n            this.$('.all-sessions').append($token_html);\n            if (this.model.omemo) {\n                !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n                let omemo_device_id = token.omemo_id ? token.omemo_id : Number(pretty_token.token_uid.slice(0,8));\n                this.omemo_own_devices.updateTrustDevice(Number(omemo_device_id), $token_html, this, () => {\n                    if (this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).length\n                        && !this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).hasClass('hidden')){\n                        this.updateDeviceInformation(pretty_token.token_uid);\n                    }\n                });\n            } else {\n                if (token.omemo_id){\n                    $token_html.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n                    $token_html.find('.device-encryption .mdi-lock').removeClass('hidden');\n                }\n            }\n        });\n        if (this.$('.all-sessions').children().length){\n            this.$('.all-sessions-wrap').removeClass('hidden');\n            this.$('.active-sessions-label').removeClass('hidden');\n            this.$('.btn-revoke-all-tokens').removeClass('hidden');\n        }\n        else {\n            this.$('.all-sessions-wrap').addClass('hidden');\n            this.$('.active-sessions-label').addClass('hidden');\n            this.$('.btn-revoke-all-tokens').addClass('hidden');\n        }\n        this.$('.devices-wrap').removeClass('hidden')\n        !this._single_account  && this.$('.token-wrap').attr('data-subblock-parent-name', '');\n        this.updateHeight();\n    },\n\n    updateDeviceInformation: function (token_uid) {\n        let token = this.model.x_tokens_list.find(item => (item.token_uid === token_uid));\n        this.$('.device-information-last-seen').showIf(pretty_datetime(token.last_auth)).find('.device-information-text').text(pretty_datetime(token.last_auth));\n        this.$('.device-information-device').showIf(token.device).find('.device-information-text').text(token.device);\n        this.$('.device-information-client').showIf(token.client).find('.device-information-text').text(token.client);\n        this.$('.device-information-ip').showIf(token.ip).find('.device-information-text').text(token.ip);\n        this.$('.device-information-expires').showIf(pretty_datetime(token.expire)).find('.device-information-text').text(pretty_datetime(token.expire));\n        this.$('.device-information-device-id').showIf(token.omemo_id).find('.device-information-text').text(token.omemo_id);\n        this.$('.device-information-security-label').showIf(token.omemo_id);\n        let resource_obj = this.model.resources.findWhere({ token_uid: token_uid }),\n            status_text;\n        if (resource_obj){\n            status_text = resource_obj.get('status_message') || resource_obj.get('status') && xabber.getString(resource_obj.get('status')) || xabber.getString(\"account_state_connected\");\n        } else if (this.model.get('x_token').token_uid == token.token_uid){\n            status_text = this.model.get('status_message') || this.model.get('status') && xabber.getString(this.model.get('status')) || xabber.getString(\"account_state_connected\")\n        } else\n            status_text = xabber.getString(\"offline\");\n\n        this.$('.device-information-status .device-information-text').text(status_text);\n\n        if (this.model.get('x_token')) {\n            this.$('.btn-revoke-token').hideIf(this.model.get('x_token').token_uid == token.token_uid);\n            this.$('.device-information-trust')\n                .switchClass('hidden', this.model.get('x_token').token_uid == token.token_uid)\n        }\n        if (token.omemo_id && this.model.omemo){\n            let dfd = new $.Deferred(),\n                device = this.model.omemo.own_devices[token.omemo_id];\n            dfd.done((fing) => {\n                if (fing.match(/.{1,8}/g))\n                    fing = fing.match(/.{1,8}/g).join(\" \");\n                this.$('.device-information-fingerprint').showIf(fing).find('.device-information-text').text(fing);\n\n                let $this_device = this.$(`.token-wrap[data-token-uid=\"${token_uid}\"]`)\n\n                this.$('.device-information-trust').removeClass('hidden');\n                this.$('.device-information-trust-text').text($this_device.attr('data-trust-text'));\n                this.$('.device-information-trust').attr('data-trust', $this_device.attr('data-trust'));\n                this.$('.device-information-trust-text').attr('data-trust', $this_device.attr('data-trust'));\n                if (this.model.get('x_token') && this.model.get('x_token').token_uid == token.token_uid){\n                    this.$('.device-information-trust-text').text(xabber.getString(\"settings_account__omemo_enabled\"));\n                    this.$('.device-information-trust').addClass('hidden');\n                    this.$('.device-information-trust').attr('data-trust', 'trust');\n                    this.$('.device-information-trust-text').attr('data-trust', 'trust');\n                }\n            })\n            if (device.get('fingerprint')) {\n                dfd.resolve(device.get('fingerprint'));\n            } else if (device.get('ik')) {\n                device.set('fingerprint', device.generateFingerprint());\n                dfd.resolve(device.get('fingerprint'));\n            } else {\n                device.getBundle().then(({pk, spk, ik}) => {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let fingerprint = device.generateFingerprint();\n                    if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                        device.set('fingerprint', fingerprint);\n                    dfd.resolve(device.get('fingerprint'));\n                });\n            }\n        } else {\n            this.$('.device-information-fingerprint').addClass('hidden');\n            this.$('.device-information-trust').addClass('hidden');\n            this.$('.device-information-trust-text').text('');\n            this.$('.device-information-trust').attr('data-trust', '');\n            this.$('.device-information-trust-text').attr('data-trust', '');\n        }\n        this.$('.settings-panel-head span.settings-panel-head-title').text(token.device);\n    },\n\n    openFingerprint: function (ev) {\n        if (this.model.omemo){\n            let $target = $(ev.target).closest('.device-encryption'),\n                is_own = $target.hasClass('is-own');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.closest('.token-wrap').attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.closest('.token-wrap').attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), is_own);\n        }\n    },\n\n    openFingerprintDevice: function (ev) {\n        if (this.model.omemo){\n            if ($(ev.target).closest('.device-information-trust.device-information-trust-own').length)\n                return;\n            let $target = $(ev.target).closest('.device-information');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), false);\n        }\n    },\n\n    updateXTokens: function () {\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.tokens').addClass('hidden');\n            this.$('.sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.model.getAllXTokens(() => {\n            this.$('.sessions-wrap').html(\"\");\n            if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                this.renderAllXTokens();\n            }\n        });\n    },\n\n    updateGroupsLabel: function () {\n        let groups_count = this.model.groups.length,\n            label_text = groups_count === 0 ? xabber.getString(\"contact_circles_empty\") : xabber.getQuantityString(\"settings_account__section_header_circles\", groups_count);\n\n        this.$('.settings-tab[data-block-name=\"circles-groups\"] .settings-block-label').text(label_text);\n    },\n\n    revokeXToken: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"terminate_session_title\"), xabber.getString(\"terminate_session_text\"),\n            {}, { ok_button_text: xabber.getString(\"button_terminate\")}).done((res) => {\n            if (!res)\n                return;\n            let $target = $(ev.target).closest('.settings-block-wrap.device-information'),\n                token_uid = $target.attr('data-token-uid');\n            this.model.revokeXToken([token_uid], () => {\n                if (this.model.get('x_token')){\n                    if (this.model.get('x_token').token_uid === token_uid) {\n                        this.model.deleteAccount(true);\n                        return;\n                    }\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        this.$('.btn-back-subsettings-account').length && this.backToSubMenu({target: this.$('.btn-back-subsettings-account')[0]})\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                }\n            });\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.device-more-button').switchClass('hidden', !enabled);\n        this.$('.label-encryption-enabled').switchClass('hidden', !enabled);\n        this.$('.label-encryption-disabled').switchClass('hidden', enabled);\n        if (!this.model.omemo){\n            this.$('.btn-manage-devices').addClass('hidden2');\n        }\n        this.updateHeight();\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n        if (xabber.accounts.length !== 1){\n            this.showSettings();\n        }\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n            this.updateXTokens();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n        this.updateXTokens();\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = $(ev.target).closest('.color-picker-button').attr('data-color-value');\n        this.model.settings.update_settings({color: value});\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist){\n            this.children.blocklist.unblockSelected();\n        }\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    sortFiles: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.sortFiles(ev);\n    },\n\n    enableFilesSelect: function () {\n        if (this.gallery_view)\n            this.gallery_view.enableFilesSelect();\n    },\n});\n\nxabber.AccountSettingsSingleModalView = xabber.AccountSettingsModalView.extend({\n    className: 'single-account-settings-panel-wrap',\n    template: templates.single_account_settings_modal,\n    // ps_selector: '.right-column',\n    // ps_settings: {\n    //     wheelPropagation: true\n    // },\n\n    render: function (view, options, args) {\n        if (!_.isNull(view))\n            return;\n        this.$el.detach();\n        this.parent.$('.single-account-info-wrap').append(this.$el);\n        this.ps_container = this.parent.ps_container;\n        this.gallery_view.render();\n        this._single_account = true;\n\n        this.$el.attr('data-color', this.model.settings.get('color'));\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.account_block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.account_block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n\n        this.parent.single_account_has_rendered = true;\n        return this;\n    },\n\n    jumpToBlock: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.jumpToBlockHandler(ev);\n    },\n\n    backToMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.backToMenuHandler(ev);\n    },\n\n    backToSubMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.backToSubMenuHandler(ev);\n    },\n\n    updateHeight: function () {\n        this.parent.updateHeight();\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.StatusMessageModalWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n    template: templates.status_message_input_widget,\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemModalView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item_modal,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.updateEnabled();\n        this.updateNickname();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"change:vcard\", this.updateNickname, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateNickname: function () {\n        let nickname;\n        if (this.model.get('vcard')) {\n            if (this.model.get('vcard').nickname)\n                nickname = this.model.get('vcard').nickname;\n            else if (this.model.get('vcard').fullname)\n                nickname = this.model.get('vcard').fullname;\n            else if (this.model.get('vcard').first_name || this.model.get('vcard').last_name)\n                nickname = this.model.get('vcard').first_name + ' ' + this.model.get('vcard').last_name;\n        }\n        if (nickname){\n            this.$('.nickname').text(nickname);\n            this.$('.jid').text(this.model.get('jid'));\n            this.$('.nickname-wrap').removeClass('single-row');\n            this.$('.jid-wrap').removeClass('hidden');\n        } else {\n            this.$('.nickname').text(this.model.get('jid'));\n            this.$('.nickname-wrap').addClass('single-row');\n            this.$('.jid-wrap').addClass('hidden');\n        }\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        // this.$('.status').attr('data-status', this.model.get('status'));\n        // this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n    },\n\n    showSettings: function () {\n        if (this.model.get('enabled'))\n            this.model.showSettingsModal();\n        else {\n            utils.dialogs.ask_extended(xabber.getString(\"settings_account__enable_account_label\"), xabber.getString(\"settings_account__enable_account_text\", [this.model.get('jid')]),\n                {modal_class: 'modal-offline-account', no_dialog_options: true},\n                {\n                    ok_button_text: xabber.getString(\"button_enable\"),\n                    optional_button: 'delete-account',\n                    optional_button_text: xabber.getString(\"settings_account__button_quit_account\")\n                }).done((res) => {\n                    if (res){\n                        if (res === 'delete-account')\n                            this.model.deleteAccount(null, true);\n                        else {\n                            this.model.save('enabled', true);\n                            this.model.activate();\n                        }\n                    }\n            });\n        }\n    }\n});\n\nxabber.SettingsAccountsModalBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        this.model.on(\"add\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"update_order\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"destroy\", this.parent.updateAccounts, this.parent);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.no-accounts-tip').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n    },\n\n    updateSyncState: function () {\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatarSelecter: function () {\n        if (this.contact){\n            this.addNotOwnAvatar();\n        } else {\n            this.addAvatar();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    addNotOwnAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.contact.pubAvatar(image, participant_node, () => {\n                    this.current_items = [];\n                    this.close();\n                    if (this.parent && this.participant) {\n                        this.parent.updateMemberAvatar(this.participant, true);\n                    }\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.contact.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, participant_node, () => {\n                            this.close();\n                            if (this.parent && this.participant) {\n                                this.parent.updateMemberAvatar(this.participant, true);\n                            }\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n    addAvatarSelecter: function (ev) {\n        if (this.contact){\n            this.saveNotOwnAvatar();\n        } else {\n            this.saveAvatar();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n\n    saveNotOwnAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            }),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n            this.$('.btn-save').addClass('hidden-disabled');\n            this.$('.circle-icon').addClass('disabled');\n            this.contact.pubAvatar(file, participant_node, () => {\n                this.close();\n                if (this.parent && this.participant) {\n                    this.parent.updateMemberAvatar(this.participant, true);\n                }\n            }, () => {\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            });\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    addAvatarSelecter: function (ev) {\n        if (this.contact){\n            this.saveNotOwnAvatar();\n        } else {\n            this.saveAvatar();\n        }\n    },\n\n    saveAvatar: function (ev) {\n        if (this.registration && this.registration_view){\n            let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.generated = true;\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            }\n        } else {\n            let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176)),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n\n    saveNotOwnAvatar: function (ev) {\n        let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176)),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            }),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        file.base64 = blob;\n        if (file && file.base64) {\n            this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n            this.$('.btn-save').addClass('hidden-disabled');\n            this.contact.pubAvatar(file, participant_node, () => {\n                this.close();\n                if (this.parent && this.participant) {\n                    if (this.participant.get('jid') === this.account.get('jid'))\n                        this.parent.updateMemberAvatar(this.participant, true);\n                }\n            }, () => {\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            });\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = templates.emojis;\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-account-password-modal',\n    template: templates.change_account_password,\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$('.original-state').removeClass('hidden');\n        this.$('.success-state').addClass('hidden');\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n        this.keyUp();\n    },\n\n    keyUp: function (ev) {\n        ev && ev.keyCode === constants.KEY_ENTER && this.submit();\n        if (this.$old_password_input.val() && this.$password_input.val() && this.$password_confirm_input.val()){\n            this.$('.btn-change').prop('disabled', false);\n        } else {\n            this.$('.btn-change').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_view = this;\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm && !options.password_not_error)\n            .siblings('span.errors').switchClass('non-error', options.password_not_error).text(options.password_confirm || '');\n        this.parent && this.parent.updateHeight();\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.$('.original-state').addClass('hidden');\n        this.$('.success-state').removeClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        Materialize.updateTextFields();\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1)\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                        this.endAuth();\n                    } else {\n                        this.stepped_auth_complete = true\n                        if (this.first_features_received)\n                            this.successFeedback();\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false)\n        this.account.trigger('start');\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\n\nxabber.UnregisterAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal unregister-account-modal',\n    template: templates.unregister_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-submit-unregister\": \"submitUnregister\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"change input[type=checkbox]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.authFeedback({});\n        this.data.set('step', 0);\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$('input[type=checkbox]').prop('checked', false);\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        Materialize.updateTextFields();\n    },\n\n    keyUpLogin: function (ev) {\n        let checked_count = this.$('input[type=checkbox]:checked').length;\n        if(this.$password_input.val() && checked_count === 2){\n            this.$('.btn-log-in').prop('disabled', false);\n        } else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        if(this.$jid_input.val() && this.$jid_input.val() === `delete ${this.account.get('jid')} account`){\n            this.$('.btn-submit-unregister').prop('disabled', false);\n        } else {\n            this.$('.btn-submit-unregister').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password && !options.password_not_error);\n        this.$('.login-form-jid .login-password-error').switchClass('non-error', options.password_not_error).text(options.password || '');\n    },\n\n    unregisterAccount: function (callback, errback) {\n        let iq = $iq({\n            type: 'set',\n            to: this.connection.domain,\n            from: this.get('jid')\n        }).c('query', {xmlns:Strophe.NS.REGISTER}).c('remove');\n        this.sendIQFast(iq, (success) => {\n                callback & callback(success);\n            },\n            function (error) {\n                errback && errback(error);\n            });\n    },\n\n    login: function (callback, errback) {\n        this.submit()\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.unregister_account_connection_manager) {\n            this.account.unregister_account_view = this;\n            this.account.unregister_account_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.unregister_account_connection = this.account.unregister_account_connection_manager.connection;\n            this.account.unregister_account_connection.account = this.account;\n            this.account.unregister_account_connection.register.connect_change_password(this.account.get('jid'), password, this.account.unregisterAccountCallback.bind(this.account))\n        }\n    },\n\n    submitUnregister: function () {\n        this.authFeedback({});\n        if (this.$jid_input.val() !== this.account.get('jid'))\n            return this.errorFeedback({jid: xabber.getString(\"settings_account__unregister_jid_mismatch\")});\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.register.submit_unregister();\n        } else {\n            this.data.set('step', 0);\n            return this.errorFeedback({password: xabber.getString(\"settings_account__connection_broken\")});\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step');\n        if (step === 0){\n            this.$('.login-form-step-wrap').removeClass('hidden');\n            this.$('.btn-log-in').removeClass('hidden');\n            this.$('.btn-submit-unregister').addClass('hidden');\n            this.$('.login-confirm-form-step-wrap').addClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__delete_account_modal_title'));\n            this.$('.modal-description-text').text(xabber.getString('settings_account__delete_account_modal_text'));\n        } else if (step === 1) {\n            this.$('.login-form-step-wrap').addClass('hidden');\n            this.$('.btn-log-in').addClass('hidden');\n            this.$('.btn-submit-unregister').removeClass('hidden');\n            this.$('.login-confirm-form-step-wrap').removeClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__confirm_delete_account_modal_title'));\n            this.$('.modal-description-text').html(xabber.getString('settings_account__confirm_delete_account_modal_text', [`<nobr>delete ${this.account.get('jid')} account</nobr>`]));\n        }\n    },\n\n    endAuth: function () {\n    },\n\n    checkFeaturesStepper: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings_modal = xabber.main_overlay_panel.addChild('account_settings_modal',\n        this.Container, {classlist: 'account-settings-panel'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.trigger('accounts_ready');\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_modal_view.addChild('accounts_modal', this.SettingsAccountsModalBlockView,\n        {model: this.accounts, el: this.settings_modal_view.$('.accounts-info-wrap')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    this.on(\"unregister_account\", function (account) {\n        if (!this.unregister_account_view)\n            this.unregister_account_view = new this.UnregisterAccountView();\n        this.unregister_account_view.show({model: account});\n    }, this);\n\n    this.on(\"change_account_password\", function (account) {\n        if (!this.change_account_password_view)\n            this.change_account_password_view = new this.ChangeAccountPasswordView();\n        this.change_account_password_view.show({model: account});\n    }, this);\n\n    this.on(\"show_delete_files\", function (options) {\n        if (!this.delete_files_view)\n            this.delete_files_view = new this.DeleteFilesFromGalleryView();\n        this.delete_files_view.show(options);\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-check-icon mdi mdi-24px\"/>')\n                .append('<div class=\"feature-name one-line\"/>');\n        this.$('.feature-check-icon').append(env.templates.svg['check-circle']());\n    },\n\n    _initialize: function (options, attrs) {\n        this.render();\n        this.model.collection.account.settings_account_modal && this.$el.appendTo(this.model.collection.account.settings_account_modal.$('.capabilities'));\n        if (options.single_account && options.single_account.$('.capabilities').length){\n            this.$el.appendTo(options.single_account.$('.capabilities'));\n        }\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.feature-check-icon').showIf(supports);\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n        this.connection = this.account.connection;\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            xabber.get('client_name'),\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.capabilities').html('');\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature, single_account: single_account});\n        });\n    },\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        });\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._main_interval_worker)\n        this._main_interval_worker.terminate();\n\n    this._main_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._main_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime main to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            this._main_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime main to ping: ' + downtime);\n            this.connection && this.connection.ping.ping(this.get('domain'));\n        }\n    };\n\n    this._main_interval_worker.postMessage({});\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._fast_interval_worker)\n        this._fast_interval_worker.terminate();\n\n    this._fast_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._fast_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_fast_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime fast to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            this._fast_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime fast to ping: ' + downtime);\n            this.fast_connection && this.fast_connection.ping.ping(this.get('domain'));\n        }\n    };\n    this._fast_interval_worker.postMessage({});\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    VanillaQR = env.VanillaQR,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.account && this.account.chat_settings && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:name\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated') && !attrs.is_deleted)\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            cached_info = cached_info || {};\n            let roster_info = {\n                jid: this.get('jid'),\n                in_roster: !_.isUndefined(this.get('in_roster')) ? this.get('in_roster') : cached_info.in_roster,\n                groups: this.get('groups'),\n                subscription: !_.isUndefined(this.get('subscription')) ? this.get('subscription') : cached_info.subscription,\n                roster_name: !_.isUndefined(this.get('roster_name')) ? this.get('roster_name') : cached_info.roster_name,\n                subscription_request_out: this.get('subscription_request_out'),\n                subscription_request_in: this.get('subscription_request_in'),\n                name: this.get('name'),\n                vcard_updated: this.get('vcard_updated')\n            }, full_jid = this.get('full_jid');\n            if (this.get('photo_hash') || this.get('image'))\n                _.extend(roster_info, {\n                    photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                    avatar_priority: this.get('avatar_priority'),\n                    avatar: this.get('image')\n                });\n            if (full_jid)\n                roster_info.resource = Strophe.getResourceFromJid(full_jid);\n            this.account.cached_roster.putInRoster(roster_info);\n        });\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat') && this.get('removed')) {\n            xabber.error(\"removed contact became groupchat\")\n        }\n        if (this.get('group_chat')) {\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    onDestroy: function () {\n        if (this.account && this.account.groupchat_settings && this.participants) {\n            this.participants.reset();\n            this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item, {my_info: true});\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('group_chat') ? this.get('full_jid') : this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let dfd = new $.Deferred();\n\n        dfd.done((data, http_avatar) => {\n            if (http_avatar) {\n                let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                    iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                    iq_pub_metadata.c('thumbnail', {\n                        xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                        url: thumbnail.url,\n                        width: thumbnail.width,\n                        height: thumbnail.height,\n                    }).up()\n                })\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }\n            else {\n                let avatar_hash = image.hash || sha1(image.base64),\n                    iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                    iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                this.account.sendIQFast(iq_pub_data, () => {\n                        this.account.sendIQFast(iq_pub_metadata, () => {\n                                callback && callback(avatar_hash);\n                            },\n                            function (data_error) {\n                                errback && errback(data_error);\n                            });\n                    },\n                    (data_error) => {\n                        errback && errback(data_error);\n                    });\n            }\n        });\n        if (image.uploaded){\n            dfd.resolve(image, true)\n        }\n        else if (this.account.get('gallery_token') && this.account.get('gallery_url') && !image.generated && !image.uploaded){\n            let file = image.name ? image : image.file;\n            this.account.uploadAvatar(file, (res) => {\n                if (res.thumbnails && res.thumbnails.length || res.file){\n                    res.type = file.type;\n                    dfd.resolve(res, true)\n                } else\n                    dfd.resolve(image.base64)\n            }, (res) => {\n                dfd.resolve(image.base64)\n            });\n        } else\n            dfd.resolve(image.base64)\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n            if (this.get('group_chat')){\n                this.set('group_chat', false);\n                this.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n            }\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        let chat = this.account.chats.getChat(this);\n                        this.removeFromRoster();\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    let chat = this.account.chats.getChat(this);\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    setActiveStateSendInterval: function () {\n        let stanza = $msg({to: this.get('jid'), type: 'chat'}).c('active', {xmlns: Strophe.NS.CHATSTATES});\n        clearTimeout(this._sending_active_chatstate_timeout);\n        clearInterval(this._sending_active_chatstate_interval);\n        this._sending_active_chatstate_timeout = setTimeout(() => {\n            this._sending_active_chatstate_interval = setInterval(() => {\n                this.account.sendMsg(stanza);\n            }, constants.PRESENT_INTERVAL);\n        }, constants.PRESENT_INTERVAL)\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                let chat = this.account.chats.getChat(this),\n                    sync_deleted = this.get('sync_deleted');\n                this.removeFromRoster();\n                if (!sync_deleted){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n    getMessageByStanzaId: function (stanza_id, callback, options) {\n        options = options || {};\n        let queryid = uuid(),\n            account = this.account,\n            is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            receiver = this.get('group_chat') ? this.get('full_jid') || this.get('jid') : this.account.get('jid'),\n            iq = $iq({type: 'set', to: receiver})\n                .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up()\n                .c('field', {'var': 'ids'})\n                .c('value').t(stanza_id).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        let handler = conn.addHandler((message) => {\n            let $msg = $(message);\n            if ($msg.find('result').attr('queryid') === queryid)\n                callback && callback($msg);\n            return true;\n        }, Strophe.NS.MAM);\n        this.account.sendIQFast(iq, () => {\n                conn.deleteHandler(handler);\n            }, () => {\n                conn.deleteHandler(handler);\n            }\n        );\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n            iq.c('field', {'var': `with-tags`});\n            if (options.filter_image)\n                iq.c('value').t('image').up();\n            if (options.filter_video)\n                iq.c('value').t('video').up();\n            if (options.filter_voice)\n                iq.c('value').t('voice').up();\n            if (options.filter_files)\n                iq.c('value').t('document').up();\n            iq.up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = options && options.cached_message? $message.find('content') : $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [], cached_stanza_id;\n        options && options.cached_stanza_id && (cached_stanza_id = options.cached_stanza_id);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id') || cached_stanza_id ,\n                        id: $file.children('gallery-id').text(),\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let participant_info = this.participants.get(message.get('user_info')),\n                participant_nickname = participant_info && participant_info.get('nickname') ? participant_info.get('nickname') : null;\n            let user_info = message.get('user_info') || {},\n                chat_content = this.account.chats.get(this.hash_id).item_view.content,\n                is_scrolled = chat_content.isScrolledToBottom(),\n                msg_author = participant_nickname || user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            if (is_scrolled)\n                chat_content.scrollToBottom();\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160){\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n            200,\n            () => {\n                this.onScroll();\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .description-edit-wrap .btn-choose-image\": \"chooseAvatar\",\n        \"click .description-edit-wrap .btn-selfie\": \"makeSelfie\",\n        \"click .description-edit-wrap .btn-emoji-panel\": \"makeEmojiAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160) {\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                let chat = this.account.chats.getChat(contact);\n                contact.removeFromRoster();\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n                400,\n                () => {\n                    this.onScroll();\n                });\n            this.$('.header-buttons .block-name.second-text').text($target.text())\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    chooseAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    makeSelfie: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let webcam_panel_view = new xabber.WebcamProfileImageView();\n            webcam_panel_view.open({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    makeEmojiAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let emoji_panel_view = new xabber.EmojiProfileImageView();\n            emoji_panel_view.open({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({}, () => {\n                this.$el.html(\"<div class='gallery-files'></div>\");\n                this.updateMedia();\n            });\n        }\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    getMediaFromDecryptedMessages: function () {\n\n        let dfd = new $.Deferred();\n\n        dfd.done(() => {\n            if (this.filter_type === 'filter_image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            else if (this.filter_type === 'filter_video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            else if (this.filter_type === 'filter_voice')\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n            else if (this.filter_type === 'filter_files')\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n            else\n                this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        }).fail(() => {\n            this.temporary_items = [];\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia()\n        });\n\n        if (this.account.omemo && this.account.omemo.cached_messages){\n\n            let cached_messages = this.account.omemo.cached_messages.getMessages(this.contact);\n\n            for (let [key, value] of Object.entries(cached_messages)) {\n                let msg_items = this.contact.getFilesFromStanza($(value), {cached_message: true, cached_stanza_id: key});\n                if (msg_items.length)\n                    this.temporary_items = this.temporary_items.concat(msg_items);\n            }\n\n            if (this.temporary_items.length){\n\n                let filtered_items = [],\n                    items_count = 0;\n\n                this.temporary_items.forEach((item, idx) => {\n                    if (this.filter_type === 'filter_image' && constants.MIME_TYPES.image.includes(item.media_type) ||\n                        this.filter_type === 'filter_video' && constants.MIME_TYPES.video.includes(item.media_type) ||\n                        this.filter_type === 'filter_voice' && constants.MIME_TYPES.audio.includes(item.media_type) ||\n                        this.filter_type === 'filter_files' &&\n                        !(\n                            constants.MIME_TYPES.image.includes(item.media_type) ||\n                            constants.MIME_TYPES.video.includes(item.media_type) ||\n                            constants.MIME_TYPES.audio.includes(item.media_type)\n                        )){\n                        if (this.filter_type === 'filter_image' && item.sources && item.sources[0]){\n                            this.chat.messages.decryptFile(item.sources[0], item.key).then((result) => {\n                                item.sources[0] = result;\n                                item.thumbnail = null;\n                                filtered_items = filtered_items.concat([item]);\n                                items_count++;\n                                if (items_count === this.temporary_items.length){\n                                    this.temporary_items = filtered_items;\n                                    dfd.resolve();\n                                }\n                            });\n\n                        } else {\n                            filtered_items = filtered_items.concat([item]);\n                            items_count++;\n                        }\n                    } else\n                        items_count++;\n                    if (items_count === this.temporary_items.length){\n                        this.temporary_items = filtered_items;\n                        dfd.resolve();\n                    }\n                });\n            } else {\n                dfd.reject();\n            }\n        } else {\n            dfd.reject();\n        }\n\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, is_encrypted: this.encrypted, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        if (this.filter_type === 'filter_image')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_images\")}`);\n        else if (this.filter_type === 'filter_video')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_videos\")}`);\n        else if (this.filter_type === 'filter_voice')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_voice_messages\")}`);\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted)\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                if (messages.length)\n                    $(templates.preloader()).appendTo(this.$('.gallery-files'));\n                else {\n                    this.loading_messages = false;\n                    callback && callback();\n                    return;\n                }\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length || $elem.closest('.audio-control-time').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').length && $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => item.voice)\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        return this;\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                this.account.chats.openChat(contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-selfie\": \"makeSelfie\",\n        \"click .btn-emoji-panel\": \"makeEmojiAvatar\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.participant.on(\"change:avatar_url\", this.updateMemberAvatar, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block').position().top + this.ps_container.scrollTop() - 120},\n            400,\n            () => {\n                this.onScroll();\n            });\n        this.$('.block-header .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name.second-text').addClass('fade-out');\n        this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        this.$('.btn-back').removeClass('btn-top');\n        this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 170) {\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').addClass('hidden2');\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.btn-edit-participant').hideIf(true);\n            this.$('.block-header .block-name.second-text').text(this.$('.tabs .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').removeClass('hidden2');\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n            this.$('.participant-details-edit-wrap').hasClass('hidden') && this.$('.btn-edit-participant').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member, url_forced) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)) && !url_forced)\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    chooseAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    makeSelfie: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let webcam_panel_view = new xabber.WebcamProfileImageView();\n            webcam_panel_view.open({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    makeEmojiAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let emoji_panel_view = new xabber.EmojiProfileImageView();\n            emoji_panel_view.open({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                            this.close();\n                            this.parent.participants._render();\n                        },\n                        (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                        this.parent.participants._render();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                contact.set('in_roster', true);\n                contact.trigger(\"open_chat\", contact);\n                contact.trigger('remove_invite', contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid'));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.attr('id');\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.contact.get('jid'), id);\n                    this.trigger(\"participants_updated\");\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item, options) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n        (this.contact.get('incognito_chat') && options && options.my_info === true) && (attrs.jid = this.account.get('jid'));\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false, 'is_accepted': undefined});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.pres('subscribed');\n        contact.set('known', true);\n        contact.set('removed', false);\n        setTimeout(() => {\n            contact.pres('subscribe');\n        }, 500);\n        this.blockInvitation();\n        contact.getMyInfo();\n        this.openChat();\n        contact.trigger('remove_invite', contact);\n        let chat = this.account.chats.getChat(this.model);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n        contact.trigger('remove_invite', contact);\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add) {\n            this.$('.groups-wrap').hideIf(false)\n            this.$('.input-field input').focus();\n        }\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this._update_template = false;\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target).closest('.input-field'),\n            $input = $target.find('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n        this._update_template = true\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field && this.group_name_field.updateValue(true);\n        this.group_description_field && this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                if (restrictions_count === 0)\n                    restrictions_count = '';\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            let inv_count = $(response).find('query').find('user').length;\n            if (inv_count === 0)\n                inv_count = '';\n            this.$('.invitations-variant .counted').html(inv_count);\n        });\n        this.model.getBlockedParticipants((response) => {\n            let blocked_count = $(response).find('query').children().length;\n            if (blocked_count === 0)\n                blocked_count = '';\n            this.$('.blocked-variant .counted').html(blocked_count);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                let inv_count = $(response).find('query').find('user').length;\n                if (inv_count === 0)\n                    inv_count = '';\n                this.$('.invitations-variant .counted').html(inv_count);\n            });\n            this.model.getBlockedParticipants((response) => {\n                let blocked_count = $(response).find('query').children().length;\n                if (blocked_count === 0)\n                    blocked_count = '';\n                this.$('.blocked-variant .counted').html(blocked_count);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    onGroupAddedSingleAccount: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group, single_account: this.single_account});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.groups').html('');\n        !this.rendered_once && this.on(\"add\", this.onGroupAddedSingleAccount, this);\n        this.single_account = single_account\n        this.rendered_once = true\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group, single_account: single_account});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            if (attrs.group_chat && attrs.is_deleted) {\n                delete attrs.group_chat;\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = options.roster_version || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION},\n            cached_conversations_exclude = options.cached_conversations_exclude || [];\n        if (options.stamp)\n            request_attrs.stamp = options.stamp;\n        delete(options.stamp);\n        delete(options.cached_conversations_exclude);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync, cached_conversations_exclude).then(() => {\n            });\n        });\n    },\n\n    syncCachedConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(cached_conversations).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync, cached_conversations);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync, cached_conversations) {\n        if (!$(item).length){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (cached_conversations){\n            $(cached_conversations).each((idx, conv) => {\n                if (!(conv.account_conversation_type && conv.account_conversation_type.split))\n                    return;\n                let cached_conv_type_jid = conv.account_conversation_type.split('/')[0];\n                if ((cached_conv_type_jid === jid) && (conv.account_conversation_type !== ($(item).attr('jid') +  '/' + $(item).attr('type')))){\n                    if ($item.attr('type') === Strophe.NS.GROUP_CHAT || conv.account_conversation_type.includes(Strophe.NS.GROUP_CHAT)){\n                        this.account.cached_sync_conversations.removeFromCachedConversations(conv.account_conversation_type);\n                    }\n                };\n            });\n        }\n        if (jid === this.account.get('jid'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito, is_deleted: $item.attr('status') === 'deleted'}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,},\n            current_chat_timestamp = chat.get('last_sync_timestamp');\n        if (current_chat_timestamp && current_chat_timestamp > chat_timestamp){\n            console.log('old_sync_conv');\n            console.log(item);\n            return;\n        }\n        chat.set('last_sync_timestamp', chat_timestamp);\n        if (message.children('stanza-id').length\n            && message.children('stanza-id').attr('id')\n            && chat.retracted_msg_id_list.includes(message.children('stanza-id').attr('id'))){\n            return;\n        };\n        chat.set('sync_type', type);\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            if (!(chat.last_message && chat.last_message.get('message')))\n                chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            } else {\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n                contact.participants && contact.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(contact.get('jid'));\n            }\n        }\n        else\n            contact && contact.set('sync_deleted', false);\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.trigger('update_last_read_msg', {sync_update: true});\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (request_with_stamp && chat.retraction_version !== 0 && chat.retraction_version < msg_retraction_version)\n            chat.trigger(\"get_retractions_list\");\n        msg_retraction_version && (chat.retraction_version = msg_retraction_version);\n        if (request_with_stamp && chat.item_view && chat.item_view.content && !is_invite) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (!(encrypted && !this.account.omemo)){\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && !(msg.get('type') === 'system') && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))//TODO: change to timestamp checking\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                    msg.get('stanza_id') && chat.set('synced_msg', msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: async function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync, cached_conversations_exclude) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        this.account.set('last_sync', sync_timestamp);\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        xabber.chats_view.hideChatsFeedback();\n        if (!request_with_stamp)\n            this.account.chats.getSavedChat();\n        if (is_first_sync)\n            this.account.set('first_sync', sync_timestamp);\n        if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                if (!is_last_sync){\n                    cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                        return $(this).attr('jid') +  '/' + $(this).attr('type');\n                    }).toArray());\n                    res = res.filter(item => !cached_conversations_exclude.includes(item.account_conversation_type));\n                    this.syncCachedConversations(null, request_with_stamp, is_first_sync, res);\n                }\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                this.account.cached_sync_conversations.putInCachedConversations({\n                    account_conversation_type: 'last_sync_timestamp',\n                    timestamp: sync_timestamp,\n                });\n                if (!is_last_sync){\n                    this.account.sendPresence();\n                    let saved_chat = this.account.chats.getSavedChat();\n                    saved_chat.set('opened', true);\n                    saved_chat.item_view.updateLastMessage();\n                    this.account.getAllMessageRetractions((result) => {\n                        let retract_version = $(result).find(`query[xmlns=\"${Strophe.NS.REWRITE}\"]`).attr('version');\n                        if (retract_version > this.account.retraction_version)\n                            this.account.retraction_version = retract_version;\n                    })\n                    this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n                }\n            });\n        }\n        else if ($(iq).find('conversation').length) {\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray());\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                let sync_options = {max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after};\n                if (request_with_stamp)\n                    sync_options.stamp = request_with_stamp;\n                if (is_last_sync)\n                    sync_options.last_version_sync = true;\n                if (cached_conversations_exclude && cached_conversations_exclude.length)\n                    sync_options.cached_conversations_exclude = cached_conversations_exclude;\n                this.syncFromServer(sync_options);\n            });\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n            this.account.dfd_presence.resolve();\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver');\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item);\n        });\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.cached_roster.putInRoster({\n                    jid: 'roster_version',\n                    is_version: true,\n                    version: this.roster_version\n                });\n            }\n        }\n        return true;\n    },\n\n    onRosterItem: function (item) {\n        let jid = item.getAttribute('jid');\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n        }\n        if (subscription === 'from')\n            attrs.subscription_request_in = false;\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        if (!this.roster)\n            this.roster = this.account.roster;\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.updateTabsLabel();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.$('.blocked-contact input:checked').length;\n        this.$('.btn-unblock-selected').hideIf(!has_changes);\n        this.$('.btn-deselect-blocked').hideIf(!has_changes);\n        this.$('.btn-block').hideIf(has_changes);\n    },\n\n    unblockSelected: function (ev) {\n        let $current_tab = this.$('.settings-block-wrap:not(.hidden)'),\n            selected = $current_tab.find('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let $tab = $(item).closest('.settings-block-wrap');\n            $tab.find('.placeholder').removeClass('hidden');\n        });\n        this.updateUnblockButton();\n    },\n\n    onContactAdded: function (attrs) {\n        let rendered;\n        this.$('.blocked-contact').each((idx, item) => { //this construction avoids being destroyed by stupid domain and jid names in blocklist\n            ($(item).attr('data-jid') === attrs.jid) && (rendered = true);\n        });\n        if (rendered)\n            return;\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.$('.blocked-invitations').append(tmp);\n            this.$('.settings-tab[data-block-name=\"blocklist-invitations\"]').removeClass('hidden');\n            this.$('.blocked-invitations-placeholder').addClass('hidden');\n        }\n        else if (attrs.domain) {\n            this.$('.blocked-domains').append(tmp);\n            this.$('.blocked-domains-placeholder').addClass('hidden');\n        }\n        else {\n            this.$('.blocked-contacts').append(tmp);\n            this.$('.blocked-contacts-placeholder').addClass('hidden');\n        }\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        $elem.detach();\n\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n        this.hideEmptyContainers();\n    },\n\n    updateTabsLabel: function () {\n        if (!(this.account.blocklist && this.account.blocklist.list))\n            return;\n        let contacts, domains, invitations;\n        contacts = domains = invitations = 0;\n\n        for (let jid in this.account.blocklist.list) {\n            let item = this.account.blocklist.list[jid];\n            if (item.resource)\n                invitations++;\n            else if (item.domain)\n                domains++;\n            else\n                contacts++;\n        }\n\n        let contact_label_text = contacts === 0 ? xabber.getString(\"blocked_contacts_empty\") : xabber.getQuantityString(\"blocked_contacts_number_tab_label\", contacts),\n            domains_label_text = domains === 0 ? xabber.getString(\"blocked_domains_empty\") : xabber.getQuantityString(\"blocked_domains_number\", domains),\n            invitations_label_text = invitations === 0 ? xabber.getString(\"blocked_invitations_empty\") : xabber.getQuantityString(\"blocked_invitations_number\", invitations);\n        this.$('.settings-tab[data-block-name=\"blocklist-contacts\"] .settings-block-label').text(contact_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-domains\"] .settings-block-label').text(domains_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-invitations\"] .settings-block-label').text(invitations_label_text);\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options, attrs) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el;\n        if (options.single_account && options.single_account.model.get('jid') != this.model.account.get('jid'))\n            return;\n        if (options.single_account)\n            $parent_el = options.single_account.$('.groups');\n        else\n            $parent_el = this.model.account.settings_account_modal.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"contact_list__placeholder\"));\n        }\n    },\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        let jid = this.$('input[name=username]').val().trim();\n        this.$el.append($(templates.preloader()))\n        this.$('.btn-add').addClass('hidden-disabled')\n        this.$('input[name=contact_name]').val('');\n        if (this.account.connection && this.account.connection.connected) {\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            contact.trigger('presence', contact, 'subscribe_from');\n            contact.trigger(\"open_chat\", contact, {right_force_close: true, force_opened_state: true});\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-v108-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n\n    this.cached_roster.on(\"database_open_failed\", () => {\n        this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: 0}));\n        this.trigger('roster_created');\n    });\n\n    this.cached_roster.on(\"database_opened\", () => {\n        this.cached_roster.getFromRoster('roster_version', (res) => {\n            let roster_version = res && res.version ? res.version : 0;\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: roster_version}));\n            this.trigger('roster_created');\n        });\n    });\n\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            this.resources.reset();\n            this.contacts.each(function (contact) {\n                contact.resources.reset();\n                contact.resetStatus();\n            });\n            this.cached_roster.getAllFromRoster((roster_items) => {\n                $(roster_items).each((idx, roster_item) => {\n                    if (roster_item.jid === 'roster_version'){\n                        return;\n                    }\n                    this.contacts.mergeContact(roster_item);\n                });\n                if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                    let options = {};\n                    this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                        let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                        !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                        last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                        this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                        this.roster.getRoster();\n                    });\n                }\n                else {\n                    this.roster.getRoster();\n                }\n                this.blocklist.getFromServer();\n            });\n        });\n        console.log(this.roster);\n        if (this.roster) {\n            dfd.resolve();\n        } else {\n            this.once('roster_created', () => {\n                dfd.resolve();\n            });\n        }\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    if (this.roster) {\n        this.roster.registerHandler();\n    } else {\n        this.once('roster_created', () => {\n            this.roster.registerHandler();\n        });\n    }\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id change:stanza_id change:archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id',  this.get('stanza_id') || this.get('archived_id') || this.get('origin_id') || this.get('msgid'));\n    },\n\n    destroyOnEcho: function () {\n        this.set('state', constants.MSG_DELIVERED);\n        if (this.collection && this.collection.chat && this.collection.chat.item_view && this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content.removeMessage(this);\n        else\n            this.destroy();\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection && this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    }\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.chat = options.chat;\n        this.account = options.account;\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n        if (!message){\n            message = this.findWhere({'origin_id': origin_id});\n        }\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.is_unread_archived && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched)\n            return message;\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived,\n                is_unread_archived: options.is_unread_archived,\n                is_between_anchors: options.is_between_anchors,\n                not_encrypted: options.not_encrypted || null,\n                not_verified_device: options.not_verified_device || null,\n                not_verified_device_no_device: options.not_verified_device_no_device || null,\n                device_id: options.device_id || null,\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        id: $file.children('gallery-id').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.is_unread_archived && (attrs.type !== 'system')){\n            let last_read_msg = this.find(m => this.chat.get('last_read_msg') && (m.get('stanza_id') === this.chat.get('last_read_msg') || m.get('contact_stanza_id') === this.chat.get('last_read_msg')));\n            if (last_read_msg){\n                if (Number(moment(attrs.time)) > last_read_msg.get('timestamp'))\n                    attrs.is_unread = true\n            } else {\n                attrs.is_unread = true\n            }\n        }\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (options.carbon_copied && options.encrypted && this.chat && this.chat.item_view && !this.chat.item_view.content)\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if (options.echo_msg && message) {\n            message.destroyOnEcho();\n        }\n        if ((options.replaced || options.encrypted && options.is_unread_archived) && message) {\n            message.set(attrs);\n            return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.xabber.org:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n          });\n      },\n\n      createVideoStream: function () {\n          navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account, chat: this});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.retracted_msg_id_list = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n        this.on(\"update_last_read_msg\", this.onChangedLastReadMsg, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n    onChangedLastReadMsg: function (options) {\n        if (this.get('prev_last_read_msg') && this.get('last_read_msg') && this.get('prev_last_read_msg') !== this.get('last_read_msg')){\n            if (this.item_view && !this.item_view.content){\n                this.item_view.content = new xabber.ChatContentView({chat_item: this.item_view});\n            }\n            this.item_view.content._no_scrolling_event = true;\n            let query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                is_first: true,\n                sync_update: options && options.sync_update ? true : false,\n                var: [\n                    {var: 'after-id', value: this.get('prev_last_read_msg')},\n                    {var: 'before-id', value: this.get('last_read_msg')},\n                ]\n            };\n            this.requestHistoryBetweenAnchors(query);\n\n        }\n        this.set('prev_last_read_msg', this.get('last_read_msg'));\n    },\n\n    requestHistoryBetweenAnchors: function (query) {\n        this.item_view.content.MAMRequest(query, (success, messages, rsm) => {\n            if (rsm.complete)\n                this.set('last_sync_unread_id', this.get('last_read_msg'));\n            if (query.is_first && !query.sync_update) {\n                let read_count = Number(rsm.count) + 1;\n                read_count = this.get('const_unread') - read_count;\n                (read_count < 0) && (read_count = 0);\n                this.set('const_unread', read_count);\n            }\n            if (!rsm.complete && (rsm.count > messages.length)){\n                query.after = rsm.last;\n                query.is_first = false;\n                this.requestHistoryBetweenAnchors(query);\n            }\n            _.each(messages, (message) => {\n                let message_item = this.account.chats.receiveChatMessage(message,\n                        {\n                            is_archived: true,\n                            is_between_anchors: true,\n                        }\n                    );\n                message_item && message_item.set('is_unread', false)\n            });\n            if (rsm.complete && this.get('last_read_msg')){\n                let last_read_msg = this.messages.find(m => this.get('last_read_msg') && (m.get('stanza_id') === this.get('last_read_msg') || m.get('contact_stanza_id') === this.get('last_read_msg'))),\n                    deferred = new $.Deferred();\n                deferred.done(() => {\n                    last_read_msg && last_read_msg.set('is_unread', false);\n                    if (this.item_view.content.isVisible()){\n                        this.item_view.content._long_reading_timeout = true;\n                        this.item_view.content.scrollToUnread();\n                    } else {\n                        this.set('show_new_unread', true);\n                    }\n                    this.item_view.content._no_scrolling_event = false;\n                });\n                if (!last_read_msg){\n                    this.contact.getMessageByStanzaId(this.get('last_read_msg'), ($message) => {\n                        last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        deferred.resolve()\n                    });\n                } else {\n                    deferred.resolve()\n                }\n            }\n        }, (err) => {\n            xabber.error('error');\n        });\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.messages_unread && this.messages_unread.reset();\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        if (this.item_view && this.item_view.content && stanza_id)\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${unique_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        message.set('stanza_id', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio') || !xabber.settings.jingle_calls) {\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy(status);\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQ(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.synced_msg){\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                $message.find('time').attr('stamp') && this.set('timestamp', $message.find('time').attr('stamp'));\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n            if (options.is_archived)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall('accepted_another_device');\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio(xabber.settings.sound_on_call_busy);\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else{\n            return this.messages.createFromStanza($message, options);\n        }\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && !options.encrypted && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id),\n            dfd = new $.Deferred;\n\n        dfd.done(() => {\n            if (message) {\n                if (options.searched_messages)\n                    message.set('searched_message', false);\n                let stanza_id = message.get('stanza_id');\n                this.messages_view = new xabber.MessageContextView({\n                    contact: this.contact,\n                    mention_context: options.mention,\n                    model: this,\n                    stanza_id_context: stanza_id,\n                    encrypted: options.encrypted\n                });\n                this.account.context_messages.add(message);\n                this.messages_view.messagesRequest({after: stanza_id}, () => {\n                    let screen = 'all-chats';\n                    if (options.mention)\n                        screen = 'mentions';\n                    else if (options.message)\n                        screen = xabber.body.screen.get('name');\n                    xabber.body.setScreen(screen, {\n                        right: 'message_context',\n                        model: this,\n                    }, {\n                        right_contact_save: true\n                    });\n                });\n            }\n\n        })\n        if (!message) {\n            message = messages.models.find(item => {\n                return item.get('origin_id') === unique_id;\n            })\n            if (!message) {\n                this.contact.getMessageByStanzaId(unique_id, ($message) => {\n                    if (options.encrypted && this.account.omemo) {\n                        let omemo_dfd = new $.Deferred;\n                        omemo_dfd.done(($msg, msg_options) => {\n                            msg_options = msg_options || {};\n                            msg_options.searched_message = true;\n                            message = this.account.chats.receiveChatMessage($msg[0], msg_options);\n                            dfd.resolve();\n                        }).fail(() => {\n                            dfd.resolve();\n                        });\n                        message = this.account.omemo.receiveChatMessage($message, {\n                            searched_message: true,\n                            gallery: true,\n                        }, omemo_dfd);\n\n                    } else {\n                        message = this.account.chats.receiveChatMessage($message, {\n                            searched_message: true,\n                        });\n                        dfd.resolve();\n                    }\n                }, {encrypted: options.encrypted});\n\n            } else {\n                dfd.resolve()\n            }\n        } else {\n            dfd.resolve()\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                this.setMessagesDelivered(msg.get('timestamp'));\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DISPLAYED));\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg){\n                enc_chat.receiveCarbonsMarker($marker);\n                return;\n            }\n        }\n        if (this.get('const_unread') && this.get('last_read_msg')){\n            let last_read_msg_id = this.get('last_read_msg'),\n                last_read_msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === last_read_msg_id || m.get('contact_stanza_id') === last_read_msg_id)),\n                deferred = new $.Deferred(),\n                second_deferred = new $.Deferred(),\n                new_last_read_msg = msg;\n            second_deferred.done(() => {\n                if (last_read_msg.get('timestamp') < new_last_read_msg.get('timestamp')){\n                    this.set('last_read_msg', new_last_read_msg.get('stanza_id'))\n                    this.trigger('update_last_read_msg');\n                }\n            });\n            deferred.done(() => {\n                if (!new_last_read_msg){\n                    this.contact.getMessageByStanzaId(stanza_id, ($message) => {\n                        new_last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        second_deferred.resolve()\n                    });\n                } else {\n                    second_deferred.resolve()\n                }\n            });\n            if (!last_read_msg){\n                this.contact.getMessageByStanzaId(last_read_msg_id, ($message) => {\n                    last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                    deferred.resolve()\n                });\n            } else {\n                deferred.resolve()\n            }\n        }\n        if (msg_idx > -1) {\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {\n                        id: (this.get('group_chat') && contact_stanza_id || stanza_id),\n                        xmlns: Strophe.NS.REWRITE,\n                        symmetric: symmetric,\n                        type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {\n                id: user_id,\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: true\n            });\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: symmetric\n        };\n        retract_attrs.conversation = this.get('jid');\n        this.get('encrypted') && (retract_attrs.type = 'encrypted');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if(chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if(chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.content_placeholder = new xabber.ChatContentPlaceholderView();\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    render: function () {\n        if (this.model.get('saved') && (this.$('.chat-title').text() !== xabber.getString(\"saved_messages__header\"))) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n        }\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 && !(!msg.get('synced_from_server') && msg.get('encrypted') && this.model.get('encrypted'))){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n        this.updateLastMessage();\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n        this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        msg || (msg = this.model.last_message);\n        if (!this.model.get('active') && this.model.item_view && this.model.item_view.content && this.model.item_view.content.bottom && this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea().trim()){\n            let draft_message = this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea();\n            this.$('.last-msg').html(draft_message).prepend($(`<span class=\"text-color-700\">${xabber.getString(\"draft\")}: </span>`));\n            this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n            msg && this.model.set({timestamp: msg.get('timestamp')});\n            return;\n        }\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=\"text-color-700\"/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        if (msg.get('not_encrypted'))\n            this.$('.last-msg').html(this.$('.last-msg').html().italics());\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        type: Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT,\n                        symmetric: false,\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0], msg);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          this.account.context_messages.on(\"change:is_unread\", this.onChangedReadState, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n\n          clearTimeout(this._onscroll_read_messages_timeout);\n          this._onscroll_read_messages_timeout = setTimeout(() => {\n              this.chat_content.readVisibleMessages(true);\n          }, 100)\n      },\n\n      onChangedReadState: function (message) {\n          let is_unread = message.get('is_unread'),\n              $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n          if (is_unread) {\n              $msg.addClass('unread-message');\n              $msg.addClass('unread-message-background');\n          } else {\n              $msg.removeClass('unread-message');\n              setTimeout(() => {\n                  $msg.removeClass('unread-message-background');\n              }, 1000);\n          }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n\n          let msg_item = this.model.messages.find(msg => msg.get('stanza_id') == message.get('stanza_id') || msg.get('contact_stanza_id') == message.get('stanza_id'));\n          if (msg_item) {\n              msg_item.get('is_unread') && message.set('is_unread', msg_item.get('is_unread'));\n              msg_item.get('is_unread_archived') && message.set('is_unread_archived', msg_item.get('is_unread_archived'));\n          }\n\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max){\n                      if (this.parent &&  this.parent.data && !this.parent.data.get('visible') || this.parent.model.get('search_hidden'))\n                          return;\n                      else\n                          this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  }\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.emptyChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\nxabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .back-to-unread:not(.back-to-bottom)\": \"scrollToUnreadWithButton\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .not-decrypted-tooltip .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if ((this.model.sync_created && this.model.last_message) || options.new_message && !options.new_message.get('synced_from_server') && options.new_message.get('encrypted') && this.model.get('encrypted')){\n            this.model.last_message && this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        this._is_scrolled_bottom = true;\n        this._long_reading_timeout = false;\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active change:idle\", this.onChangedActiveStatus, this);\n        xabber.on(\"change:idle change:focused\", this.onChangedIdleStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.contact.on(\"update_trusted\", this.updateMsgsMissingDevices, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.on(\"device_trusted\", this.updateMsgsDeviceTrusting, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n    render: function () {\n        this.cancelSearch();\n        if (this._prev_scrolltop)\n            this.scrollTo(this._prev_scrolltop);\n        else\n            this.scrollToBottom();\n        this.onScroll();\n        this.updateCounter();\n        this.updateContactStatus();\n        this.updateWaveforms();\n        this.onUpdatePlyr();\n        if (this.contact) {\n            this.contact.get('group_chat') && this.updatePinnedMessage();\n            this.subscription_buttons.render();\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateMsgsDeviceTrusting: function (device_id, jid) {\n        if (!this.model.get('encrypted') || !device_id || !this.contact || this.contact.get('jid') !== jid )\n            return;\n        this.$(`.not-decrypted-icon[data-device-id=\"${device_id}\"]`).each((idx, item) => {\n            let $msg = $(item).closest('.chat-message');\n            $msg.removeClass('not-verified');\n            $msg.addClass('not-verified-previously');\n        })\n    },\n\n    updateMsgsMissingDevices: function (trust, peer) {\n        if (!this.model.get('encrypted') || !peer || !this.contact)\n            return;\n\n        this.$(`.chat-message:not(.not-existing-device)`).each((idx, item) => {\n            let $item = $(item);\n            if ($item.attr('data-device-id') && !peer.devices[$item.attr('data-device-id')] && $item.attr('data-from') != this.account.get('jid')){\n                $item.hasClass('not-verified') && $item.addClass('not-verified-previously');\n                $item.removeClass('not-verified');\n                $item.addClass('not-existing-device');\n            }\n        })\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n    onTrustedChanged: function (message) {\n        let trusted = message.get('trusted'),\n            $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n        (trusted === null) && (trusted = 'none');\n        $message.attr('data-trust', trusted);\n    },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both' && this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n            this.model.get('active') && this.onChangedActiveStatus();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedIdleStatus: function (ev) {\n        if (!this.model.get('active'))\n            return;\n        this.model.set('idle', xabber.get('idle') || !xabber.get('focused'))\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        if (this.model.get('active') && this.model.get('idle'))\n            active = false;\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat') && !this.contact.get('invitation')) {\n            if (active){\n                this.contact.setActiveStateSendInterval();\n            }\n            else{\n                clearTimeout(this.contact._sending_active_chatstate_timeout);\n                clearInterval(this.contact._sending_active_chatstate_interval);\n            }\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readVisibleMessages: function (is_context) {\n        let self = is_context ? this.model.messages_view : this;\n        if (!self.isVisible())\n            return;\n        if (self.$('.chat-message.unread-message').length && xabber.get('focused') && !xabber.get('idle')){\n            let last_visible_unread_msg;\n            self.$('.chat-message.unread-message').each((idx, msg) => {\n                if ($(msg).isVisibleInContainer(self.$('.chat-content'))) {\n                    last_visible_unread_msg = msg;\n                }\n            });\n            if (last_visible_unread_msg){\n                this.readMessage(this.model.messages.get($(last_visible_unread_msg).data('uniqueid')), $(last_visible_unread_msg), is_context);\n            }\n        }\n    },\n\n    hideMessagesAfterSkipping: function () {\n        if (this.model.get('last_sync_unread_id') && this.model.get('synced_msg')){\n            let synced_message = this.model.get('synced_msg'),\n                $synced_message = this.$(`.chat-message[data-uniqueid=\"${synced_message.get('unique_id')}\"]`);\n            $synced_message.addClass('after-skip-message');\n            $synced_message.prevAll('.chat-message.after-skip-message').removeClass('after-skip-message');\n            $synced_message.nextAll('.chat-message:not(.after-skip-message)').addClass('after-skip-message');\n        } else {\n            this.$('.chat-message.after-skip-message').removeClass('after-skip-message');\n        }\n    },\n\n    readMessage: function (last_visible_msg, $last_visible_msg, is_context) {\n        clearTimeout(this._read_last_message_timeout);\n        this._read_last_message_timeout = setTimeout(() => {\n            this.model.sendMarker(last_visible_msg.get('msgid'), 'displayed', last_visible_msg.get('stanza_id'), last_visible_msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', last_visible_msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', last_visible_msg.get('stanza_id'));\n\n            if (is_context){\n                let unread_context_messages = _.clone(this.account.context_messages.models).filter(item => Boolean(item.get('is_unread')) || Boolean(item.get('is_unread_archived')));\n                _.each(unread_context_messages, (msg) => {\n                    let msg_item = this.model.messages.find(message => message.get('stanza_id') == msg.get('stanza_id') || message.get('contact_stanza_id') == msg.get('stanza_id'));\n                    if (msg_item) {\n                        msg.set('is_unread', msg_item.get('is_unread'));\n                        msg.set('is_unread_archived', msg_item.get('is_unread_archived'));\n                    }\n                });\n                setTimeout(() => {\n                    $last_visible_msg.removeClass('unread-message-background');\n                }, 1000);\n            }\n\n            xabber.toolbar_view.recountAllMessageCounter();\n        }, 1000)\n\n        if (last_visible_msg.get('is_unread_archived') || this.model.last_message && (last_visible_msg.get('unique_id') === this.model.last_message.get('unique_id')) || this.model.get('const_unread')){\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread'))),\n                read_count = 0;\n\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                    read_count++;\n                }\n            });\n            read_count = this.model.get('const_unread') - read_count;\n            (read_count < 0) && (read_count = 0);\n            this.model.set('const_unread', read_count);\n        } else {\n            let unread_messages = _.clone(this.model.messages_unread.models);\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                }\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n\n        if (!is_context){\n            setTimeout(() => {\n                $last_visible_msg.removeClass('unread-message-background');\n            }, 1000);\n        }\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        this.model.set('show_new_unread', false);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            msg.set('is_unread', false);\n            msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n            msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n                msg.set('is_unread', false);\n                msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n                msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n            }\n        }\n        if (!unread_messages.length) {\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread')));\n            _.each(unread_messages, (msg) => {\n                msg.set('is_unread', false);\n            });\n        }\n    },\n\n    showUnreadMarker: function () {\n        this.$('.unread-marker').remove();\n        if (this.$(`.chat-message.unread-message`).length){\n            let text = xabber.getQuantityString(\"new_chat_messages_no_number\", this.model.get('const_unread') + this.model.get('unread')),\n                $template = $(templates.unread_marker({text: text}));\n            $template.insertBefore(this.$(`.chat-message.unread-message:first`));\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    scrollToUnread: function () {\n        let $last_read_msg = this.$(`.chat-message.unread-message:first`);\n        $last_read_msg.length && (this.scrollTo(this.getScrollTop()\n            - (this.$el.height() * 0.2) + $last_read_msg.offset().top));\n        if (this.model.get('last_sync_unread_id')) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    scrollToUnreadWithButton: function () {\n        this.scrollToUnread();\n        this.$('.back-to-unread').addClass('back-to-bottom');\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.back-to-unread-counter').text(unread || '');\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n    },\n\n    onScrollY: function () {\n        this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n        this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n        this._is_scrolled_bottom = this.isScrolledToBottom();\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    onScroll: function (ev, is_focused) {\n        if (!this.isVisible() || this._no_scrolling_event)\n            return;\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        if (this.$('.unread-marker').length) {\n            let marker = this.$('.unread-marker');\n            if (marker[0].offsetTop < this._scrolltop)\n                marker.remove();\n        }\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        let scroll_read_timer = this._long_reading_timeout || is_focused ? 100 : 100;\n        clearTimeout(this._onscroll_read_messages_timeout);\n        this._onscroll_read_messages_timeout = setTimeout(() => {\n            this.readVisibleMessages();\n        }, scroll_read_timer)\n        this._long_reading_timeout = false;\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n        this.hideMessagesAfterSkipping();\n        if (this._scrolltop > this._prev_scrolltop && this.model.get('last_sync_unread_id') && this.getPercentScrolled() > 0.2) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    backToBottom: function () {\n        this.model.set('last_sync_unread_id', undefined);\n        this.hideMessagesAfterSkipping();\n        this._no_scrolling_event = true;\n        this.removeAllMessagesExceptLast();\n        this.readMessages();\n        this.model.resetUnread();\n        this.model.set('history_loaded', false);\n        this.loadPreviousHistory();\n        this._long_reading_timeout = false;\n        this._no_scrolling_event = false;\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq, _interval, handler;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE)) {\n            iq.c('field', {'var': `conversation-type`});\n            if (this.model.get('encrypted')){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let sendMAMRequest = function(func_conn) {\n                handler = func_conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let _delete_handler_timeout = setTimeout(() => {\n                    console.log('handler deleted');\n                    func_conn.deleteHandler(handler);\n                }, 14000);\n                let callb = function (res) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        account.chats.onCompletedMAMRequest(deferred);\n                        let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                        if ($fin.length && $fin.attr('queryid') === queryid) {\n                            let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                            rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                            callback && callback(success, messages, rsm);\n                        }\n                    },\n                    errb = function (err) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        xabber.error(\"MAM error\");\n                        xabber.error(err);\n                        account.chats.onCompletedMAMRequest(deferred);\n                        errback && errback(err);\n                    };\n                console.log('trying to send')\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            };\n            let is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection;\n\n            if (conn.connected){\n                sendMAMRequest(conn);\n            }\n            let send_counter = 0;\n            _interval = setInterval(() => {\n                is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                    && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline';\n                conn = is_fast ? account.fast_connection : account.connection;\n                conn && console.log(conn.connected);\n                if (!conn || send_counter >= 1){\n                    clearInterval(_interval);\n                    errback && errback('No connection or too many attempts');\n                    return;\n                }\n                if (conn.connected && send_counter < 1){\n                    send_counter++;\n                    sendMAMRequest(conn);\n                }\n            }, 15000);\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history || options.unread_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n        this.MAMRequest(query, (success, messages, rsm) => {\n            clearTimeout(this._load_history_timeout);\n            this._loading_history = false;\n            this.hideHistoryFeedback();\n            if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                this.getMessageArchive({after: rsm.last}, {missed_history: true});\n            if (options.unread_history){\n                if (messages.length)\n                    this.model.set('last_sync_unread_id', $(messages[messages.length - 1]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id'));\n                else {\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n            }\n            if (options.unread_history_first && messages.length){\n                let first_unread_msg_stanza_id = $(messages[0]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id')\n                this.model.set('first_unread_msg_stanza_id', first_unread_msg_stanza_id);\n                if (messages.length < query.max){\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n                this.getMessageArchive({\n                    fast: true,\n                    max: xabber.settings.mam_messages_limit,\n                    before : first_unread_msg_stanza_id\n                }, {unread_history_before: true});\n            }\n            if (this.model.get('group_chat')) {\n                if (this.contact && !this.contact.my_info)\n                    this.contact.getMyInfo();\n            }\n            else {\n                if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                    this.contact.getLastSeen();\n            }\n            if (options.previous_history && (messages.length < query.max) && success) {\n                this.model.set('history_loaded', true);\n            }\n            if (options.previous_history || options.unread_history_before || !this.model.get('first_archive_id')) {\n                rsm.first && this.model.set('first_archive_id', rsm.first);\n            }\n            if (options.last_history || !this.model.get('last_archive_id')) {\n                rsm.last && this.model.set('last_archive_id', rsm.last);\n            }\n            _.each(messages, function (message) {\n                let loaded_message = account.chats.receiveChatMessage(message,\n                    _.extend({\n                        is_archived: true,\n                        is_unread_archived: options.unread_history ? true : undefined,\n                    }, options)\n                );\n                if (loaded_message) counter++;\n            });\n            if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                this.getMessageArchive(_.extend(query, {\n                    max: xabber.settings.mam_messages_limit,\n                    before: this.model.get('first_archive_id') || ''\n                }), {previous_history: true});\n            }\n            if (options.unread_history_before){\n                if (this.model.get('encrypted')){\n                    //TODO: make async func to start opening chat after all messages been handled in enc chat\n                    setTimeout(() => {\n                        this.model._wait_load_unread_history.resolve();\n                    }, 1000);\n                } else\n                    this.model._wait_load_unread_history.resolve();\n            }\n        }, (err) => {\n            if (options.previous_history) {\n                this._loading_history = false;\n                this.showHistoryFeedback(true);\n            }\n            if (options.unread_history_before || options.unread_history_first){\n                this.model._wait_load_unread_history.resolve();\n            }\n        });\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: this.model.get('first_archive_id') || '' },\n            {previous_history: true\n            });\n    },\n\n    loadUnreadHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.model.set('loading_unread_history', true)\n        this.getMessageArchive({\n            fast: true,\n            max: xabber.settings.mam_messages_limit,\n            after: this.model.get('last_read_msg'),\n        }, {\n            unread_history_first: true,\n            unread_history: true,\n        });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                participant_info = {};\n            pinned_message.get('user_info') && this.contact.participants && (participant_info = this.contact.participants.get(pinned_message.get('user_info').id));\n            participant_info && participant_info.attributes && pinned_message.set('user_info', participant_info.attributes);\n\n            let msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message, pinned: true});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg, pinned_message);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    OGPLinkOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && !message.get('is_unread_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (!(message.get('synced_from_server') || (message.get('is_archived') && !message.get('missed_msg')))) {\n            if (message.get('missed_msg')){\n                if (this.model.get('last_read_msg')){\n                    let last_read_msg = this.model.messages.find(m => this.model.get('last_read_msg') && (m.get('stanza_id') === this.model.get('last_read_msg') || m.get('contact_stanza_id') === this.model.get('last_read_msg'))),\n                        deferred = new $.Deferred();\n                    deferred.done(() => {\n                        if (last_read_msg && message.get('timestamp') > last_read_msg.get('timestamp')){\n                            message.set('is_unread', true);\n                            if (!xabber.get('focused')) {\n                                if (this.model.get('saved') || this.model.isMuted())\n                                    message.set('muted', true);\n                            }\n                            this.model.setMessagesDisplayed(message.get('timestamp'));\n                        }\n                    });\n                    if (!last_read_msg){\n                        this.contact.getMessageByStanzaId(this.model.get('last_read_msg'), ($message) => {\n                            last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                            deferred.resolve();\n                        });\n                    } else {\n                        deferred.resolve();\n                    }\n                }\n            } else {\n                if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                    message.set('is_unread', true);\n                    if (message.get('is_unread') && xabber.get('focused') && !xabber.get('idle') && this.isVisible()){\n                        this.readVisibleMessages();\n                    }\n                    if (!xabber.get('focused')) {\n                        if (this.model.get('saved') || this.model.isMuted())\n                            message.set('muted', true);\n                        else if (!message.get('synced_invitation_from_server'))\n                            this.notifyMessage(message);\n                    }\n                    this.model.setMessagesDisplayed(message.get('timestamp'));\n                }\n            }\n            if (this.contact && this.model.get('archived')){\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n                message.set('state', constants.MSG_DISPLAYED);\n            }\n        }\n\n        if (this.isVisible() && (!message.get('is_unread') || is_scrolled_to_bottom) && !message.get('is_between_anchors')) {\n            let is_scrolling_needed;\n            if (is_scrolled_to_bottom){\n                if (this.$(`.chat-message.unread-message`).length){\n                    if (this.$(`.chat-message.unread-message`)[0].offsetTop > (this._scrolltop + 140)) {\n                        is_scrolling_needed = true;\n                    }\n                } else\n                    is_scrolling_needed = true;\n            }\n            if ((is_scrolled_to_bottom && is_scrolling_needed) || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else if (!is_scrolled_to_bottom) {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (message.get('synced_from_server') && message.get('is_unread')) {\n            this.onChangedReadState(message);\n        }\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n\n        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context' && this.model.messages_view.last_history_loaded)\n            this.account.context_messages.add(message);\n\n    },\n\n\n    decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom();\n        if (this.model.get('encrypted') || message.get('encrypted') || force) {\n            let images = message.get('images') || [];\n            if (images.length) {\n                images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = [];\n                        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                            $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        else\n                            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            }\n            let fwd_msgs = message.get('forwarded_message') || [];\n            fwd_msgs.forEach((fwd_msg) => {\n                let fwd_images = fwd_msg.get('images') || [];\n                fwd_images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] .fwd-message[data-uniqueid=\"${fwd_msg.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            });\n        }\n    },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_message = this.$(`.chat-message[data-uniqueid=\"${this.model.messages.models[index - 1].get('unique_id')}\"]`);\n            if (!$prev_message.length) {\n                $prev_message = this.addMessage(this.model.messages.models[index - 1]);\n            }\n            $message.insertAfter($prev_message);\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0], message);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0], item);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeAllMessagesExceptLast: function () {\n        let messages_to_save = [];\n        if (!this.model.messages)\n            return;\n        this.model.messages.forEach((message, idx) => {\n            if (idx === (this.model.messages.length - 1)){\n                messages_to_save.push(message);\n                this.model.set('first_archive_id', message.get('stanza_id'));\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message');\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message-background');\n                return;\n            }\n            let $message, $message_in_chat;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`));\n            $message.prev('.chat-day-indicator').remove();\n            $message.remove();\n        });\n        this.model.messages.reset(messages_to_save);\n        this.updateScrollBar();\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n        attrs.not_encrypted = attrs.not_encrypted || null;\n        attrs.not_verified_device = attrs.not_verified_device || null;\n        attrs.not_verified_device_no_device = attrs.not_verified_device_no_device || null;\n        attrs.device_id = attrs.device_id || null;\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.is_unread && 'unread-message',\n            attrs.is_unread && 'unread-message-background',\n            attrs.not_encrypted && 'not-decrypted',\n            attrs.not_verified_device && !attrs.not_verified_device_no_device && 'not-verified',\n            attrs.not_verified_device_no_device && 'not-existing-device',\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('encrypted')){\n            if (attrs.hasOwnProperty('submitted_here')){\n                $message.attr('data-trust', true);\n                if (attrs.hasOwnProperty('is_contact_trusted')){\n                    $message.attr('data-trust', attrs.is_contact_trusted);\n                }\n            } else if (attrs.hasOwnProperty('is_trusted')){\n                $message.attr('data-trust', attrs.is_trusted);\n            } else {\n                $message.attr('data-trust', this.$el.attr('data-trust'));\n            }\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])),];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n            this.OGPLinkOnload($message, message);\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video, idx) => {\n                        let video_el = this.createVideo(video, idx);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                    this.OGPLinkOnload($message, message);\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        return $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [],\n            msg_videos = message && message.get('videos') && message.get('videos').length ? message.get('videos') : null;\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.video_id = $(item).attr('data-msg-video-id');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                if (msg_videos && msg_videos.length && player.video_id >= 0) {\n                    let video_file = msg_videos[player.video_id];\n                    video_file && (player.video_file = video_file);\n                }\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem, msg) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg, msg);\n        }\n        ($msg.find('.not-decrypted-icon').length) && $msg.find('.not-decrypted-icon').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        });\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n    attentionMessage: function () {\n        let notification = xabber.popupNotification({\n            title: this.contact.get('name'),\n            text: xabber.getString(\"chats_attention\"),\n            icon: this.contact.cached_image.url\n        });\n        notification.onclick = () => {\n            window.focus();\n            this.model.trigger('open');\n        };\n        let sound = xabber.settings.sound_on_attention;\n        xabber.playAudio(sound);\n    },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file['id'] && stanza.c('gallery-id').t(file['id']).up();\n                file.thumbnail && stanza.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n    msgCallback: function (msg_sending_timestamp, message) {\n        this.bottom.click_counter = 0;\n        this.bottom.setDefaultPlaceholder();\n        if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n            setTimeout(() => {\n                if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                    message.set('state', constants.MSG_SENT);\n                } else {\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {\n                        (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                    });\n                    setTimeout(() => {\n                        if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                            message.set('state', constants.MSG_ERROR);\n                    }, 5000);\n                }\n            }, 1000);\n        }\n        else {\n            let _pending_time = 5, was_reconnecting;\n            if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                was_reconnecting = true;\n            if (this.account.session.get('reconnecting'))\n                was_reconnecting = true;\n            this.account.session.once('change:reconnecting', () => {\n                console.log('change reconnecting');\n                console.log(this.account.session.get('reconnecting'));\n                was_reconnecting = true;\n            })\n            let _interval = setInterval(() => {\n                console.log(was_reconnecting);\n                if (was_reconnecting)\n                    clearInterval(_interval);\n                if (_pending_time >= 8 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                    console.log('ping on message pending');\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                        let downtime = (moment.now() - this.account.last_stanza_timestamp) / 1000;\n                        if (downtime >= 2){\n                            console.log('message initiated reconnection');\n                            console.log(message);\n                            this.account.connection.disconnect();\n                        } else {\n                            console.log('ping was sent and got no result after 2 seconds, but didnt reconnect because last stanza time was: ' + downtime + ' sec')\n                        }\n                    }, 2000);\n                }\n                if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 3;\n            }, 3000);\n        }\n    },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else if (this.model.get('encrypted')){\n            this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                attrs.is_contact_trusted = obj.trust;\n                _dfd_info.resolve();\n            });\n        } else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData(),\n                metadata = {};\n            file.duration && (metadata.duration = file.duration);\n            file.width && (metadata.width = file.width);\n            file.height && (metadata.height = file.height);\n            formData.append('file', file, file.name);\n            formData.append('metadata', JSON.stringify(metadata));\n            if (file.size)\n                formData.append('size', file.size);\n            if (file.voice)\n                formData.append('media_type', file.type + '+voice');\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.oncancel = xhr.onload = xhr.onerror = xhr.onabort = function () {\n                let xhr_status = this.fakeStatus || this.status;\n                if (xhr_status >= 200 && xhr_status < 300) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = this.response ? JSON.parse(this.response) : this.fakeResponse;\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                if (!is_error) {\n                                    if (slot_response && slot_response.quota){\n                                        if (slot_response.file && slot_response.hash){\n                                            xhr_requests[files_count].fakeStatus = 200;\n                                            xhr_requests[files_count].fakeResponse = {\n                                                file: slot_response.file,\n                                                id: slot_response.id,\n                                                name: slot_response.name,\n                                                thumbnail: slot_response.thumbnail,\n                                                created_at: slot_response.created_at,\n                                            };\n                                            xhr_requests[files_count].oncancel();\n                                        } else {\n                                            xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                            xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                            xhr_requests[files_count].is_uploading = true;\n                                            xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                        }\n                                    } else {\n                                        xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                        xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                        xhr_requests[files_count].oncancel();\n                                    }\n                                }\n                            });\n                        });\n                    }\n                } else {\n                    if (xhr_status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && xhr_status === 0){\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        let response_text, error_status;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (xhr_status === 500)\n                            response_text = this.fakeResponse || this.statusText;\n                        else if (xhr_status === 400 || this.fakeStatus){\n                            response_text = this.fakeResponse || JSON.parse(this.response).error;\n                            error_status = this.fakeStatus || JSON.parse(this.response).status;\n                            if (error_status && error_status == 429){\n                                setTimeout(() => {\n                                    self.account.testGalleryTokenExpire(() => {\n                                        self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                            if (!is_error) {\n                                                if (slot_response && slot_response.quota){\n                                                    if (slot_response.file && slot_response.hash){\n                                                        xhr_requests[files_count].fakeStatus = 200;\n                                                        xhr_requests[files_count].fakeResponse = {\n                                                            file: slot_response.file,\n                                                            id: slot_response.id,\n                                                            name: slot_response.name,\n                                                            thumbnail: slot_response.thumbnail,\n                                                            created_at: slot_response.created_at,\n                                                        };\n                                                        xhr_requests[files_count].oncancel();\n                                                    } else {\n                                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                        xhr_requests[files_count].is_uploading = true;\n                                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                    }\n                                                } else {\n                                                    xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                    xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                    xhr_requests[files_count].oncancel();\n                                                }\n                                            }\n                                        });\n                                    });\n                                }, 1000);\n                                return;\n                            }\n                        }\n                        else if (xhr_status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (xhr_status === 0) && (message.get('files')[idx] = null);\n                        if (!message.get('files').filter((element) => { return element != null}).length && !message.get('message')){\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                            self.removeMessage($message);\n                            return;\n                        }\n                        files_count++;\n                        if (xhr_status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                        if (!is_error) {\n                                            if (slot_response && slot_response.quota){\n                                                if (slot_response.file && slot_response.hash){\n                                                    xhr_requests[files_count].fakeStatus = 200;\n                                                    xhr_requests[files_count].fakeResponse = {\n                                                        file: slot_response.file,\n                                                        id: slot_response.id,\n                                                        name: slot_response.name,\n                                                        thumbnail: slot_response.thumbnail,\n                                                        created_at: slot_response.created_at,\n                                                    };\n                                                    xhr_requests[files_count].oncancel();\n                                                } else {\n                                                    xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                    xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                    xhr_requests[files_count].is_uploading = true;\n                                                    xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                }\n                                            } else {\n                                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                xhr_requests[files_count].oncancel();\n                                            }\n                                        }\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    this.account.testGalleryFileSlot(xhr_requests[0].formData.get('file'), (slot_response) => {\n                        if (!is_error) {\n                            if (slot_response && slot_response.quota){\n                                if (slot_response.file && slot_response.hash){\n                                    xhr_requests[0].fakeStatus = 200;\n                                    xhr_requests[0].fakeResponse = {\n                                        file: slot_response.file,\n                                        id: slot_response.id,\n                                        name: slot_response.name,\n                                        thumbnail: slot_response.thumbnail,\n                                        created_at: slot_response.created_at,\n                                    };\n                                    xhr_requests[0].oncancel();\n                                } else {\n                                    xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                                    xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'));\n                                    xhr_requests[0].is_uploading = true;\n                                    xhr_requests[0].send(xhr_requests[0].formData);\n                                }\n                            } else {\n                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                xhr_requests[0].oncancel();\n                            }\n                        }\n                    });\n                }, (err_status) => {\n                    let response_text = err_status,\n                        file;\n                    message.get('files').length && (file = message.get('files')[0])\n                    if (file && !_.isUndefined(file.upload_id)){\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                    }\n                    message.get('files').length && (message.get('files')[0].is_errored = true);\n                    is_error = true;\n                    $(xhr_requests).each((idx, request) => {\n                        request.abort();\n                    })\n                    self.onFileNotUploaded(message, $message, response_text);\n                });\n            }\n        }\n\n    },\n\n    encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n    },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        message.set('videos', videos);\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video, idx) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let video_attrs = {video_src: video.sources[0], thumbnail: video.thumbnail, video_id: idx},\n            $video_wrap_template = $(templates.messages.video(video_attrs));\n        if (video.thumbnail){\n            setTimeout(() => {\n                $video_wrap_template.append($(`<img class=\"plyr-video-poster\" src=\"${video.thumbnail}\" onerror=\"this.style.display='none'\">`))\n            }, 1000);\n        }\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                this.bottom.setEditedMessageAttachments(message, true);\n                this.bottom.setRedactedUploadMessage(message);\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server'),\n            is_unread_archived = message.get('is_unread_archived'),\n            is_missed_msg = message.get('missed_msg'),\n            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n        if (is_unread) {\n            if (!is_unread_archived && !is_synced && !is_missed_msg)\n                this.model.messages_unread.add(message);\n            $msg.addClass('unread-message');\n            $msg.addClass('unread-message-background');\n            this.model.recountUnread();\n        } else {\n            if ((!is_unread_archived && !is_synced && !is_missed_msg) || this.model.messages_unread.indexOf(message) > -1)\n                this.model.messages_unread.remove(message);\n            $msg.removeClass('unread-message');\n            setTimeout(() => {\n                $msg.removeClass('unread-message-background');\n            }, 1000);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            link_references = msg.get('link_references'),\n            fwd_messages = [],\n            fwd_link_references = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n                message.get('link_references') && fwd_link_references.push(message.get('link_references'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(link_references).each(function(idx, link_reference) {\n            if (files_links != \"\")\n                files_links += '\\n';\n            files_links += link_reference.url;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        $(fwd_link_references).each(function (idx, message) {\n            $(message).each(function (i, link_reference) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += link_reference.url;\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            }, (err) => {\n                _.extend(options, {present: null, subscription: null});\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('not-decrypted-icon') || $elem.closest('.dropdown-content').length || $elem.closest('.not-decrypted-icon').length)\n            return;\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')) || this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') ||  $elem.hasClass('not-decrypted-tooltip') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg, this.account.forwarded_messages.get($elem.data('uniqueid')));\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id) || this.account.context_messages.get(unique_id) || this.account.searched_messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\n\nxabber.ChatContentPlaceholderView = xabber.BasicView.extend({\n    className: 'chat-body-content-placeholder-wrap',\n    template: templates.chat_content_placeholder,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        return this;\n    },\n\n    render: function () {\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.forwarded_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg, this.account.forwarded_messages.get(unique_id));\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(), data, target;\n                if (paramValue.on_format){\n                    data = paramValue.data;\n                    target = paramValue.target;\n                } else {\n                    data = JSON.parse(paramValue);\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                }\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n\n            static formats(node) {\n                return {\n                    on_format: true,\n                    data: {\n                        nickname: node.innerHTML,\n                        is_me: node.classList.contains(\"ground-color-100\")\n                    },\n                    target: node.getAttribute('data-target')\n                };\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        class QuillEmoji extends Image {\n            static create(value) {\n                if (typeof value == 'string') {\n                    let emoji = $(value.emojify({tag_name: 'img'}))[0];\n                    emoji.style.display = 'none';\n                    emoji.onload = function () {\n                        this.style.display = 'unset';\n                    };\n                    return emoji;\n                } else {\n                    return value;\n                }\n            }\n\n            static value(domNode) {\n                return domNode;\n            }\n        }\n        QuillEmoji.blotName = 'emoji';\n        QuillEmoji.className = 'emoji';\n        QuillEmoji.tagName = 'img';\n        QuillEmoji.prototype.optimize = function () {};\n\n        Quill.register(QuillEmoji);\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n      let jid = this.account.get('jid'),\n          attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n          chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        if (options && options.force_opened_state){\n            chat.set('opened', true);\n            chat.set('timestamp', Date.now());\n        }\n        chat.trigger('open', {clear_search: options.clear_search, right_force_close: options.right_force_close});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    let avatar_url = $message.find('info').attr('url');\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    avatar_url && participant.set('avatar_url', avatar_url);\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (!pending_message)\n                    return;\n                let chat = this.account.chats.get(pending_message.chat_hash_id);\n                if (chat && chat.get('group_chat'))\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                chat.setStanzaId(pending_message.unique_id, stanza_id);\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if ($message.find('replace').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact && contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == Strophe.NS.OMEMO;\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            chat.retracted_msg_id_list.push(retracted_msg_id);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (!chat.get('group_chat') && retract_version > this.account.retraction_version) {\n                this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                if (!Object.keys(options).length)\n                    return;\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            if (!Object.keys(options).length && !forwarded_msgs.length)\n                return;\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            } else {\n                xabber.warn('Message from me to me');\n                xabber.warn(message);\n                return;\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n            }\n        }\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        all_servers = all_servers.sort((x,y) => { return x == this.account.domain ? -1 : y == this.account.domain ? 1 : 0; })\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n            let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                contact = this.account.contacts.mergeContact(group_jid);\n            contact.set('group_chat', true);\n            contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            this.close();\n            xabber.chats_view.updateScreenAllChats();\n            contact.trigger(\"open_chat\", contact);\n            if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: group_jid + '/' + moment.now()});\n                this.account.sendIQFast(iq_set_blocking);\n            }\n\n        }, () => {\n            this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n            this.$('input[name=\"chat_jid\"]').addClass('invalid');\n        });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"add_opened_chat\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').length);\n        if (options.right !== 'chat' && !options.no_unread && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats') && !xabber.toolbar_view.data.get('account_filtering')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo).active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.showChatPlaceholder();\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n        view.detach();\n        if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n            active_toolbar.click();\n        }\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view && (item.get('timestamp') || item.get('saved'))) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        if (active_toolbar.hasClass('account-item') && view.account.get('jid') !== active_toolbar.attr('data-jid')){\n            return;\n        }\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        (active_toolbar.hasClass('all-chats') || active_toolbar.hasClass('settings-modal') || (xabber.accounts.enabled.length === 1 && active_toolbar.hasClass('saved-chats'))) && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('saved-chats') && (xabber.accounts.enabled.length !== 1) && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved'))));\n        active_toolbar.hasClass('mentions') && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => (chat.get('jid') === chat.account.domain))));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false || (view.model.get('is_accepted') == true && view.contact.invitation))) {\n            if (view.model.get('is_accepted') == false){\n                view.model.set('display', true);\n                view.model.set('active', true);\n                xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n            } else if (view.model.get('is_accepted') == true && view.contact.invitation){\n                view.contact.invitation.join();\n            }\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded')) {\n                if (\n                    (view.model.get('const_unread') || view.model.get('unread'))\n                    && view.model.get('last_read_msg') &&\n                    (!view.content._prev_scrolltop || (view.content._prev_scrolltop && view.content._is_scrolled_bottom) || (view.model.get('show_new_unread') === true))\n                    && !view.model.get('loading_unread_history') && !options.force_bottom && xabber.body.screen.get('chat_item') !== view\n                ){\n                    view.model.set('show_new_unread', false);\n                    view.model._wait_load_unread_history = new $.Deferred();\n                    view.content._no_scrolling_event = true;\n                    view.content.loadUnreadHistory();\n                } else if (view.model.messages.length < 20)\n                    view.content.loadPreviousHistory();\n            }\n            if (!options.right_force_close && (\n                xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )\n            )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            if (!view.model.get('loading_unread_history')){\n                let current_scrolling = view.content.getScrollTop() || view.content._scrolltop,\n                    scrolled_to_bottom = view.content.isScrolledToBottom();\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                !scrolled_to_bottom && view.content.scrollTo(current_scrolling);\n            } else {\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    show_placeholder: true,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.model.set('active', true);\n                view.model._wait_load_unread_history.done(() => {\n                    if (xabber.body.screen.get('chat_item') === view) {\n                        view.model.set('loading_unread_history', false)\n                        xabber.body.setScreen((options.screen || 'all-chats'), {\n                            right: 'chat',\n                            clear_search: options.clear_search,\n                            chat_item: view,\n                            blocked: view.model.get('blocked')\n                        },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                        view.content.scrollToUnread();\n                        view.content._long_reading_timeout = true;\n                        view.content._no_scrolling_event = false;\n                        view.content.onScroll();\n                        if (options.scroll_to_chat) {\n                            xabber.chats_view.scrollToChild(view.$el);\n                        } else {\n                            xabber.chats_view.scrollTo(scrolled_top);\n                        }\n                    }\n                });\n            }\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        if (options.scroll_to_chat) {\n            xabber.chats_view.scrollToChild(view.$el);\n        } else {\n            xabber.chats_view.scrollTo(scrolled_top);\n        }\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            archive_chats = archive_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showSavedChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            saved_chats = chats.filter(chat => chat.get('saved'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            saved_chats = saved_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        saved_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n            this.$(`.chat-list .chat-item[data-id=\"${chat.id}\"] .chat-title`).text(chat.get('jid'));\n        });\n    },\n\n    showNotifications: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            notificatons_chats = chats.filter(chat => (chat.get('jid') === chat.account.domain || chat.contact && chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both' ));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            notificatons_chats = notificatons_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        notificatons_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = no_unread || xabber.toolbar_view.data.get('account_filtering') ? false : xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        if (xabber.toolbar_view.data.get('account_filtering')){\n            all_chats = all_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n            all_chats_pinned = all_chats_pinned.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active')\n            .filter('.all-chats:not(.toolbar-logo)').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n      events: {\n          \"keyup .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\"\n      },\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap .pinned-chat-list').html(\"\");\n        this.$('.chat-list-wrap .chat-list').html(\"\");\n        this.$('.chat-list-wrap .contact-list').html(\"\");\n        this.saved_chat = false;\n        let chats = xabber.chats_view.model,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                if (chat.account.get('jid') === this.account.get('jid')) {\n                    if (chat.id == `${this.account.get('jid')}:saved`) {\n                        let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                        $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                        this.saved_chat = true;\n                        this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                    } else\n                        this.$('.chat-list-wrap .pinned-chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n                }\n            });\n        }\n        all_chats.forEach((chat) => {\n            if (chat.account.get('jid') === this.account.get('jid')) {\n                if (chat.id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap .chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap .pinned-chat-list').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap .chat-list').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap .contact-list').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.modal-content .error').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        this.$(`textarea[name=\"invitation_text\"]`).val('');\n        this.$('.invitation-reason-wrap').addClass('hidden');\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    showReasonWrap: function () {\n        this.$('.invitation-reason-wrap').switchClass('hidden');\n        if (this.$('.invitation-reason-wrap').hasClass('hidden'))\n            this.$(`textarea[name=\"invitation_text\"]`).val('');\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n        this.$('.btn-invitation-reason').click(() => {\n            this.showReasonWrap();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (!$target.hasClass('click-selected') && itemIdx > -1){\n            this.$(`.list-item[data-jid=\"${contact_jid}\"]`).removeClass('click-selected');\n            this.selected_contacts.splice(itemIdx, 1);\n            this.updateCounter();\n            return;\n        }\n        $target.toggleClass('click-selected');\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let reason_text = (this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]);\n        if (this.$(`textarea[name=\"invitation_text\"]`).val()){\n            reason_text = reason_text + '\\n\\n' + this.$(`textarea[name=\"invitation_text\"]`).val();\n        }\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t(reason_text);\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let reason_text = (this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to]);\n        if (this.$(`textarea[name=\"invitation_text\"]`).val()){\n            reason_text = reason_text + '\\n\\n' + this.$(`textarea[name=\"invitation_text\"]`).val();\n        }\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t(reason_text).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          this.model.on(\"hide_chat\", this.hideChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      hideChat: function () {\n          this.model.set({'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettingsModal();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"hide_chat\", this.hideChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber._settings.on(\"change:jingle_calls\", this.updateGroupChatHead, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (!xabber.settings.jingle_calls){\n            return;\n        }\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    hideChat: function () {\n        this.model.set({'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n            let img = new Image();\n            img.onload = () => {\n                onloaded_sprites++;\n                (onloaded_sprites === all_sprites) && $emoji_panel_wrap.find('.uploading-emoticons').detach();\n            };\n            img.src = constants.ASSETS_URL_PREFIX + 'assets/images/emoji/spritesheet' + i++ + '.png';\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        (Math.max.apply(null, widths) !== 0) && this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                        let is_contact_trusted = obj.trust,\n                            unverified_counter = obj.unverified_counter;\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').attr('data-unverified-device-count', unverified_counter).html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                this.account.showSettings(null, 'devices');\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        this.quill.root.focus();\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root.lastElementChild\n            && this.quill.root.lastElementChild.lastChild ? this.quill.root.lastElementChild.lastChild : this.quill.root.lastElementChild;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        range.detach(); // optimization\n        this.quill.root.scrollTop = this.quill.root.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height(),\n            quill_textarea = $(this.quill.container).find('.rich-textarea'),\n            quill_current_height = quill_textarea.prop('scrollHeight');\n        if (quill_current_height !== this.text_input_height) {\n            if (this.text_input_height < quill_current_height){\n                quill_textarea.scrollTop(quill_current_height);\n            }\n            this.text_input_height = quill_current_height;\n        }\n        let quill_content = this.quill.getContents()\n        if (quill_content && quill_content.ops && quill_content.ops.length){\n            let text = quill_content.ops[0].insert;\n            if (text && text.trimStart) {\n                let trimmed_text = text.trimStart();\n                if (text.length != trimmed_text.length){\n                    quill_content.ops[0].insert = trimmed_text;\n                    this.quill.setContents(quill_content, 'user');\n                    this.quill.disable();\n                    setTimeout(() => {\n                        this.focusOnInput();\n                        this.quill.root.focus();\n                    },1)\n                }\n            }\n        }\n\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                if (!edit_msg)\n                    return;\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n            } else {\n                this.unsetForwardedMessages();\n            }\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        ev.preventDefault();\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        if (clipboard_data) {\n            if (clipboard_data.files.length > 0) {\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                else {\n                    let text = _.escape(clipboard_data.getData('text')),\n                        arr_text = Array.from(text);\n                    arr_text.forEach((item, idx) => {\n                        if (item == '\\n')\n                            arr_text.splice(idx, 1, '</p><p>');\n                        if (item == ' ')\n                            arr_text.splice(idx, 1, '&nbsp');\n                    });\n                    text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                    let range = window.getSelection().getRangeAt(0);\n                    range.insertNode($('<div>' + text + '</div>')[0]);\n                }\n            }\n            else {\n                let text = _.escape(clipboard_data.getData('text')),\n                    arr_text = Array.from(text);\n                arr_text.forEach((item, idx) => {\n                    if (item == '\\n')\n                        arr_text.splice(idx, 1, '</p><p>');\n                    if (item == ' ')\n                        arr_text.splice(idx, 1, '&nbsp');\n                });\n                text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                let range = window.getSelection().getRangeAt(0);\n                range.insertNode($('<div>' + text + '</div>')[0]);\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n        this.focusOnInput();\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted);\n        list = _.difference(list, this.currently_loaded_link_references);\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    } else {\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new opusRecorder({\n                        encoderPath: opusRecorderEncoderPath,\n                        encoderSampleRate: 16000,\n                        numberOfChannels: 1\n                }),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob([chunks], { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks = e;\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertEmbed(caret_idx, 'emoji', emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        if (!this.account.chat_settings)\n            return;\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    submit: function (ev, forced) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea(),\n            dfd = new $.Deferred();\n\n\n        if (this.model.get('encrypted') && this.view.$('.chat-notification').hasClass('encryption-warning') && !forced){\n            let unverified_counter = this.view.$('.encryption-warning').attr('data-unverified-device-count');\n            utils.dialogs.ask_extended(xabber.getQuantityString(\"dialog_unverified_devices__header\", unverified_counter || 1), xabber.getQuantityString(\"dialog_unverified_devices__text\", unverified_counter || 1),\n                {modal_class: 'modal-unverified-devices', no_dialog_options: true},\n                { ok_button_text: xabber.getString(\"omemo__alert_new_device__button_manage_devices\"), optional_button: 'send-anyway', optional_button_text: xabber.getString(\"dialog_unverified_devices__send\")})\n                .done((result) => {\n                if (result) {\n                    if (result === 'send-anyway'){\n                        this.submit(ev, true);\n                    }\n                    else{\n                        this.openDevicesWindow();\n                    }\n                }\n            });\n            return;\n        }\n\n        dfd.done(() => {\n            this.$('.mentions-list').html(\"\").hide();\n            $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n                let emoji = emoji_item.innerText;\n                this.account.chat_settings.updateLastEmoji(emoji);\n            });\n            let content_concat = [];\n            if (text.length >= constants.STANZA_MAX_SIZE) {\n                utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n                $rich_textarea.flushRichTextarea();\n                return;\n            }\n            if (text.length) {\n                this.quill.getContents().forEach((content) => {\n                    if (content.attributes) {\n                        let content_attrs = [],\n                            start_idx = content_concat.length,\n                            end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                        for (let attr in content.attributes)\n                            (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                        if (content_attrs.indexOf('mention') > -1) {\n                            let mention_idx = content_attrs.indexOf('mention'),\n                                is_gc = this.contact.get('group_chat'),\n                                target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                            content_attrs.splice(mention_idx, mention_idx + 1);\n                            target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                            mentions.push({\n                                start: start_idx,\n                                end: end_idx,\n                                target: target,\n                                is_gc: is_gc\n                            });\n                        }\n                        if (content.attributes.blockquote) {\n                            if (content_concat.length) {\n                                Array.from(content.insert).forEach((ins) => {\n                                    let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                        quote_end_idx = content_concat.length;\n                                    blockquotes.push({\n                                        marker: constants.QUOTE_MARKER,\n                                        start: quote_start_idx,\n                                        end: quote_end_idx + constants.QUOTE_MARKER.length\n                                    });\n                                    text = Array.from(_.escape(text));\n\n                                    if (quote_start_idx === quote_end_idx) {\n                                        text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                    }\n                                    else {\n                                        text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                    }\n                                    (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                    text[quote_end_idx - 1] += '\\n';\n\n                                    text = _.unescape(text.join(\"\"));\n                                    content_concat = Array.from(content_concat.join(\"\"));\n\n                                    markup_references.forEach((markup_ref) => {\n                                        if (markup_ref.start >= quote_start_idx) {\n                                            markup_ref.start += constants.QUOTE_MARKER.length;\n                                            markup_ref.end += constants.QUOTE_MARKER.length;\n                                        }\n                                    });\n\n                                    content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                                })\n                            }\n                        }\n                        content_attrs.length && markup_references.push({\n                            start: start_idx,\n                            end: end_idx,\n                            markup: content_attrs\n                        });\n                    }\n                    if (content.insert && content.insert.emoji) {\n                        content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                    }\n                    else if (content.attributes && content.attributes.blockquote) {\n                    }\n                    else\n                        content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n                });\n            }\n            let start_length = text.length;\n            text = text.trimStart();\n            if (start_length > text.length) {\n                let delta = start_length - text.length;\n                mentions.forEach((mention) => {\n                    mention.start -= delta;\n                    mention.end -= delta;\n                });\n                markup_references.forEach((markup_reference) => {\n                    markup_reference.start -= delta;\n                    markup_reference.end -= delta;\n                });\n                blockquotes.forEach((blockquote) => {\n                    blockquote.start -= delta;\n                    blockquote.end -= delta;\n                });\n            }\n            if (link_references && link_references.length) {\n                link_references = link_references.filter(item => item.original_text);\n                link_references.forEach((link_reference) => {\n                    if (link_reference && link_reference.original_text) {\n                        link_reference.start = text.indexOf(link_reference.original_text);\n                        if (link_reference.start != -1) {\n                            link_reference.start = 0;\n                            link_reference.end = 0;\n                        }\n                    }\n                });\n            }\n            this.removeAllLinkReferences();\n            this.link_reference_exempted = [];\n            this.removeAllFileSnippets();\n            text = text.trimEnd();\n            $rich_textarea.flushRichTextarea();\n            this.quill.focus();\n            this.displayMicrophone();\n            if (this.edit_message) {\n                this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n                $rich_textarea.placeCaretAtEnd();\n                return;\n            }\n            if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n                if (this.model.get('saved') && this.fwd_messages.length && !text)\n                    this.fwd_messages.forEach((message) => {\n                        this.view.onSubmit(\"\", [message]);\n                    });\n                else\n                    this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            }\n            this.unsetForwardedMessages();\n            xabber.chats_view.clearSearch();\n            if (this.model.messages_view)\n                if (this.model.messages_view.data.get('visible'))\n                    xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n            $rich_textarea.placeCaretAtEnd();\n        });\n        if (attached_files && attached_files.length) {\n            let failed_files = [],\n                files_count = 0,\n                file_check_dfd = new $.Deferred();\n            file_check_dfd.done(() => {\n                if (failed_files.length){\n                    failed_files.forEach((file) => {\n                        this.$(`.message-reference-preview-item-file[data-id=\"${file.uid}\"]`).remove();\n                        this.removeFileSnippetById(file.uid);\n                    });\n                    utils.dialogs.error(\n                        '' + _.pluck(failed_files, 'name').join(` — ${xabber.getString(\"message__file_was_deleted__file_label\")}. \\n`) + ` — ${xabber.getString(\"message__file_was_deleted__file_label\")}.`,\n                        {},\n                        xabber.getQuantityString(\"message__file_was_deleted\", failed_files.length)\n                    );\n                    dfd.reject();\n                } else {\n                    dfd.resolve();\n                }\n            });\n            if (!this.edit_message) {\n                attached_files.forEach((file) => {\n                    utils.tryReadingFile(file).then(()=> {\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    }, ()=> {\n                        failed_files = failed_files.concat([file]);\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    });\n                });\n            } else {\n                file_check_dfd.resolve();\n            }\n        } else {\n            dfd.resolve();\n        }\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.forward-message-wrap').switchClass('non-active', this.model.get('encrypted'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content') || [],\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model),\n                id: stanza_id\n            }),\n            $message = $build('message').attrs({xmlns: undefined});\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file['id'] && $message.c('gallery-id').t(file['id']).up();\n                file.thumbnail && $message.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message]);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, decrypted_msg);\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && my_msgs == $msgs.length && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active') || this.model.get('encrypted'))\n            return;\n        if (this.$('.forward-message-wrap').hasClass('non-active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.ChatBodyPlaceholderContainer = xabber.Container.extend({\n    className: 'chat-body-placeholder-container',\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"chat_list__placeholder\"));\n        }\n    },\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        //readds msg handler if it somehow dissapears\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            let options = {};\n            this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                this.roster && this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                this.roster && this.roster.getRoster();\n            });\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_body_placeholder = this.right_panel.addChild('chat_body_placeholder',\n            this.ChatBodyPlaceholderContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"change:idle\", function () {\n        if (!this.get('idle')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function (no_unread) {\n        this.chats_view.showAllChats(no_unread);\n    }, this);\n\n    this.on(\"show_archive_chats\", function (no_unread) {\n        this.chats_view.showArchiveChats(no_unread);\n    }, this);\n\n    this.on(\"show_saved_chats\", function (no_unread) {\n        this.chats_view.showSavedChats(no_unread);\n    }, this);\n\n    this.on(\"show_notification_chats\", function (no_unread) {\n        this.chats_view.showNotifications(no_unread);\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromSever(jid);\n            }\n        });\n    },\n\n    getChatsFromSever: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"mentions_list__placeholder\"));\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (window.$('.message-actions-panel').length && !window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        this.updateContainersLayout();\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateContainersLayout = function () {\n        let width = this.body.$el.width(),\n            height = this.body.$el.height(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM;\n        let panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 64,\n            toolbar_accounts_heigth = height - 506,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow)) {\n            panel_width = 1536;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.toolbar_view.$el.find('.toolbar-bottom .accounts-wrap .accounts').css({\n            'max-height': toolbar_accounts_heigth,\n        });\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings-modal', {\n        main_overlay: {\n            settings_modal: null,\n        },\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_modal = new this.ViewPath('account.settings_account_modal');\n\n    this.body.addScreen('account_settings_modal', {\n        main_overlay: {\n            account_settings_modal: path_acc_settings_modal\n        },\n    });\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_body_placeholder = new this.ViewPath('chat_item.content_placeholder'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if (options.show_placeholder) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: null,\n                chat_body_placeholder: path_chat_body_placeholder,\n                chat_bottom: null\n            };\n        }\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (!this.accounts.length)\n        this.body.setScreen('login');\n    else if (this.body.isScreen('blank'))\n        this.body.setScreen('all-chats');\n    xabber.trigger(\"start_accounts\");\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n            this.account.trigger('device_trusted', device.id, this.jid);\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                let f_count = this.$('div.fingerprints-content').find('div.row').length;\n                if (!f_count)\n                    this.$('div.fingerprints-content').html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                this.jid == this.account.get('jid') && f_count++;\n                this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.FingerprintsOwnDevices = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-devices-wrap',\n    template: templates.fingerprints_devices,\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.omemo = this.model;\n        this.jid = this.account.get('jid');\n        this.is_own_devices = true;\n    },\n\n    open: function (device_id, is_own) {\n        this.omemo = this.account.omemo;\n        this.data.set('visible', true);\n        this.updateColorScheme();\n        this.show();\n        this.renderOwnDevices(device_id, is_own);\n    },\n\n    updateTrustDevice: function (device_id, $container, context, callback) {\n        this.omemo.getMyDevices().then(() => {\n            let device = this.model.own_devices[device_id];\n            if (!device)\n                return;\n            if (device.get('ik')) {\n                let f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n                    }\n                }, () => {\n                });\n            }\n        });\n    },\n\n    renderTrustOnFingerprint: function (is_trusted, $container, context, callback) {\n        $container.find('.device-encryption').attr('data-trust', is_trusted).addClass('active');\n        $container.attr('data-trust', is_trusted);\n        if (is_trusted === 'unknown'){\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__unverified_device\"));\n        } else if (is_trusted === 'trust') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__trusted_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__trusted_device\"));\n        } else if (is_trusted === 'ignore') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__ignored_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__ignored_device\"));\n        }\n        if (is_trusted !== 'trust' && is_trusted !== 'ignore'){\n            let $warning_container = $container.closest('.devices-wrap').find('.device-encryption-warning'),\n                untrusted_count = parseInt($warning_container.attr('data-not-trusted-count')) + 1;\n            $warning_container.removeClass('hidden').attr('data-not-trusted-count', untrusted_count);\n            $warning_container.find('.device-encryption-warning-label').html(xabber.getString(\"settings_account__encryption_warning_text\", [untrusted_count]));\n        }\n        $container.find('.device-encryption .mdi-lock').removeClass('hidden');\n        context && context.updateHeight && context.updateHeight();\n        callback && callback();\n    },\n\n    renderOwnDevices: function (device_id, is_own) {\n        this.omemo.getMyDevices().then(() => {\n            this.device_id = device_id;\n            this.fingerprint = null;\n            if (is_own)\n                this.updateOwnFingerprint(device_id);\n            else{\n                this.updateOwnFingerprint(device_id);\n                this.updateFingerprints(device_id);\n            }\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateFingerprints: async function (device_id) {\n        let counter = 0,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content .other-device-content'),\n            device = this.model.own_devices[device_id];\n        $container.html('');\n        dfd.done((is_error) => {\n            console.log(is_error);\n            this.$('.dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                container: this.$('.fingerprints-content .other-device-content')[0],\n                alignment: 'left'\n            });\n        });\n        if (device.get('ik')) {\n            let options = {},\n                f = device.generateFingerprint(),\n                fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n            is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n            this.fingerprint = f;\n            $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n            dfd.resolve();\n        }\n        else {\n            this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                let $iq = $(iq),\n                    $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                    ik = $bundle.find(`ik`).text();\n                if (ik) {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let options = {},\n                        f = device.generateFingerprint(),\n                        fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                        is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                    is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                    this.fingerprint = f;\n                    $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                }\n                dfd.resolve();\n            }, () => {\n                dfd.resolve(true);\n            });\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').html(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, true);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, false);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            device_icons = [\n                'device-cellphone',\n                'device-console',\n                'device-desktop',\n                'device-tablet',\n                'device-web',\n            ],\n            error, svg_icon;\n        if (fingerprint.match(/.{1,4}/g))\n            fingerprint = fingerprint.match(/.{1,4}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.account.omemo.own_devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,4}/g).join(\" \"));\n        svg_icon = edit_setting ? 'device-web' : device_icons[Math.floor(Math.random()*device_icons.length)]\n        let $row = templates.fingerprint_devices_item({id,label,trust, svg_icon, fingerprint, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content');\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [this.device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                delete this.model.own_devices[this.device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[this.device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        this.account.trigger('trusting_updated');\n                        this.close();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, this.device_id);\n                }\n            }\n        });\n    },\n\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle(this.model.get('device_attrs'));\n           this.model.set('resend_bundle', false);\n           this.model.set('device_attrs', null);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.model.account.trigger('update_omemo_devices');\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            await this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey){\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            }\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            throw e;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.cached_messages && this.cached_messages.destroy();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                }\n                else {\n                    this.publishBundle();\n                }\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                    }\n                    else {\n                        this.publishBundle();\n                    }\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, plaintext);\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('encryption', {\n                xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION,\n                namespace: Strophe.NS.OMEMO\n            });\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied && options.carbon_direction && options.carbon_direction === 'sent')\n                return;\n\n            let device_id = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid');\n            options.device_id = device_id;\n\n            if (cached_msg) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                        if (options.gallery && deferred)\n                            deferred.resolve($message, options);\n\n                        if (!options.not_verified_device){\n                            let peer = this.getPeer(contact.get('jid')),\n                                device = peer.devices[device_id];\n                            if (device && device.get('fingerprint')) {\n                                let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                                if (_.isUndefined(trusted)){\n                                    options.not_verified_device = device_id;\n                                    options.not_verified_device_no_device = false;\n                                }\n                            } else if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid')){\n                                options.not_verified_device = device_id;\n                                options.not_verified_device_no_device = true;\n                            }\n                        }\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message, options);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n\n                    if (!options.not_verified_device){\n                        let peer = this.getPeer(contact.get('jid')),\n                            device = peer.devices[device_id];\n                        if (device && device.get('fingerprint')) {\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (_.isUndefined(trusted)){\n                                options.not_verified_device = device_id;\n                                options.not_verified_device_no_device = false;\n                            }\n                        } else if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid')){\n                            options.not_verified_device = device_id;\n                            options.not_verified_device_no_device = true;\n                        }\n                    }\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch((e) => {\n                    if (e.name === 'MessageCounterError')//for capturing double decryption of same message\n                        return;\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0, unverified_counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust, peer);\n                resolve({trust: trust, unverified_counter: unverified_counter});\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null){\n                                is_trusted = null;\n                                unverified_counter++;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                else{\n                                    is_trusted = null;\n                                    unverified_counter++;\n                                }\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        contact_trusted = contact_trusted.trust;\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true' || $(keyElement).attr('kex') === '1',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey;\n        try {\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        }\n        catch (e) {\n            throw e;\n        }\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks, callback) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            }, callback);\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p && p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n\n        let prekeys_id_list = Object.keys(this.prekeys.getAll()),\n            prekeys_length = prekeys_id_list.length;\n\n        if (prekeys_length && prekeys_length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - prekeys_length,\n                last_id,\n                counter = 0,\n                used_last_id = 0;\n\n            last_id = Number(prekeys_id_list[prekeys_length - 1]);\n            if (last_id === NaN)\n                xabber.error('last_id is NaN!')\n\n            if (!_.isEmpty(this.own_used_prekeys.getAll())){\n                let used_prekeys_id_list = Object.keys(this.own_used_prekeys.getAll());\n\n                used_last_id = used_prekeys_id_list[used_prekeys_id_list.length - 1];\n                used_last_id = Number(used_last_id);\n\n                if (used_last_id && (used_last_id > last_id)){\n                    last_id = used_last_id;\n                }\n            }\n            for (let i = ++last_id; i < (last_id + missing_keys); i++){\n                xabber.error(i);\n                await this.bundle.generatePreKey(i).then((prekey) => {\n                    bundle.preKeys.push(prekey);\n                    counter++;\n                    if (counter === missing_keys)\n                        this.account.omemo.publishBundle();\n                });\n            }\n            if (missing_keys === 0)\n                this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function (device_attrs) {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        xabber.error(pks);\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            this.set('device_attrs', device_attrs);\n            return;\n        }\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (device_attrs){\n                device_attrs.omemo.publishDevice(device_attrs.device_id, device_attrs.label);\n            }\n        });\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, (res) => {\n            this.publish(spk, ik.pubKey, pks, () => {\n                dfd.resolve();\n            });\n        }, (err) => {\n            if (($(err).find('error').attr('code') == 404)){\n                this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                    this.publish(spk, ik.pubKey, pks, () => {\n                        dfd.resolve();\n                    });\n                });\n            }\n        });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    getMessages: function (contact) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages;\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/emojis.json\": 85304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92444;","var map = {\n\t\"./accounts/account_settings_modal.html\": 59166,\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_account_password.html\": 15415,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item_modal.html\": 5766,\n\t\"./accounts/delete_files_media_gallery.html\": 72971,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item_modal.html\": 56001,\n\t\"./accounts/media_gallery_account.html\": 57872,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/single_account_settings_modal.html\": 86572,\n\t\"./accounts/status_message_input_widget.html\": 71326,\n\t\"./accounts/token_item_modal.html\": 84377,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/unregister_account.html\": 49485,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_devices_item.html\": 16969,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/fingerprints_devices.html\": 26376,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/setting_language_radio_input.html\": 49707,\n\t\"./base/setting_radio_input.html\": 94944,\n\t\"./base/settings.html\": 15887,\n\t\"./base/settings_modal.html\": 81012,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_content_placeholder.html\": 36209,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./chats/unread_marker.html\": 98875,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-cancel.html\": 53283,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/account.html\": 32721,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/address.html\": 94429,\n\t\"./svg/alarm-bell.html\": 47158,\n\t\"./svg/alert-circle.html\": 55133,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/birthday.html\": 74741,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/bug.html\": 89965,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/camera.html\": 26716,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chat.html\": 71714,\n\t\"./svg/check-circle.html\": 62633,\n\t\"./svg/check.html\": 26446,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circle-slice-1.html\": 45013,\n\t\"./svg/circle-slice-2.html\": 15460,\n\t\"./svg/circle-slice-3.html\": 56377,\n\t\"./svg/circle-slice-4.html\": 63363,\n\t\"./svg/circle-slice-5.html\": 53161,\n\t\"./svg/circle-slice-6.html\": 90100,\n\t\"./svg/circle-slice-7.html\": 47263,\n\t\"./svg/circle-slice-8.html\": 16472,\n\t\"./svg/circles-outline.html\": 47033,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/client-outline.html\": 52773,\n\t\"./svg/client.html\": 6625,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/cloud.html\": 55696,\n\t\"./svg/contact-add.html\": 63272,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/database-lock.html\": 17338,\n\t\"./svg/database.html\": 41473,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/description.html\": 63993,\n\t\"./svg/device-cellphone.html\": 79824,\n\t\"./svg/device-console.html\": 32111,\n\t\"./svg/device-desktop.html\": 5772,\n\t\"./svg/device-tablet.html\": 18955,\n\t\"./svg/device-web.html\": 16919,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/email.html\": 22505,\n\t\"./svg/expires.html\": 21321,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/id.html\": 50807,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/information.html\": 66035,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/invite.html\": 75917,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/job.html\": 97579,\n\t\"./svg/key-variant.html\": 76499,\n\t\"./svg/key.html\": 46753,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/lock-alert.html\": 63234,\n\t\"./svg/lock-check.html\": 14833,\n\t\"./svg/lock-cross.html\": 8513,\n\t\"./svg/lock-open.html\": 1652,\n\t\"./svg/lock-question.html\": 67160,\n\t\"./svg/lock.html\": 6258,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/security.html\": 91467,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/star-face.html\": 1866,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/status.html\": 5000,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/trash.html\": 61686,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/web-cancel.html\": 26330,\n\t\"./svg/web.html\": 7094,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit_modal.html\": 43918,\n\t\"./vcard/vcard_modal.html\": 59265,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","let client_translation_progress = {\"en\":100,\"ar\":25,\"az\":2,\"be\":12,\"bg\":58,\"bs\":0,\"ca\":23,\"cs\":99,\"cy\":0,\"da\":0,\"de\":45,\"el\":27,\"es-ES\":31,\"es-latin\":61,\"et\":0,\"fa\":4,\"fi\":9,\"fil\":13,\"fr\":32,\"ga-IE\":0,\"he\":19,\"hi\":0,\"hr\":0,\"hu\":13,\"hy-AM\":8,\"id\":95,\"is\":0,\"it\":65,\"ja\":18,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":3,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":19,\"ne-NP\":0,\"nl\":18,\"no\":0,\"oc\":12,\"pa-IN\":0,\"pl\":59,\"pt-BR\":63,\"pt-PT\":13,\"qya-AA\":0,\"ro\":15,\"ru\":62,\"sat\":1,\"sco\":0,\"si-LK\":33,\"sk\":18,\"sl\":25,\"sq\":3,\"sr\":12,\"sr-Cyrl-ME\":0,\"sv-SE\":35,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":62,\"uk\":25,\"uz\":0,\"vi\":12,\"yo\":0,\"zh-CN\":99,\"zh-TW\":10,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.4.83\",\"version_description\":\"updated sound names and directories\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(51008)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","constants","ASSETS_URL_PREFIX","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_DEFAULT_GREY","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","DOWNTIME_RECONNECTION_TIMEOUT","PING_SENDING_INTERVAL","IDLING_MINIMAL_TIMEOUT","IDLING_MAXIMUM_TIMEOUT","IDLING_DEFAULT_TIMEOUT","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","urls","credential","username","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","USE_SOCIAL_AUTH","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","BACKGROUND_IMAGES_XML_URL","BACKGROUND_PATTERNS_XML_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","idleJs","opusRecorder","opusRecorderEncoderPath","xabber_i18next","xabber_i18next_sprintf","sha256","VanillaQR","magnificPopup","backgroundImagesXml","backgroundPatternsXml","Strophe","evaluate","interpolate","templates","_addTemplate","name","options","path","split","tpl","join","default","tpl_name","pop","res","attr","is_svg","data","html","$html","find","each","$el","this","svg_name","removeClass","addClass","svg","insertSvg","addTemplate","addSvgTemplate","addJSONTemplate","attention_json","attention","forEach","item","attention_sound","file_name","not_selectable","push","ringtones_json","ringtones","ringtone","dialtones_json","dialtones","dialtone","notifications_json","notifications","notification","system_json","system_sound_list","system_item","system","all_sounds","concat","raw_data","x","y","getEmoji","offset","lead","trail","emoji_data","emoji","emoji_regexp","prototype","emojify","sprite","tag_name","emoji_size","href","title","replace","emoji_code","Number","toString","length","repeat","img_src","removeEmoji","replaceEmoji","selector","text","all","get","getByIndex","idx","hasher","_image_cache","COLORS","MAX_IMG_SIZE","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","url","window","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","includes","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","value","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","isArray","ok_button","cancel_button","optional_buttons","reverse","no_dialog_options","quoted_text","append","cancel_button_main","inverted_buttons","img_details","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","isVisibleInViewport","elementTop","top","elementBottom","outerHeight","viewportTop","scrollTop","viewportBottom","isVisibleInContainer","container","eleTop","offsetTop","eleBottom","clientHeight","containerTop","containerBottom","isFullyVisibleInContainer","isBottomVisibleInContainer","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","replaceAll","RegExp","utils","uuid","c","r","random","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","tryReadingFile","Promise","reject","console","log","getDomainFromUrl","a","test","hostname","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_name","substr","toLowerCase","getKeyByValue","object","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","sounds","client_translation_progress","bc","BroadcastChannel","onmessage","event","disabled_client","postMessage","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","client_name","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","check_config","_settings","Settings","storage_name","getStorageName","fetch","settings","location","host","pathname","_cache","ModelWithStorage","cache","save","extendFunction","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","ononline","disconnectWhenConnecting","lang","language","loadTranslations","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","msg","warn","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","cacheFavicons","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","idling","idling_time","notifications_private","notifications_group","jingle_calls","notifications_volume_enabled","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","sound_on_call_busy","hotkeys","avatar_shape","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","configure","config","pick","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","updateFaviconConnected","is_disconnected","account","isConnected","session","updateAllMessageCounterOnDisconnect","is_fast","connection","activate","extendWith","reduce","instance","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","tree","close_settings","main_overlay","patchTree","has","className","isNull","new_view","events","keyUpOnSearch","stopPropagation","ids","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","query_transliterated","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","NS","MAM","DATAFORM","up","cnode","RSM","toXML","handler","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","unbind","chat_item_view","new_attrs","stamp","uniqueId","isScreen","show_placeholder","right","right_force_close","right_contact","content","_prev_scrolltop","_scrolltop","previous_screen","changed","showChatPlaceholder","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","clickAllChats","showAllChats","no_unread","closest","is_active","showArchive","showSavedChats","right_contact_save","scroll_to_chat","once","showNotifications","showChatsByAccount","showContacts","showMentions","showSettings","account_block_name","showSettingsModal","showPlaceholder","screen_name","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","left","setFullScreen","fullscreenElement","exitFullscreen","requestFullscreen","cancelFullScreen","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","status_text","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","xPercent","innerWidth","yPercent","innerHeight","dfd","provider","updateColorScheme","player_item","message_unique_id","video_sources","video_src","source","sources","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","video_file","video_decrypted","decryptFile","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","renderVoiceMessage","toggleMute","settings_modal","updateLanguage","updateAvatarLabel","updateSoundsLabel","closeSettings","updateAccounts","updateSounds","updateLanguages","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","belowOrigin","updateHeight","updateSliders","block_name","$elem","jumpToBlock","settings_single_account_modal","first_account","single_account_has_rendered","forced_ps_container","single_account_modal","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","$tab","range_min","range_max","range_value","setting_radio_input","input_name","input_id","cid","group_element","element_no_sound","group_element_no_sound","default_element","setting_language_radio_input","progress","second_prog","second_prog_text","second_lang","second_locale","second_element","progress_text","current_sound","pause","backToMenu","backToSubMenu","elem_parent","goToWebNotifications","setIdling","setIdlingTimeout","$target","setNotificationsVolumeEnabled","setNotifications","requestPermission","setPrivateNotifications","setGroupNotifications","setJingleCalls","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setPrivateSound","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","changeBackgroundImage","openColorPicker","colorPicker","chooseMainColor","changeBlur","changeNotificationsVolume","volume","sound","changeVignetting","switchVignetting","is_switched","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","platform_text","modal_classes","label_text","sound_private_text","sound_group_text","sound_on_attention_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","onGetPatternsCallback","onGetImagesCallback","thumbnail","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","updateScreen","$active_screen","non_active","current_count","img","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","request","headers","dataType","success","ajax","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","clearInterval","$icon","favicon","favicon_gray","favicon_message","stopBlinkingFavicon","resetMessageCounter","onChangedFocusState","popupNotification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","initIdleJS","stop","idle","onIdle","onActive","keepTracking","startAtIdle","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","main_overlay_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_modal_view","SettingsModalView","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","account_settings_list","AccountSettingsList","order_timestamp","AccountsOrderTimestamp","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","password","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","connected","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","submit","_submit_cb","error_text","submit_unregister","_submit_unregister_cb","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","response","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","server_features","create","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","token","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","email","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit_modal","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","updateTextFields","changePlaceholder","nickname_placeholder","setVCard","$pres","Images","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","_attrs","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","order","getLastOrder","deleteAccount","photo_hash","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","call","xml","isOnline","getPassword","isReconnecting","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","createFastConnection","login","token_invalidated","fast_conn_manager","disconnect","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onAuthFailed","CONNECTED","onTokenRevoked","DISCONNECTED","flush","_main_interval_worker","terminate","onConnectionConflict","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","change_password_view","successFeedback","errorFeedback","old_password","change_password_connection","$password_input","change_password_connection_manager","unregisterAccountCallback","unregister_account_view","unregister_account_connection","unregister_account_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","deactivate","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","omemo_id","last_auth","ip_address","ip","x_tokens_list","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_fast_interval_worker","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","retractions_query","Builder","is_msg","b","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","has_modal_settings","settings_account_modal","revokeXToken","token_num","revokeAllXTokens","show_settings","dont_change_screen","show_settings_after_delete","dont_change_screen_after_delete","omemo","groups_settings","clearStorage","groupchat_settings","chat_settings","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","from_jid","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","testGalleryFileSlot","onloadend","b64","responseJSON","gallery_feature","gallery_iq_answered","stringify","request_id","gallery_auth_errback","verifying_code","verifying_mess","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","testFile","err_text","getStorageStats","uploadFile","formData","FormData","metadata","voice","processData","deleteFile","file_id","getOpenGraphData","site","ogp","image_height","image_width","video_url","createMessageFromIQ","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","acc1","acc2","models","settings_list","getEnabledList","getConnectedList","onAdd","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","ns","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","vcard_modal","showEditView","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getAvatars","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","filterType","sorting","order_by","onTabClick","tab_header","backToMain","showDeleteFilesView","gallery_view","sortFiles","sort_type","onClickFile","prev_audio_message","file_url","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","load","assign","obj_per_page","current_rendered_type","renderFiles","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","created_at","download_only","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","enableFilesSelect","onSelectFile","disableFilesSelect","selectFile","$target_input","selected_header","selected_count","deleteSelectedFiles","openStoragePanel","wheelPropagation","delete_files_media_gallery","onRender","deletePercent","percent","current_page_preview","getFilesForDeletion","renderForDeletion","date_lte_for_deletion","dropdown_settings","deleteFilesFiltered","date_lte","account_settings_modal","status_field","updateBlocks","updateGallery","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateXTokens","groups","updateGroupsLabel","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateOmemoDevices","updateEnabledOmemo","updateEncryptedChatstates","updateBlockedLabel","blocklist","blocked_count","jumpToBlockHandler","tabs","updateDeviceInformation","backToMenuHandler","backToSubMenuHandler","deselectBlocked","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","unregisterAccount","store","showResources","resource_id","hideResources","renderAllXTokens","sortBy","pretty_token","findWhere","toJSON","is_omemo","$cur_token_html","current_token_item_modal","$token_html","token_item_modal","omemo_own_devices","omemo_device_id","updateTrustDevice","_single_account","own_devices","fing","$this_device","generateFingerprint","getBundle","pk","spk","ik","fingerprint","openFingerprint","is_own","openFingerprintDevice","groups_count","mdiclass","$sync_icon","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","showQRCode","qrcode","noBorder","domElement","openBlockWindow","block","blockContact","unblockSelected","single_account_settings_modal","args","status_message_input_widget","global_settings_item_modal","updateNickname","onDragTo","onMoveAccount","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","participant","current_items","current_file","addAvatarSelecter","addNotOwnAvatar","addAvatar","img_from_gallery","createFileFromURL","participant_node","updateMemberAvatar","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","getUserMedia","stream","takePicture","clearPhoto","context","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveNotOwnAvatar","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","tab","pickEmoji","change_password","is_login","authFeedback","getActionName","setPassword","authentication","change_account_password","$old_password_input","$password_confirm_input","password_confirm","password_not_error","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","socialAuth","origin","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","splice","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","logout","unregister_account","checked_count","submitUnregister","xmpp_login_panel","XmppLoginPanel","Container","Accounts","ToolbarAccountsBlockView","SettingsAccountsModalBlockView","add_account_view","AddAccountView","UnregisterAccountView","change_account_password_view","ChangeAccountPasswordView","delete_files_view","DeleteFilesFromGalleryView","onbeforeunload","login_screen","xabber_login","single_account","supports","renderSingleAccount","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","Worker","downtime","onLine","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","b64_sha1","updateCachedInfo","is_deleted","out_request","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","resetParticipantsList","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","setActiveStateSendInterval","$msg","_sending_active_chatstate_timeout","_sending_active_chatstate_interval","handlePresence","$group_chat_info","updateGroupChatsList","group_chat_info","parseGroupInfo","prev_group_info","sync_deleted","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","receiver","XABBER_CHAT","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","cached_stanza_id","references","cached_message","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","user_info","participant_info","participant_nickname","chat_content","is_scrolled","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","details_view","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details_right","name_field","contact_edit_view","edit_groups_view","updateNotifications","updateJingleButtons","updateChilds","updateSubscriptions","setButtonsWidth","updateIndicator","keydownHandler","hideEdit","isOpen","openChat","scrollToTopSmooth","animate","widths","button","bottom_block_scroll","is_blocked","is_server","$label_outcoming","$label_incoming","prev","showEdit","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","muteChat","muted_seconds","mute_type","unmuteChat","$search_form","addContact","changeList","list_name","scrollLeft","addList","_render","constructor_func","requestAuthorization","group_chat_details_right","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit_right","hideRestrictions","showRestrictions","is_owner","change_group","clearHistory","head","editProperties","leaveGroupChat","inviteUser","edit_view","getInvitations","deleteGroup","makeSelfie","makeEmojiAvatar","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","temporary_items","all_messages_loaded","getMediaFromDecryptedMessages","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","block_height","updateForParticipant","delegateEvents","filter_type","fail","cached_messages","getMessages","entries","msg_items","filtered_items","items_count","filterEncryptedFiles","encryptedFilesHandler","files_count","updateEncryptedMedia","is_loaded","true_voice","media_item","is_encrypted","media_items_empty","messages_count","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","removeParticipantFromList","badge","is_me","pretty_present","present","isValid","fromNow","group_member_item","prependTo","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateRightsView","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","url_forced","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","resetParticipants","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","inv_count","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","settings_view","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","where","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","updateExpanded","expanded","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","onGroupAddedSingleAccount","rendered_once","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","add","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","cached_conversations_exclude","onSyncIQ","last_version_sync","syncCachedConversations","request_with_stamp","cached_conversations","syncConversation","conversation","parseXML","saved","conv","account_conversation_type","removeFromCachedConversations","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","current_chat_timestamp","retracted_msg_id_list","putInCachedConversations","last_message","updateEncryptedChat","updateMutedList","$jingle_message","getCallingAvailability","reason","sendReject","initIncomingCall","sync_update","updateEmptyChat","is_unread","delay","messages_unread","isSenderMe","is_last_sync","sync_timestamp","sync_rsm_after","last_chat_msg_id","conversations_loaded","last_sync_timestamp","getAllFromCachedConversations","retract_version","sync_options","getRoster","request_ver","getAllFromRoster","roster_items","ver","new_roster_version","onRosterItem","is_version","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","updateTabsLabel","selectUnblock","updateUnblockButton","unblockContactByJid","hideEmptyContainers","rendered","tmp","contact_blocked_item","domains","contact_label_text","domains_label_text","invitations_label_text","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","onPlaceholderUpdate","add_contact","group_data","updateGroups","renderAccountItem","bindAccount","renderGroupsForAccount","stepForward","add_contact_account_item","silent","groups_checkbox_list_contact","selectAccount","checkJid","force_opened_state","custom_notifications","message_preview","pinned","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clearDataBase","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","Boolean","_roster_settings","RosterSettings","contacts_view","RosterLeftView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","destroyOnEcho","removeMessage","forwarded_message","getState","getVerboseState","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_archived","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","is_unread_archived","participant_message","echo_msg","is_between_anchors","not_encrypted","not_verified_device","not_verified_device_no_device","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","GEOLOC","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","action","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","onChangedLastReadMsg","_no_scrolling_event","is_first","requestHistoryBetweenAnchors","read_count","message_item","_long_reading_timeout","scrollToUnread","recountUnread","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","receiveNoTextMessage","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","sendMarker","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","omemo_dfd","msg_options","$delivery_msg","msg_id","by","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","undelivered_messages","last_read_msg_id","second_deferred","new_last_read_msg","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","getConversationType","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","SYNCHRONIZATION_REGULAR_CHAT","message_counter","content_placeholder","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","italics","bottom","draft_message","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","click_counter","setDefaultPlaceholder","onChatRemoved","loading_history","history_loaded","first_msg_id","last_msg_id","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onChangedReadState","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","_onscroll_read_messages_timeout","readVisibleMessages","msg_item","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","timer","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","_is_scrolled_bottom","onChangedActiveStatus","onChangedIdleStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMsgsMissingDevices","updateMyInfo","updateMsgsDeviceTrusting","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trust","peer","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","is_context","last_visible_unread_msg","readMessage","hideMessagesAfterSkipping","synced_message","$synced_message","last_visible_msg","$last_visible_msg","_read_last_message_timeout","unread_context_messages","showUnreadMarker","unread_marker","$last_read_msg","mam_query","getMessageArchive","unread_history","scrollToUnreadWithButton","showDayIndicator","is_focused","indicator_idx","opacity_value","$chatday_indicator","$messages","marker","indicator","scroll_read_timer","removeAllMessagesExceptLast","_interval","is_saved","sendMAMRequest","func_conn","_delete_handler_timeout","send_counter","previous_history","_load_history_timeout","unread_history_first","first_unread_msg_stanza_id","unread_history_before","last_history","_wait_load_unread_history","last_archive_id","loadUnreadHistory","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","OGPLinkOnload","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","is_scrolling_needed","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","$prev_message","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","messages_to_save","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","current_time","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","main","is_contact_trusted","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","date","day_date","msg_players","msg_videos","existing_player","message_id","video_id","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","_pending_time","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","checkContactFingerprints","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","oncancel","xhr_status","fakeStatus","fakeResponse","slot_response","setRequestHeader","response_text","error_status","statusText","err_status","files_","file_new_format","imgContent","video_attrs","$video_wrap_template","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","is_missed_msg","onTouchMessage","fwd_link_references","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","chat_content_placeholder","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","on_format","classList","blotName","optimize","QuillEmoji","domNode","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","settings_right","participant_version","active_right_screen","participant_msg_item","$retracted_msg","retracted_msg_id","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","force_bottom","current_scrolling","scrolled_to_bottom","showGroupChats","group_chats_pinned","showChats","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","archive_chats","saved_chats","notificatons_chats","all_chats","all_chats_pinned","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","showReasonWrap","addUser","itemIdx","reason_text","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","hideChat","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","resources_view","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","clear","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","onloaded_sprites","all_sprites","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","unverified_counter","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","lastElementChild","lastChild","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","quill_textarea","quill_current_height","text_input_height","quill_content","getContents","ops","insert","trimmed_text","setContents","bottom_height","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","arr_text","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","encoderPath","encoderSampleRate","numberOfChannels","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","forced","emoji_item","innerText","content_concat","content_attrs","mention_idx","ins","quote_start_idx","quote_end_idx","markup_ref","start_length","delta","markup_reference","editMessage","failed_files","file_check_dfd","pluck","setText","msg_author","image_preview","$img_html_preview","fwd_images","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","putMessage","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","deleteTimedHandler","_get_msg_handler","addTimedHandler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","chat_body_placeholder","ChatBodyPlaceholderContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateLayout","updateContainersLayout","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","is_wide","is_narrow","toolbar_accounts_heigth","right_contact_panel_styles","right_contact_panel_saveable","wide","placeholders","path_acc_settings_modal","ViewPath","path_chat_head","path_chat_body","path_chat_body_placeholder","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderOwnDevices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","devices_count","$container","f_count","old_fingerprint","addRow","getBundleInfo","getIdentityKeyPair","pubKey","padStart","trustDevice","is_session_initiated","ignoreDevice","delete_button","edit_setting","fingerprint_item","deleteDevice","fingerprints_devices","renderTrustOnFingerprint","$warning_container","untrusted_count","device_icons","fingerprint_devices_item","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","cacheRetractVersion","getRetractVersion","dev_id","rand","encryptedMessage","encryptedElement","myKeys","rid","kex","EXPLICIT_MESSAGE_ENCRYPTION","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","cached_msg","getMessage","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","prekeys_id_list","prekeys_length","last_id","missing_keys","used_last_id","NaN","isEmpty","used_prekeys_id_list","rec","device_attrs","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","api_service","discovery","ui","g","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}