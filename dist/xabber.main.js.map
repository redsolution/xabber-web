{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,isnH,6DCAA,muZ,6DCAA,oR,6DCAA,25D,6DCAA,igC,6DCAA,upE,6DCAA,0jD,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,8uB,4DCAA,uoH,6DCAA,k8E,6DCAA,k6B,2DCAA,o2B,6DCAA,miL,6DCAA,s8hB,6DCAA,+jD,6DCAA,mf,6DCAA,0sC,6DCAA,m7lB,6DCAA,4mG,4DCAA,qjC,6DCAA,wkC,6DCAA,kmB,6DCAA,8jI,6DCAA,ooE,6DCAA,k7B,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,0pE,4DCAA,w9B,6DCAA,4a,6DCAA,o2E,6DCAA,we,6DCAA,quC,6DCAA,i8xD,6DCAA,2hI,6DCAA,uS,6DCAA,qpO,6DCAA,mzC,4DCAA,6hD,6DCAA,orO,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,qrB,6DCAA,ijM,4DCAA,2+B,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,28E,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,miE,6DCAA,6e,6DCAA,0J,6DCAA,0sE,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,woB,6DCAA,iE,6DCAA,0yG,6DCAA,ghE,6DCAA,2hB,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,oR,6DCAA,iR,6DCAA,ujI,6DCAA,qpJ,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,o/V,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,qgM,6DCAA,q4F,6DCAA,qoG,6DCAA,0tK,6DCAA,+wD,6DCAA,qxE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,qkB,6DCAA,8iB,6DCAA,q1I,6DCAA,0jO,4DCAA,+sF,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,i9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,kT,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,+qD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,wwB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,49B,6DCAA,4iC,6DCAA,yiC,6DCAA,q/B,6DCAA,i5B,6DCAA,mrC,6DCAA,ksC,6DCAA,m+B,6DCAA,0rC,6DCAA,kpD,6DCAA,4/B,4DCAA,u8B,6DCAA,4qC,6DCAA,oqC,6DCAA,q5B,6DCAA,olB,6DCAA,qsB,6DCAA,2mB,6DCAA,oxC,6DCAA,85B,6DCAA,onB,6DCAA,6gC,6DCAA,6oC,6DCAA,i4B,6DCAA,2xB,6DCAA,k7B,6DCAA,6xB,6DCAA,yqB,6DCAA,2sB,4DCAA,gqB,6DCAA,svB,4DCAA,6yC,6DCAA,y5B,6DCAA,uyB,6DCAA,szB,6DCAA,mpB,6DCAA,qlC,6DCAA,siC,6DCAA,2kD,6DCAA,q0B,6DCAA,o7E,6DCAA,gkC,6DCAA,m6B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,s/B,6DCAA,osB,4DCAA,otD,6DCAA,s5B,6DCAA,0rC,6DCAA,i8B,6DCAA,k4B,6DCAA,kjC,6DCAA,y6B,4DCAA,g7C,4DCAA,mvB,6DCAA,svB,6DCAA,siB,6DCAA,yqB,6DCAA,i4C,6DCAA,+jB,6DCAA,izB,6DCAA,k/B,6DCAA,yyB,6DCAA,i/B,4DCAA,q8B,6DCAA,4hB,6DCAA,w7B,6DCAA,ymC,6DCAA,qsB,6DCAA,gxB,6DCAA,ioB,6DCAA,6xL,6DCAA,g/B,6DCAA,q/C,6DCAA,y6B,6DCAA,qvC,6DCAA,6vC,6DCAA,gsC,6DCAA,uyB,6DCAA,88B,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,yBAEVK,WAAY,CACRN,IAAK,mCACLC,KAAM,0BAIdM,mBAAoB,CAChBC,IAAK,CACDR,IAAK,wCACLC,KAAM,yBAEVQ,IAAK,CACDT,IAAK,sCACLC,KAAM,mBAEVF,GAAI,CACAC,IAAK,0CACLC,KAAM,cAIdS,gBAAiB,SAAUC,GACvB,MAAO,CACH,kBAAqB,+CACrB,iBAAoB,8CACpB,mBAAsB,gDACtB,gBAAmB,6CACnB,kBAAqB,+CACrB,OAAU,oCACV,QAAW,qCACX,MAAS,oCACXA,EACN,EAEAC,aAAc,OACdC,YAAa,CAAC,OAAQ,YAAa,SAAU,SAAU,OAAQ,SAE/DC,YAAa,CACTC,IAAK,kwUACLC,IAAK,s6JACLC,KAAM,wyOAGVC,WAAY,CACRC,MAAO,CACH,YACA,aACA,cACA,YACA,gBACA,aACA,2BACA,qBACA,cAEJC,MAAO,CACH,cACA,YACA,YACA,YACA,aACA,YACA,yBACA,+BACA,eACA,iBACA,iBACA,yBACA,iBACA,aACA,eAEJC,MAAO,CACH,aACA,YACA,YACA,kBACA,aACA,iBACA,cACA,aACA,eAEJC,SAAU,CACN,WACA,WACA,WACA,YACA,6BACA,aACA,WACA,WACA,gBACA,sCACA,kBACA,0CACA,8CACA,sBAEJC,IAAK,CACD,mBAEJC,MAAO,CACH,iDACA,4BAEJC,QAAS,CACL,kBACA,mBACA,+BACA,oBACA,+BAEJC,aAAc,CACV,gCACA,oDAIRC,UAAW,CACP,GAAM,UACN,GAAI,sBACJ,QAAS,UACT,QAAS,eACT,QAAS,aACT,QAAS,YACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,UACT,QAAS,QACT,QAAS,UACT,QAAS,WACT,MAAS,wBACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,QACT,SAAU,WACV,QAAS,WACT,QAAS,UACT,GAAM,QACN,QAAS,SACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,mBACT,QAAS,WACT,QAAS,WACT,QAAS,MACT,QAAS,UACT,SAAU,mBACV,QAAS,MACT,QAAS,QACT,QAAS,WACT,QAAS,SACT,QAAS,gBACT,QAAS,WACT,QAAS,aACT,QAAS,SACT,QAAS,QACT,QAAS,gBACT,QAAS,iBACT,QAAS,SACT,QAAS,aACT,QAAS,kBACT,QAAS,UACT,QAAS,mBACT,QAAS,SACT,QAAS,wBACT,QAAS,YACT,SAAU,SACV,QAAS,SACT,QAAS,UACT,SAAU,QACV,QAAS,QACT,QAAS,aACT,QAAS,cACT,QAAS,QACT,aAAc,yBACd,QAAS,kBACT,QAAS,UACT,QAAS,YACT,QAAS,QACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,SAAU,UACV,QAAS,SACT,QAAS,aACT,QAAS,sBACT,QAAS,aACT,QAAS,SACT,QAAS,OACT,QAAS,QACT,QAAS,WAGbC,0BAA2B,CACvB,MAAS,WACT,QAAS,MAGbC,kBAAmB,CAAC,EAEpBC,mBAAoB,iCACpBC,gBAAiB,gCACjBC,iBAAiB,EACjBC,uBAAuB,EACvBC,0BAA2B,8CAC3BC,eAAe,EACfC,qBAAsB,OAEtBC,cAAe,eACfC,YAAa,0CACbC,wBAAyB,iBACzBC,gBAAiBC,KAAKC,IAAI,EAAG,IAE7BC,WAAY,GACZC,iBAAkB,IAClBC,mBAAoB,GAEpBC,WAAY,MACZC,YAAa,iBACbC,kBAAmB,SACnBC,yBAA0B,+BAC1BC,YAAa,mCACbC,aAAc,gCACdC,uBAAuB,EACvBC,cAAc,EACdC,WAAY,yBACZC,cAAe,0BACfC,kBAAmB,4CACnBC,oBAAqB,qCACrBC,0BAA2B,gEAG/BjM,iBAA6B,CAAC,GAC9BA,EAAUkM,iBAAiBlM,EAAUuE,mBAAqB,SAC1DvE,EAAUkM,iBAAiBlM,EAAUsE,oBAAsB,UAC3DtE,EAAUkM,iBAAiBlM,EAAUwE,mBAAqB,SAE1DxE,EAAUmM,UAAY,CAAC,EACvBnM,EAAUmM,UAAUnM,EAAU0E,WAAa,QAC3C1E,EAAUmM,UAAUnM,EAAU2E,aAAe,UAC7C3E,EAAUmM,UAAUnM,EAAU4E,UAAY,OAC1C5E,EAAUmM,UAAUnM,EAAU6E,eAAiB,YAC/C7E,EAAUmM,UAAUnM,EAAU8E,eAAiB,YAC/C9E,EAAUmM,UAAUnM,EAAU+E,cAAgB,WAC9C/E,EAAUmM,UAAUnM,EAAUyE,aAAe,cAC7CzE,EAAUmM,UAAUnM,EAAUgF,WAAa,QAE3ChF,EAAUoM,kBAAoB,CAAC,EAC/BpM,EAAUoM,kBAAkBpM,EAAU0E,WAAa,mCACnD1E,EAAUoM,kBAAkBpM,EAAU2E,aAAe,qCACrD3E,EAAUoM,kBAAkBpM,EAAU4E,UAAY,kCAClD5E,EAAUoM,kBAAkBpM,EAAU6E,eAAiB,uCACvD7E,EAAUoM,kBAAkBpM,EAAU8E,eAAiB,uCACvD9E,EAAUoM,kBAAkBpM,EAAU+E,cAAgB,sCACtD/E,EAAUoM,kBAAkBpM,EAAUyE,aAAe,mCACrDzE,EAAUoM,kBAAkBpM,EAAUgF,WAAa,mCAEnD,S,iaC/bA,QAAe,WAAS,CACpBqH,EAAG,IACHC,EAAG,IACHC,OAAQ,IACRC,WAAY,IACZC,KAAMC,EAAA,EACNC,MAAO,IACPC,UAAW,IACXC,KAAM,IACNC,KAAM,IACNC,eAAgB,IAChBC,uBAAwB,IACxBC,OAAQ,IACRC,cAAe,IACfC,QAAS,KACV,K,eChDC,qBAAqB,CACjBC,SAAW,sBACXC,YAAc,uBAGlB,IAAIC,EAAY,CAAC,EAEbC,EAAY,SAAUC,GACtB,IAAIC,EAAQ,IAAE,UAAUD,KAAKA,GAQ7B,OAPAC,EAAMC,KAAK,qBAAqBC,MAAK,WACjC,IAAIC,EAAM,IAAEC,MACRC,EAAWF,EAAIG,KAAK,WACxBH,EAAII,YAAY,oBAAoBC,SAAS,OAAOH,GAC/CI,KAAK,eAAgB,MAC1BN,EAAIJ,KAAKF,EAAUa,IAAIL,KAC3B,IACOL,EAAMD,MACjB,EAEIY,EAAe,SAAUC,EAAMC,GAC/BA,IAAYA,EAAU,CAAC,GACvB,IAAIC,EAAOF,EAAKG,MAAM,KAClBC,EAAM,aAAW,SAAQ,KAA0BF,EAAKG,KAAK,KAAK,SAASC,SAC3EC,EAAWL,EAAKzG,MAChB+G,EAAMvB,EACV,SAAOiB,GAAM,SAAUL,GACnBW,EAAIX,KAAUW,EAAIX,GAAQ,CAAC,GAC3BW,EAAMA,EAAIX,EACd,IACII,EAAQQ,OACRD,EAAID,GAAYH,EAEhBI,EAAID,GAAY,SAAUb,GACtB,OAAOR,EAAUkB,EAAIV,GACzB,CAER,EAgBIgB,EAAc,SAAUV,GACxBD,EAAaC,EAAM,CAACS,QAAQ,GAChC,EAEIE,EAAiB,SAAUX,GAC3BD,EAAaC,EAAM,CAACS,QAAQ,GAChC,EAGAC,EAAY,eACZA,EAAY,qBACZA,EAAY,yBACZA,EAAY,+BACZA,EAAY,0BACZA,EAAY,qBACZA,EAAY,gBACZA,EAAY,iBACZA,EAAY,cACZA,EAAY,qBACZA,EAAY,4BACZA,EAAY,qBACZA,EAAY,qBAEZA,EAAY,4BACZA,EAAY,qCACZA,EAAY,kCACZA,EAAY,8BACZA,EAAY,iCACZA,EAAY,6BACZA,EAAY,0CAEZA,EAAY,uBACZA,EAAY,wBACZA,EAAY,4BACZA,EAAY,yBACZA,EAAY,uCACZA,EAAY,kCACZA,EAAY,0BACZA,EAAY,2BACZA,EAAY,oCACZA,EAAY,qBACZA,EAAY,2BACZA,EAAY,yBACZA,EAAY,wBACZA,EAAY,yBACZA,EAAY,8BACZA,EAAY,iCACZA,EAAY,0BACZA,EAAY,uBACZA,EAAY,+BACZA,EAAY,gCACZA,EAAY,4BAEZA,EAAY,eACZA,EAAY,oBACZA,EAAY,qBAEZA,EAAY,4BACZA,EAAY,oCACZA,EAAY,qCACZA,EAAY,6CAEZA,EAAY,yBACZA,EAAY,wBACZA,EAAY,iCACZA,EAAY,gCACZA,EAAY,wBACZA,EAAY,uBACZA,EAAY,wBACZA,EAAY,+BACZA,EAAY,8BACZA,EAAY,iCACZA,EAAY,4BACZA,EAAY,kCACZA,EAAY,4BACZA,EAAY,2BACZA,EAAY,iCACZA,EAAY,yCACZA,EAAY,6BACZA,EAAY,wBACZA,EAAY,qCACZA,EAAY,gCACZA,EAAY,mBACZA,EAAY,yBACZA,EAAY,uBACZA,EAAY,sBACZA,EAAY,uBACZA,EAAY,8BACZA,EAAY,gCACZA,EAAY,8CACZA,EAAY,oDACZA,EAAY,2CACZA,EAAY,iDACZA,EAAY,mCACZA,EAAY,mDACZA,EAAY,6CACZA,EAAY,mDACZA,EAAY,0CACZA,EAAY,gDACZA,EAAY,iDACZA,EAAY,gDACZA,EAAY,uDACZA,EAAY,4CACZA,EAAY,qDACZA,EAAY,kDACZA,EAAY,2CACZA,EAAY,yCACZA,EAAY,8CACZA,EAAY,uCACZA,EAAY,uDACZA,EAAY,iDACZA,EAAY,qCACZA,EAAY,iDACZA,EAAY,wCACZA,EAAY,oDACZA,EAAY,+DACZA,EAAY,mCACZA,EAAY,oCACZA,EAAY,qCACZA,EAAY,2CACZA,EAAY,kCAEZA,EAAY,qBACZA,EAAY,+BACZA,EAAY,mBACZA,EAAY,mBACZA,EAAY,oBACZA,EAAY,yBACZA,EAAY,sBACZA,EAAY,8BACZA,EAAY,qBACZA,EAAY,wBACZA,EAAY,8BACZA,EAAY,uBACZA,EAAY,0BACZA,EAAY,sBACZA,EAAY,uBACZA,EAAY,2BACZA,EAAY,4BACZA,EAAY,yBACZA,EAAY,8BACZA,EAAY,iCACZA,EAAY,uBACZA,EAAY,+BACZA,EAAY,iCACZA,EAAY,sCACZA,EAAY,gCACZA,EAAY,wBACZA,EAAY,2BACZA,EAAY,6BACZA,EAAY,sCACZA,EAAY,+BACZA,EAAY,gCACZA,EAAY,iCACZA,EAAY,iCACZA,EAAY,iCACZA,EAAY,iCACZA,EAAY,iCACZA,EAAY,wCACZA,EAAY,wCACZA,EAAY,wCACZA,EAAY,wCACZA,EAAY,wCACZA,EAAY,iCACZA,EAAY,6BACZA,EAAY,0CACZA,EAAY,oCACZA,EAAY,2CACZA,EAAY,kCACZA,EAAY,4BACZA,EAAY,oCAGZA,EAAY,2BACZA,EAAY,iCACZA,EAAY,yBAEZC,EAAe,iBACfA,EAAe,YACfA,EAAe,uBACfA,EAAe,cACfA,EAAe,kBACfA,EAAe,qBACfA,EAAe,aACfA,EAAe,4BACfA,EAAe,eACfA,EAAe,oBACfA,EAAe,qBACfA,EAAe,0BACfA,EAAe,sBACfA,EAAe,6BACfA,EAAe,4BACfA,EAAe,uBACfA,EAAe,yBACfA,EAAe,aACfA,EAAe,kBACfA,EAAe,kBACfA,EAAe,qBACfA,EAAe,yBACfA,EAAe,gBACfA,EAAe,YACfA,EAAe,gBACfA,EAAe,aACfA,EAAe,YACfA,EAAe,mCACfA,EAAe,uCACfA,EAAe,oCACfA,EAAe,aACfA,EAAe,kBACfA,EAAe,mBACfA,EAAe,YACfA,EAAe,YACfA,EAAe,oBACfA,EAAe,mBACfA,EAAe,2BACfA,EAAe,mBACfA,EAAe,gCACfA,EAAe,YACfA,EAAe,aACfA,EAAe,cACfA,EAAe,sBACfA,EAAe,wBACfA,EAAe,mBACfA,EAAe,uBACfA,EAAe,qBACfA,EAAe,2BACfA,EAAe,oBACfA,EAAe,YACfA,EAAe,cACfA,EAAe,eACfA,EAAe,YACfA,EAAe,kBACfA,EAAe,gBACfA,EAAe,cACfA,EAAe,YACfA,EAAe,oBACfA,EAAe,mBACfA,EAAe,2BACfA,EAAe,gBACfA,EAAe,wBACfA,EAAe,aACfA,EAAe,oBACfA,EAAe,eACfA,EAAe,WACfA,EAAe,mBACfA,EAAe,uBACfA,EAAe,oBACfA,EAAe,oBACfA,EAAe,YACfA,EAAe,qBACfA,EAAe,eACfA,EAAe,WACfA,EAAe,mBACfA,EAAe,cACfA,EAAe,0BACfA,EAAe,qBACfA,EAAe,sBACfA,EAAe,qBACfA,EAAe,sBACfA,EAAe,eACfA,EAAe,eACfA,EAAe,iBACfA,EAAe,sBACfA,EAAe,2BACfA,EAAe,kBACfA,EAAe,0BACfA,EAAe,kBACfA,EAAe,aAzRO,SAAUX,GAC5B,IAAIE,EAAOF,EAAKG,MAAM,KAClBC,EAAM,aAAW,SAAQ,KAA0BF,EAAKG,KAAK,KAAK,QAAQC,SAC1EC,EAAWL,EAAKzG,MAChB+G,EAAMvB,EACV,SAAOiB,GAAM,SAAUL,GACnBW,EAAIX,KAAUW,EAAIX,GAAQ,CAAC,GAC3BW,EAAMA,EAAIX,EACd,IACAW,EAAID,GAAY,SAAUb,GACtB,OAAOR,EAAUkB,EAAIV,GACzB,CACJ,CA+QAkB,CAAgB,mBAEhB,UCnUJ,IAAIC,EAAW,CACX,kBAAqB,CAAC,CAACC,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IACtkF,mBAAsB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACp7E,kBAAqB,CAAC,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAA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AG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EA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AQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAA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,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,KACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,oBAAqB,CACpB,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,KACA,MAED,4BAA6B,CAC5B,OAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,OAGF,SAAS6qH,EAAoBt/F,GAC5B,IAAIm/F,EAAoBC,EAAE3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","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/emojis.txt","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/settings_left.html","webpack://xabber.web/./templates/accounts/settings_right.html","webpack://xabber.web/./templates/accounts/token_item.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/api_service/add_xabber_account.html","webpack://xabber.web/./templates/api_service/linked_email_item.html","webpack://xabber.web/./templates/api_service/sync_settings.html","webpack://xabber.web/./templates/api_service/sync_settings_account_item.html","webpack://xabber.web/./templates/api_service/xabber_account.html","webpack://xabber.web/./templates/api_service/xabber_login.html","webpack://xabber.web/./templates/api_service/xabber_login_by_email.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/ ^\\.\\/.*\\.txt$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"module.exports = \\\"[\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"😀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☺️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☹️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤲\\\\\\\",\\\\n                \\\\\\\"🤲🏻\\\\\\\",\\\\n                \\\\\\\"🤲🏼\\\\\\\",\\\\n                \\\\\\\"🤲🏽\\\\\\\",\\\\n                \\\\\\\"🤲🏾\\\\\\\",\\\\n                \\\\\\\"🤲🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👐\\\\\\\",\\\\n                \\\\\\\"👐🏻\\\\\\\",\\\\n                \\\\\\\"👐🏼\\\\\\\",\\\\n                \\\\\\\"👐🏽\\\\\\\",\\\\n                \\\\\\\"👐🏾\\\\\\\",\\\\n                \\\\\\\"👐🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙌\\\\\\\",\\\\n                \\\\\\\"🙌🏻\\\\\\\",\\\\n                \\\\\\\"🙌🏼\\\\\\\",\\\\n                \\\\\\\"🙌🏽\\\\\\\",\\\\n                \\\\\\\"🙌🏾\\\\\\\",\\\\n                \\\\\\\"🙌🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👏\\\\\\\",\\\\n                \\\\\\\"👏🏻\\\\\\\",\\\\n                \\\\\\\"👏🏼\\\\\\\",\\\\n                \\\\\\\"👏🏽\\\\\\\",\\\\n                \\\\\\\"👏🏾\\\\\\\",\\\\n                \\\\\\\"👏🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👍\\\\\\\",\\\\n                \\\\\\\"👍🏻\\\\\\\",\\\\n                \\\\\\\"👍🏼\\\\\\\",\\\\n                \\\\\\\"👍🏽\\\\\\\",\\\\n                \\\\\\\"👍🏾\\\\\\\",\\\\n                \\\\\\\"👍🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👎\\\\\\\",\\\\n                \\\\\\\"👎🏻\\\\\\\",\\\\n                \\\\\\\"👎🏼\\\\\\\",\\\\n                \\\\\\\"👎🏽\\\\\\\",\\\\n                \\\\\\\"👎🏾\\\\\\\",\\\\n                \\\\\\\"👎🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👊\\\\\\\",\\\\n                \\\\\\\"👊🏻\\\\\\\",\\\\n                \\\\\\\"👊🏼\\\\\\\",\\\\n                \\\\\\\"👊🏽\\\\\\\",\\\\n                \\\\\\\"👊🏾\\\\\\\",\\\\n                \\\\\\\"👊🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✊\\\\\\\",\\\\n                \\\\\\\"✊🏻\\\\\\\",\\\\n                \\\\\\\"✊🏼\\\\\\\",\\\\n                \\\\\\\"✊🏽\\\\\\\",\\\\n                \\\\\\\"✊🏾\\\\\\\",\\\\n                \\\\\\\"✊🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤛\\\\\\\",\\\\n                \\\\\\\"🤛🏻\\\\\\\",\\\\n                \\\\\\\"🤛🏼\\\\\\\",\\\\n                \\\\\\\"🤛🏽\\\\\\\",\\\\n                \\\\\\\"🤛🏾\\\\\\\",\\\\n                \\\\\\\"🤛🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤜\\\\\\\",\\\\n                \\\\\\\"🤜🏻\\\\\\\",\\\\n                \\\\\\\"🤜🏼\\\\\\\",\\\\n                \\\\\\\"🤜🏽\\\\\\\",\\\\n                \\\\\\\"🤜🏾\\\\\\\",\\\\n                \\\\\\\"🤜🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤞\\\\\\\",\\\\n                \\\\\\\"🤞🏻\\\\\\\",\\\\n                \\\\\\\"🤞🏼\\\\\\\",\\\\n                \\\\\\\"🤞🏽\\\\\\\",\\\\n                \\\\\\\"🤞🏾\\\\\\\",\\\\n                \\\\\\\"🤞🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✌\\\\\\\",\\\\n                \\\\\\\"✌🏻\\\\\\\",\\\\n                \\\\\\\"✌🏼\\\\\\\",\\\\n                \\\\\\\"✌🏽\\\\\\\",\\\\n                \\\\\\\"✌🏾\\\\\\\",\\\\n                \\\\\\\"✌🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤟\\\\\\\",\\\\n                \\\\\\\"🤟🏻\\\\\\\",\\\\n                \\\\\\\"🤟🏼\\\\\\\",\\\\n                \\\\\\\"🤟🏽\\\\\\\",\\\\n                \\\\\\\"🤟🏾\\\\\\\",\\\\n                \\\\\\\"🤟🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤘\\\\\\\",\\\\n                \\\\\\\"🤘🏻\\\\\\\",\\\\n                \\\\\\\"🤘🏼\\\\\\\",\\\\n                \\\\\\\"🤘🏽\\\\\\\",\\\\n                \\\\\\\"🤘🏾\\\\\\\",\\\\n                \\\\\\\"🤘🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👌\\\\\\\",\\\\n                \\\\\\\"👌🏻\\\\\\\",\\\\n                \\\\\\\"👌🏼\\\\\\\",\\\\n                \\\\\\\"👌🏽\\\\\\\",\\\\n                \\\\\\\"👌🏾\\\\\\\",\\\\n                \\\\\\\"👌🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👈\\\\\\\",\\\\n                \\\\\\\"👈🏻\\\\\\\",\\\\n                \\\\\\\"👈🏼\\\\\\\",\\\\n                \\\\\\\"👈🏽\\\\\\\",\\\\n                \\\\\\\"👈🏾\\\\\\\",\\\\n                \\\\\\\"👈🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👉\\\\\\\",\\\\n                \\\\\\\"👉🏻\\\\\\\",\\\\n                \\\\\\\"👉🏼\\\\\\\",\\\\n                \\\\\\\"👉🏽\\\\\\\",\\\\n                \\\\\\\"👉🏾\\\\\\\",\\\\n                \\\\\\\"👉🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👆\\\\\\\",\\\\n                \\\\\\\"👆🏻\\\\\\\",\\\\n                \\\\\\\"👆🏼\\\\\\\",\\\\n                \\\\\\\"👆🏽\\\\\\\",\\\\n                \\\\\\\"👆🏾\\\\\\\",\\\\n                \\\\\\\"👆🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👇\\\\\\\",\\\\n                \\\\\\\"👇🏻\\\\\\\",\\\\n                \\\\\\\"👇🏼\\\\\\\",\\\\n                \\\\\\\"👇🏽\\\\\\\",\\\\n                \\\\\\\"👇🏾\\\\\\\",\\\\n                \\\\\\\"👇🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☝\\\\\\\",\\\\n                \\\\\\\"☝🏻\\\\\\\",\\\\n                \\\\\\\"☝🏼\\\\\\\",\\\\n                \\\\\\\"☝🏽\\\\\\\",\\\\n                \\\\\\\"☝🏾\\\\\\\",\\\\n                \\\\\\\"☝🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✋\\\\\\\",\\\\n                \\\\\\\"✋🏻\\\\\\\",\\\\n                \\\\\\\"✋🏼\\\\\\\",\\\\n                \\\\\\\"✋🏽\\\\\\\",\\\\n                \\\\\\\"✋🏾\\\\\\\",\\\\n                \\\\\\\"✋🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤚\\\\\\\",\\\\n                \\\\\\\"🤚🏻\\\\\\\",\\\\n                \\\\\\\"🤚🏼\\\\\\\",\\\\n                \\\\\\\"🤚🏽\\\\\\\",\\\\n                \\\\\\\"🤚🏾\\\\\\\",\\\\n                \\\\\\\"🤚🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖐\\\\\\\",\\\\n                \\\\\\\"🖐🏻\\\\\\\",\\\\n                \\\\\\\"🖐🏼\\\\\\\",\\\\n                \\\\\\\"🖐🏽\\\\\\\",\\\\n                \\\\\\\"🖐🏾\\\\\\\",\\\\n                \\\\\\\"🖐🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖖\\\\\\\",\\\\n                \\\\\\\"🖖🏻\\\\\\\",\\\\n                \\\\\\\"🖖🏼\\\\\\\",\\\\n                \\\\\\\"🖖🏽\\\\\\\",\\\\n                \\\\\\\"🖖🏾\\\\\\\",\\\\n                \\\\\\\"🖖🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👋\\\\\\\",\\\\n                \\\\\\\"👋🏻\\\\\\\",\\\\n                \\\\\\\"👋🏼\\\\\\\",\\\\n                \\\\\\\"👋🏽\\\\\\\",\\\\n                \\\\\\\"👋🏾\\\\\\\",\\\\n                \\\\\\\"👋🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤙\\\\\\\",\\\\n                \\\\\\\"🤙🏻\\\\\\\",\\\\n                \\\\\\\"🤙🏼\\\\\\\",\\\\n                \\\\\\\"🤙🏽\\\\\\\",\\\\n                \\\\\\\"🤙🏾\\\\\\\",\\\\n                \\\\\\\"🤙🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💪\\\\\\\",\\\\n                \\\\\\\"💪🏻\\\\\\\",\\\\n                \\\\\\\"💪🏼\\\\\\\",\\\\n                \\\\\\\"💪🏽\\\\\\\",\\\\n                \\\\\\\"💪🏾\\\\\\\",\\\\n                \\\\\\\"💪🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖕\\\\\\\",\\\\n                \\\\\\\"🖕🏻\\\\\\\",\\\\n                \\\\\\\"🖕🏼\\\\\\\",\\\\n                \\\\\\\"🖕🏽\\\\\\\",\\\\n                \\\\\\\"🖕🏾\\\\\\\",\\\\n                \\\\\\\"🖕🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✍\\\\\\\",\\\\n                \\\\\\\"✍🏻\\\\\\\",\\\\n                \\\\\\\"✍🏼\\\\\\\",\\\\n                \\\\\\\"✍🏽\\\\\\\",\\\\n                \\\\\\\"✍🏾\\\\\\\",\\\\n                \\\\\\\"✍🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙏\\\\\\\",\\\\n                \\\\\\\"🙏🏻\\\\\\\",\\\\n                \\\\\\\"🙏🏼\\\\\\\",\\\\n                \\\\\\\"🙏🏽\\\\\\\",\\\\n                \\\\\\\"🙏🏾\\\\\\\",\\\\n                \\\\\\\"🙏🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👂\\\\\\\",\\\\n                \\\\\\\"👂🏻\\\\\\\",\\\\n                \\\\\\\"👂🏼\\\\\\\",\\\\n                \\\\\\\"👂🏽\\\\\\\",\\\\n                \\\\\\\"👂🏾\\\\\\\",\\\\n                \\\\\\\"👂🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👃\\\\\\\",\\\\n                \\\\\\\"👃🏻\\\\\\\",\\\\n                \\\\\\\"👃🏼\\\\\\\",\\\\n                \\\\\\\"👃🏽\\\\\\\",\\\\n                \\\\\\\"👃🏾\\\\\\\",\\\\n                \\\\\\\"👃🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👶\\\\\\\",\\\\n                \\\\\\\"👶🏻\\\\\\\",\\\\n                \\\\\\\"👶🏼\\\\\\\",\\\\n                \\\\\\\"👶🏽\\\\\\\",\\\\n                \\\\\\\"👶🏾\\\\\\\",\\\\n                \\\\\\\"👶🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👧\\\\\\\",\\\\n                \\\\\\\"👧🏻\\\\\\\",\\\\n                \\\\\\\"👧🏼\\\\\\\",\\\\n                \\\\\\\"👧🏽\\\\\\\",\\\\n                \\\\\\\"👧🏾\\\\\\\",\\\\n                \\\\\\\"👧🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧒\\\\\\\",\\\\n                \\\\\\\"🧒🏻\\\\\\\",\\\\n                \\\\\\\"🧒🏼\\\\\\\",\\\\n                \\\\\\\"🧒🏽\\\\\\\",\\\\n                \\\\\\\"🧒🏾\\\\\\\",\\\\n                \\\\\\\"🧒🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👦\\\\\\\",\\\\n                \\\\\\\"👦🏻\\\\\\\",\\\\n                \\\\\\\"👦🏼\\\\\\\",\\\\n                \\\\\\\"👦🏽\\\\\\\",\\\\n                \\\\\\\"👦🏾\\\\\\\",\\\\n                \\\\\\\"👦🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩\\\\\\\",\\\\n                \\\\\\\"👩🏻\\\\\\\",\\\\n                \\\\\\\"👩🏼\\\\\\\",\\\\n                \\\\\\\"👩🏽\\\\\\\",\\\\n                \\\\\\\"👩🏾\\\\\\\",\\\\n                \\\\\\\"👩🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧑\\\\\\\",\\\\n                \\\\\\\"🧑🏻\\\\\\\",\\\\n                \\\\\\\"🧑🏼\\\\\\\",\\\\n                \\\\\\\"🧑🏽\\\\\\\",\\\\n                \\\\\\\"🧑🏾\\\\\\\",\\\\n                \\\\\\\"🧑🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨\\\\\\\",\\\\n                \\\\\\\"👨🏻\\\\\\\",\\\\n                \\\\\\\"👨🏼\\\\\\\",\\\\n                \\\\\\\"👨🏽\\\\\\\",\\\\n                \\\\\\\"👨🏾\\\\\\\",\\\\n                \\\\\\\"👨🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👱‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👱\\\\\\\",\\\\n                \\\\\\\"👱🏻\\\\\\\",\\\\n                \\\\\\\"👱🏼\\\\\\\",\\\\n                \\\\\\\"👱🏽\\\\\\\",\\\\n                \\\\\\\"👱🏾\\\\\\\",\\\\n                \\\\\\\"👱🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧔\\\\\\\",\\\\n                \\\\\\\"🧔🏻\\\\\\\",\\\\n                \\\\\\\"🧔🏼\\\\\\\",\\\\n                \\\\\\\"🧔🏽\\\\\\\",\\\\n                \\\\\\\"🧔🏾\\\\\\\",\\\\n                \\\\\\\"🧔🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👵\\\\\\\",\\\\n                \\\\\\\"👵🏻\\\\\\\",\\\\n                \\\\\\\"👵🏼\\\\\\\",\\\\n                \\\\\\\"👵🏽\\\\\\\",\\\\n                \\\\\\\"👵🏾\\\\\\\",\\\\n                \\\\\\\"👵🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧓\\\\\\\",\\\\n                \\\\\\\"🧓🏻\\\\\\\",\\\\n                \\\\\\\"🧓🏼\\\\\\\",\\\\n                \\\\\\\"🧓🏽\\\\\\\",\\\\n                \\\\\\\"🧓🏾\\\\\\\",\\\\n                \\\\\\\"🧓🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👴\\\\\\\",\\\\n                \\\\\\\"👴🏻\\\\\\\",\\\\n                \\\\\\\"👴🏼\\\\\\\",\\\\n                \\\\\\\"👴🏽\\\\\\\",\\\\n                \\\\\\\"👴🏾\\\\\\\",\\\\n                \\\\\\\"👴🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👲\\\\\\\",\\\\n                \\\\\\\"👲🏻\\\\\\\",\\\\n                \\\\\\\"👲🏼\\\\\\\",\\\\n                \\\\\\\"👲🏽\\\\\\\",\\\\n                \\\\\\\"👲🏾\\\\\\\",\\\\n                \\\\\\\"👲🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👳‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👳️\\\\\\\",\\\\n                \\\\\\\"👳🏻\\\\\\\",\\\\n                \\\\\\\"👳🏼️\\\\\\\",\\\\n                \\\\\\\"👳🏽️\\\\\\\",\\\\n                \\\\\\\"👳🏾️\\\\\\\",\\\\n                \\\\\\\"👳🏿️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧕\\\\\\\",\\\\n                \\\\\\\"🧕🏻\\\\\\\",\\\\n                \\\\\\\"🧕🏼\\\\\\\",\\\\n                \\\\\\\"🧕🏽\\\\\\\",\\\\n                \\\\\\\"🧕🏾\\\\\\\",\\\\n                \\\\\\\"🧕🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👮‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👮\\\\\\\",\\\\n                \\\\\\\"👮🏻\\\\\\\",\\\\n                \\\\\\\"👮🏼\\\\\\\",\\\\n                \\\\\\\"👮🏽\\\\\\\",\\\\n                \\\\\\\"👮🏾\\\\\\\",\\\\n                \\\\\\\"👮🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👷‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👷\\\\\\\",\\\\n                \\\\\\\"👷🏻\\\\\\\",\\\\n                \\\\\\\"👷🏼\\\\\\\",\\\\n                \\\\\\\"👷🏽\\\\\\\",\\\\n                \\\\\\\"👷🏾\\\\\\\",\\\\n                \\\\\\\"👷🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💂‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💂\\\\\\\",\\\\n                \\\\\\\"💂🏻\\\\\\\",\\\\n                \\\\\\\"💂🏼\\\\\\\",\\\\n                \\\\\\\"💂🏽\\\\\\\",\\\\n                \\\\\\\"💂🏾\\\\\\\",\\\\n                \\\\\\\"💂🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕵️‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕵\\\\\\\",\\\\n                \\\\\\\"🕵🏻\\\\\\\",\\\\n                \\\\\\\"🕵🏼\\\\\\\",\\\\n                \\\\\\\"🕵🏽\\\\\\\",\\\\n                \\\\\\\"🕵🏾\\\\\\\",\\\\n                \\\\\\\"🕵🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏻‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏼‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏽‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏾‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏿‍⚕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏻‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏼‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏽‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏾‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏿‍⚕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🌾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🌾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🍳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🍳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🎓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🎓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🎤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🎤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🏫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🏫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🏭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🏭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏻‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏼‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏽‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏾‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏿‍💻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏻‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏼‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏽‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏾‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏿‍💻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏻‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏼‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏽‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏾‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏿‍💼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏻‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏼‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏽‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏾‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏿‍💼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🔧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🔧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🔬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🔬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🎨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🎨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🚒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🚒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏻‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏼‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏽‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏾‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏿‍✈️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏻‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏼‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏽‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏾‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏿‍✈️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🚀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🚀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏻‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏼‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏽‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏾‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏿‍⚖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏻‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏼‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏽‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏾‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏿‍⚖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👰\\\\\\\",\\\\n                \\\\\\\"👰🏻\\\\\\\",\\\\n                \\\\\\\"👰🏼\\\\\\\",\\\\n                \\\\\\\"👰🏽\\\\\\\",\\\\n                \\\\\\\"👰🏾\\\\\\\",\\\\n                \\\\\\\"👰🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤵\\\\\\\",\\\\n                \\\\\\\"🤵🏻\\\\\\\",\\\\n                \\\\\\\"🤵🏼\\\\\\\",\\\\n                \\\\\\\"🤵🏽\\\\\\\",\\\\n                \\\\\\\"🤵🏾\\\\\\\",\\\\n                \\\\\\\"🤵🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👸\\\\\\\",\\\\n                \\\\\\\"👸🏻\\\\\\\",\\\\n                \\\\\\\"👸🏼\\\\\\\",\\\\n                \\\\\\\"👸🏽\\\\\\\",\\\\n                \\\\\\\"👸🏾\\\\\\\",\\\\n                \\\\\\\"👸🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤴\\\\\\\",\\\\n                \\\\\\\"🤴🏻\\\\\\\",\\\\n                \\\\\\\"🤴🏼\\\\\\\",\\\\n                \\\\\\\"🤴🏽\\\\\\\",\\\\n                \\\\\\\"🤴🏾\\\\\\\",\\\\n                \\\\\\\"🤴🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤶\\\\\\\",\\\\n                \\\\\\\"🤶🏻\\\\\\\",\\\\n                \\\\\\\"🤶🏼\\\\\\\",\\\\n                \\\\\\\"🤶🏽\\\\\\\",\\\\n                \\\\\\\"🤶🏾\\\\\\\",\\\\n                \\\\\\\"🤶🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎅\\\\\\\",\\\\n                \\\\\\\"🎅🏻\\\\\\\",\\\\n                \\\\\\\"🎅🏼\\\\\\\",\\\\n                \\\\\\\"🎅🏽\\\\\\\",\\\\n                \\\\\\\"🎅🏾\\\\\\\",\\\\n                \\\\\\\"🎅🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧙‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧙‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧝‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧝‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧛‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧛‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧟‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧟‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧞‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧞‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧜‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧜‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧚‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧚‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👼\\\\\\\",\\\\n                \\\\\\\"👼🏻\\\\\\\",\\\\n                \\\\\\\"👼🏼\\\\\\\",\\\\n                \\\\\\\"👼🏽\\\\\\\",\\\\n                \\\\\\\"👼🏾\\\\\\\",\\\\n                \\\\\\\"👼🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤰\\\\\\\",\\\\n                \\\\\\\"🤰🏻\\\\\\\",\\\\n                \\\\\\\"🤰🏼\\\\\\\",\\\\n                \\\\\\\"🤰🏽\\\\\\\",\\\\n                \\\\\\\"🤰🏾\\\\\\\",\\\\n                \\\\\\\"🤰🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤱\\\\\\\",\\\\n                \\\\\\\"🤱🏻\\\\\\\",\\\\n                \\\\\\\"🤱🏼\\\\\\\",\\\\n                \\\\\\\"🤱🏽\\\\\\\",\\\\n                \\\\\\\"🤱🏾\\\\\\\",\\\\n                \\\\\\\"🤱🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙇‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙇\\\\\\\",\\\\n                \\\\\\\"🙇🏻\\\\\\\",\\\\n                \\\\\\\"🙇🏼\\\\\\\",\\\\n                \\\\\\\"🙇🏽\\\\\\\",\\\\n                \\\\\\\"🙇🏾\\\\\\\",\\\\n                \\\\\\\"🙇🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💁\\\\\\\",\\\\n                \\\\\\\"💁🏻\\\\\\\",\\\\n                \\\\\\\"💁🏼\\\\\\\",\\\\n                \\\\\\\"💁🏽\\\\\\\",\\\\n                \\\\\\\"💁🏾\\\\\\\",\\\\n                \\\\\\\"💁🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💁‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙅\\\\\\\",\\\\n                \\\\\\\"🙅🏻\\\\\\\",\\\\n                \\\\\\\"🙅🏼\\\\\\\",\\\\n                \\\\\\\"🙅🏽\\\\\\\",\\\\n                \\\\\\\"🙅🏾\\\\\\\",\\\\n                \\\\\\\"🙅🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙅‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙆\\\\\\\",\\\\n                \\\\\\\"🙆🏻\\\\\\\",\\\\n                \\\\\\\"🙆🏼\\\\\\\",\\\\n                \\\\\\\"🙆🏽\\\\\\\",\\\\n                \\\\\\\"🙆🏾\\\\\\\",\\\\n                \\\\\\\"🙆🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙆‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙋\\\\\\\",\\\\n                \\\\\\\"🙋🏻\\\\\\\",\\\\n                \\\\\\\"🙋🏼\\\\\\\",\\\\n                \\\\\\\"🙋🏽\\\\\\\",\\\\n                \\\\\\\"🙋🏾\\\\\\\",\\\\n                \\\\\\\"🙋🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙋‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤦‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤦‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤷\\\\\\\",\\\\n                \\\\\\\"🤷🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤷🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤷🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤷🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤷🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤷‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙎\\\\\\\",\\\\n                \\\\\\\"🙎🏻\\\\\\\",\\\\n                \\\\\\\"🙎🏼\\\\\\\",\\\\n                \\\\\\\"🙎🏽\\\\\\\",\\\\n                \\\\\\\"🙎🏾\\\\\\\",\\\\n                \\\\\\\"🙎🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙎‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙍\\\\\\\",\\\\n                \\\\\\\"🙍🏻\\\\\\\",\\\\n                \\\\\\\"🙍🏼\\\\\\\",\\\\n                \\\\\\\"🙍🏽\\\\\\\",\\\\n                \\\\\\\"🙍🏾\\\\\\\",\\\\n                \\\\\\\"🙍🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙍‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💇\\\\\\\",\\\\n                \\\\\\\"💇🏻\\\\\\\",\\\\n                \\\\\\\"💇🏼\\\\\\\",\\\\n                \\\\\\\"💇🏽\\\\\\\",\\\\n                \\\\\\\"💇🏾\\\\\\\",\\\\n                \\\\\\\"💇🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💇‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💆\\\\\\\",\\\\n                \\\\\\\"💆🏻\\\\\\\",\\\\n                \\\\\\\"💆🏼\\\\\\\",\\\\n                \\\\\\\"💆🏽\\\\\\\",\\\\n                \\\\\\\"💆🏾\\\\\\\",\\\\n                \\\\\\\"💆🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💆‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧖‍♀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧖‍♂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💅\\\\\\\",\\\\n                \\\\\\\"💅🏻\\\\\\\",\\\\n                \\\\\\\"💅🏼\\\\\\\",\\\\n                \\\\\\\"💅🏽\\\\\\\",\\\\n                \\\\\\\"💅🏾\\\\\\\",\\\\n                \\\\\\\"💅🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤳\\\\\\\",\\\\n                \\\\\\\"🤳🏻\\\\\\\",\\\\n                \\\\\\\"🤳🏼\\\\\\\",\\\\n                \\\\\\\"🤳🏽\\\\\\\",\\\\n                \\\\\\\"🤳🏾\\\\\\\",\\\\n                \\\\\\\"🤳🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕴\\\\\\\",\\\\n                \\\\\\\"🕴🏻\\\\\\\",\\\\n                \\\\\\\"🕴🏼\\\\\\\",\\\\n                \\\\\\\"🕴🏼\\\\\\\",\\\\n                \\\\\\\"🕴🏾\\\\\\\",\\\\n                \\\\\\\"🕴🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💃\\\\\\\",\\\\n                \\\\\\\"💃🏻\\\\\\\",\\\\n                \\\\\\\"💃🏼\\\\\\\",\\\\n                \\\\\\\"💃🏽\\\\\\\",\\\\n                \\\\\\\"💃🏾\\\\\\\",\\\\n                \\\\\\\"💃🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕺\\\\\\\",\\\\n                \\\\\\\"🕺🏻\\\\\\\",\\\\n                \\\\\\\"🕺🏼\\\\\\\",\\\\n                \\\\\\\"🕺🏽\\\\\\\",\\\\n                \\\\\\\"🕺🏾\\\\\\\",\\\\n                \\\\\\\"🕺🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👯‍♀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👯‍♂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚶‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚶\\\\\\\",\\\\n                \\\\\\\"🚶🏻\\\\\\\",\\\\n                \\\\\\\"🚶🏼\\\\\\\",\\\\n                \\\\\\\"🚶🏽\\\\\\\",\\\\n                \\\\\\\"🚶🏾\\\\\\\",\\\\n                \\\\\\\"🚶🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏃‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏃\\\\\\\",\\\\n                \\\\\\\"🏃🏻\\\\\\\",\\\\n                \\\\\\\"🏃🏼\\\\\\\",\\\\n                \\\\\\\"🏃🏽\\\\\\\",\\\\n                \\\\\\\"🏃🏾\\\\\\\",\\\\n                \\\\\\\"🏃🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍❤️‍👩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍❤️‍👨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍❤️‍💋‍👩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍❤️‍💋‍👨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👩‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👩‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👩‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👩‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌂\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"smileysAndPeople\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"🐶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☘️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⭐️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚡️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☄️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛅️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☁️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❄️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☃️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛄️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌫\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"animalsAndNature\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"🍏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥢\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"foodAndDrink\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"⚽️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚾️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛳️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏋️‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏋️‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤼‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤼‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤸‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤸‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛹️‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛹️‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤺️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏌️‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏌️‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏇\\\\\\\",\\\\n                \\\\\\\"🏇🏻\\\\\\\",\\\\n                \\\\\\\"🏇🏼\\\\\\\",\\\\n                \\\\\\\"🏇🏽\\\\\\\",\\\\n                \\\\\\\"🏇🏾\\\\\\\",\\\\n                \\\\\\\"🏇🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧘‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧘‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏄‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏄‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏊‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏊‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚣‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚣‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧗‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧗‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚵‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚵‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚴‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚴‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤹‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤹‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎰\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"activity\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"🚗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✈️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛵️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚓️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛽️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛲️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛺️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌁\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"travelAndPlaces\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"⌚️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⌨️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☎️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⌛️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚙️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚰️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚱️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚗️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✉️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✒️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✏️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔓\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"objects\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"❤️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❣️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☮️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✝️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☸️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✡️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☯️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☦️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♈️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♉️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♊️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♋️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♌️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♍️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♎️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♏️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♐️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♑️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♒️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♓️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚛️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🉑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☢️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☣️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈚️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈷️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✴️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🉐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"㊙️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"㊗️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🅰️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🅱️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🅾️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⭕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♨️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❗️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"‼️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⁉️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"〽️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚠️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚜️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♻️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈯️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❇️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✳️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"Ⓜ️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♿️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🅿️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"ℹ️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"0️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"1️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"2️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"3️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"4️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"5️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"6️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"7️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"8️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"9️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"#️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"*️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏏️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"▶️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➡️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬅️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬆️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬇️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↗️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↘️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↙️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↩️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⤴️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⤵️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"™️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"©️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"®️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"〰️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☑️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚫️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"▪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"▫️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◾️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◽️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◼️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◻️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬛️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬜️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👁‍🗨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♠️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♣️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♥️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♦️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🃏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🀄️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕧\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"symbols\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"🏳️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏳️‍🌈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇯🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇯🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇯🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇯🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇽🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇾🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇴🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇶🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇼🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇿🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏴󠁧󠁢󠁥󠁮󠁧󠁿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏴󠁧󠁢󠁳󠁣󠁴󠁿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏴󠁧󠁢󠁷󠁬󠁳󠁿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇼🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇾🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇿🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇿🇼\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"flags\\\\\\\"\\\\n    }\\\\n]\\\\n\\\";\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"client one-line\\\">{{client}}</div>\\n    <div class=\\\"device one-line\\\">{{device}}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    <div class=\\\"last-auth resource text-color-700\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>{[print(xabber.getString(\\\"account_state_connected\\\"))]}</div>\\n    {[ if (resource_obj) {]}\\n        <table class=\\\"token-resource-wrap hidden\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>\\n            <tbody>\\n            <tr class=\\\"info status-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n                <td>\\n                    <div class=\\\"value status-message one-line\\\">{{resource_obj.status}}</div>\\n                    <div class=\\\"status\\\" data-status=\\\"{{resource_obj.status}}\\\"></div>\\n                </td>\\n            </tr>\\n            <tr class=\\\"info resource-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n                <td class=\\\"value resource one-line\\\">{{resource_obj.resource}}</td>\\n            </tr>\\n            <tr class=\\\"info priority-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n                <td class=\\\"value priority\\\">{{resource_obj.priority}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    {[}]}\\n    <div class=\\\"token-indicator\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"move-account-to-this droppable\\\"></div>\\n<div class=\\\"account-info-wrap\\\">\\n    <i class=\\\"drag-item drag-handle mdi mdi-28px mdi-drag-vertical\\\"></i>\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid text-color-700 one-line\\\"></div>\\n        </div>\\n        <div class=\\\"conn-status one-line\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"sync-marker-wrap hidden\\\">\\n    <i class=\\\"sync-marker mdi mdi-20px mdi-cloud-check\\\"></i>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n        <div class=\\\"storage-usages\\\">\\n            <div class=\\\"storage-category-usage storage-usage-images\\\">\\n                {[print(xabber.getString(\\\"images\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-videos\\\">\\n                {[print(xabber.getString(\\\"videos\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-voices\\\">\\n                {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-files\\\">\\n                {[print(xabber.getString(\\\"files\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <ul class=\\\"tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        <li data-value=\\\"avatars\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"list-managment-wrap\\\">\\n        <button class=\\\"btn-sorting dropdown-button btn-flat btn-main text-color-700 hover-ground-color-300\\\" data-activates=\\\"storage-file-sorting\\\">\\n            {[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}\\n        </button>\\n    </div>\\n    <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n        </div>\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n        </div>\\n    </ul>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{file.created_at}}</span>\\n        </div>\\n        {[if (duration && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"    <div class=\\\"left-column ground-color-900 noselect\\\">\\n        <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n            <!--<i title=\\\"Back to settings\\\" class=\\\"mdi mdi-arrow-left mdi-28px back-to-settings\\\"></i>-->\\n            <div class=\\\"picture-wrap\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                        <img/>\\n                        <input type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name\\\"></div>\\n            </div>\\n            <div class=\\\"status-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"connection\\\">\\n                <i class=\\\"mdi mdi-24px mdi-settings\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_connection_settings\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"vcard_edit\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-box\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"color-scheme\\\">\\n                <i class=\\\"mdi mdi-24px mdi-palette\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"color\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                <i class=\\\"mdi mdi-24px mdi-chart-arc\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"blocklist-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"blocked_contacts\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"groups-info\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"server-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-information\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_server_info\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab omemo-info\\\" data-block-name=\\\"omemo-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-security\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_settings_encryption\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"tokens\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_settings_devices\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap ground-color-900\\\">\\n            <div class=\\\"settings-tab delete-account\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <div class=\\\"buttons-wrap\\\">\\n            <button class=\\\"btn-block btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"settings_account__blocklist__button_block\\\"))]}</button>\\n            <button class=\\\"btn-deselect-blocked btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n        </div>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files-variants\\\" data-activates=\\\"storage-delete-files\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_delete_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <ul id=\\\"storage-delete-files\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_15_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"30\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_30_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"60\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_60_days\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_connection_settings\\\"))]}' class=\\\"settings-block-wrap connection\\\">\\n                <div class=\\\"connection-wrap\\\">\\n                    <div class=\\\"readonly-setting\\\">\\n                        <i class=\\\"details-icon mdi mdi-24px mdi-account\\\"></i>\\n                        <div class=\\\"setting-wrap account-name\\\">\\n                            <div class=\\\"value one-line\\\"></div>\\n                            <div class=\\\"label conn-status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"change-password-container\\\">\\n                        <div class=\\\"change-password-fields\\\">\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <button class=\\\"btn-change btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n                            <button class=\\\"btn-change-password btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</button>\\n                            <button class=\\\"btn-reconnect btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"settings_account__button_reconnect\\\"))]}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap vcard\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_server_info_description\\\"))]}' class=\\\"settings-block-wrap server-info\\\">\\n                <div class=\\\"capabilities-wrap\\\">\\n                    <div class=\\\"capabilities\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"blocked_contacts\\\"))]}' class=\\\"settings-block-wrap blocklist-info\\\">\\n                <div class=\\\"blocklist-wrap\\\">\\n                    <div class=\\\"blocked-items\\\">\\n                        <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                        <div class=\\\"blocklist-tabs-wrap\\\">\\n                            <ul class=\\\"tabs\\\">\\n                                <li class=\\\"blocked-item contacts-item hidden\\\" data-tab-name=\\\"blocked-contacts-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__contacts\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item domains-item hidden\\\" data-tab-name=\\\"blocked-domains-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__domains\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item invitations-item hidden\\\" data-tab-name=\\\"blocked-invitations-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__invitations\\\"))]}</a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-contacts-wrap hidden\\\" data-tab-name=\\\"contacts-item\\\">\\n                            <div class=\\\"blocked-contacts blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-domains-wrap hidden\\\" data-tab-name=\\\"domains-item\\\">\\n                            <div class=\\\"blocked-domains blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-invitations-wrap hidden\\\" data-tab-name=\\\"invitations-item\\\">\\n                            <div class=\\\"blocked-invitations blocked-list\\\"/>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap groups-info\\\">\\n                <div class=\\\"groups-wrap\\\">\\n                    <div class=\\\"groups\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_settings_devices\\\"))]}' class=\\\"settings-block-wrap tokens\\\">\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <p class=\\\"btn-revoke-all-tokens hover-text-color-500 text-color-700\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_settings_encryption\\\"))]}' class=\\\"settings-block-wrap omemo-info\\\">\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap manage-devices\\\">\\n                            <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</button>\\n                        </div>\\n                        <div class=\\\"setting-wrap purge-keys\\\">\\n                            <button class=\\\"btn-purge-keys btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"client one-line\\\">{{client}}</div>\\n    <div class=\\\"device one-line\\\">{{device}}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    {[ if (resource_obj) {]}\\n    <div class=\\\"last-auth resource\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>{[print(xabber.getString(\\\"account_state_connected\\\"))]}</div>\\n        <table class=\\\"token-resource-wrap hidden\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>\\n            <tbody>\\n            <tr class=\\\"info status-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n                <td>\\n                    <div class=\\\"value status-message one-line\\\">{{resource_obj.status}}</div>\\n                    <div class=\\\"status\\\" data-status=\\\"{{resource_obj.status}}\\\"></div>\\n                </td>\\n            </tr>\\n            <tr class=\\\"info resource-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n                <td class=\\\"value resource one-line\\\">{{resource_obj.resource}}</td>\\n            </tr>\\n            <tr class=\\\"info priority-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n                <td class=\\\"value priority\\\">{{resource_obj.priority}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    {[} else {]}\\n    <div class=\\\"last-auth\\\">{{last_auth}}</div>\\n    {[}]}\\n    <i class=\\\"btn-revoke-token mdi mdi-24px mdi-close\\\"></i>\\n</div>\";","export default \"<div class=\\\"border\\\"/>\\n<div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n    <div class=\\\"dropdown-button circle-avatar border-color ground-color-700 noselect\\\"/>\\n</div>\\n<div class=\\\"status\\\"/>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"filter-chats\\\">\\n        <i class=\\\"mdi mdi-filter mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account__toolbar_item__button_filter_chats\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal main-modal add-xabber-account-modal\\\">\\n    <div class=\\\"modal-content-wrap\\\">\\n        <div class=\\\"modal-header\\\">\\n            <span>{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</span>\\n        </div>\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"row account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            {[if (constants.USE_SOCIAL_AUTH){]}\\n            <div class=\\\"row social-auth-wrap\\\">\\n                <div class=\\\"social-header\\\">\\n                    <div class=\\\"divider\\\"></div>\\n                    <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"social_sign_in\\\"))]}</div>\\n                </div>\\n                <div class=\\\"social-buttons\\\">\\n                    <div class=\\\"btn-social google-color\\\" data-provider=\\\"google\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-google-plus\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social facebook-color\\\" data-provider=\\\"facebook\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-facebook\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social twitter-color\\\" data-provider=\\\"twitter\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social xabber-color\\\" data-provider=\\\"email\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-at\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n            {[}]}\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-footer\\\">\\n    <div class=\\\"registration-footer\\\">\\n        <div class=\\\"registration-tip-wrap\\\">\\n            <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__text_no_account\\\"))]}</span>\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n        </div>\\n    </div>\\n    <div class=\\\"footer-text clearfix\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n</div>\\n\";","export default \"<div data-id=\\\"{{email_id}}\\\" data-email=\\\"{{email}}\\\" class=\\\"{[if (!verified){]}not-linked {[}]}social-linked-item-wrap email-linked\\\"><div style=\\\"background-color:{{color}}\\\" class=\\\"social-icon\\\">{[if (verified){]}<svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#FFF\\\" d=\\\"M21,13.34C20.37,13.12 19.7,13 19,13A6,6 0 0,0 13,19C13,19.34 13.03,19.67 13.08,20H3A2,2 0 0,1 1,18V6C1,4.89 1.89,4 3,4H19A2,2 0 0,1 21,6V13.34M23.5,17L18.5,22L15,18.5L16.5,17L18.5,19L22,15.5L23.5,17M3,6V8L11,13L19,8V6L11,11L3,6Z\\\" />\\n</svg>{[} else {]}<i class=\\\"mdi mdi-24px mdi-email\\\"></i>{[}]}</div><div class=\\\"synced-info\\\"><div class=\\\"name one-line\\\">{{email}}</div><div class=\\\"verified-status one-line\\\">{[if (verified){print(xabber.getString(\\\"title_verified_email\\\"));}else{print(xabber.getString(\\\"title_unverified_email\\\"));}]}</div></div>{[if (!verified){]}<div class=\\\"btn-main btn-flat btn-verify-email\\\">{[print(xabber.getString(\\\"button_confirm\\\"))]}</div>{[}]}<div class=\\\"btn-main btn-flat btn-link btn-unlink\\\">{[print(xabber.getString(\\\"action_disconnect\\\"))]}</div></div>\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"xabber_account__dialog_sync__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"setting sync-all-wrap field-wrap\\\">\\n                <div class=\\\"field clickable-field switch normal\\\">\\n                    <span class=\\\"field-name\\\">{[print(xabber.getString(\\\"sync_all\\\"))]}</span>\\n                    <label class=\\\"field-value\\\">\\n                       <input type=\\\"checkbox\\\" class=\\\"sync-all\\\">\\n                       <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"accounts-wrap\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-sync\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <i class=\\\"sync-icon mdi mdi-24px\\\" data-mdiclass=\\\"\\\"></i>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name text-color-grey-900 one-line\\\">{{jid}}</div>\\n            <div class=\\\"sync-tip text-color-grey-500 one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-field checkbox-field sync-one-wrap no-padding\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in sync-one\\\" id=\\\"{{view.cid}}_sync_{{jid}}\\\"/>\\n        <label for=\\\"{{view.cid}}_sync_{{jid}}\\\"></label>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"xabber-account-content-wrap\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name text-color-red-700 one-line\\\"></div>\\n            </div>\\n            <div class=\\\"last-sync-info\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"sync-wrap\\\">\\n        <div class=\\\"btn-sync\\\">\\n            <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-flat btn-main btn-login\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"account-action-more\\\">\\n            <i class=\\\"mdi mdi-20px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"account-action-more\\\" class=\\\"xabber-account-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-sync btn-sync-settings\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-password\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-logout\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n<div class=\\\"xabber-account-tip\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n<div class=\\\"linked-social-accounts-and-emails\\\">\\n    <div class=\\\"social-linked-header\\\"><div class=\\\"chevron-icon\\\"><i class=\\\"arrow mdi mdi-20px\\\"></i></div><div class=\\\"social-linked-header-text\\\">{[print(xabber.getString(\\\"title_linked_accounts\\\"))]}</div></div>\\n    <div class=\\\"social-linked-wrap\\\">\\n        <div id='google' class=\\\"not-linked social-account social-linked-item-wrap google-linked\\\"><div class=\\\"google-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-google-plus\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='facebook' class=\\\"not-linked social-account social-linked-item-wrap facebook-linked\\\"><div class=\\\"facebook-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-facebook\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='twitter' class=\\\"not-linked social-account social-linked-item-wrap twitter-linked\\\"><div class=\\\"twitter-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-twitter\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='email' class=\\\"not-linked social-linked-item-wrap\\\"><div class=\\\"email-color social-icon\\\"><svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path fill=\\\"#FFF\\\" d=\\\"M3,4C1.89,4 1,4.89 1,6V18A2,2 0 0,0 3,20H14.09C14.03,19.67 14,19.34 14,19A6,6 0 0,1 20,13C20.34,13 20.67,13.03 21,13.09V6C21,4.89 20.1,4 19,4H3M3,6L11,11L19,6V8L11,13L3,8V6M19,15V18H16V20H19V23H21V20H24V18H21V15H19Z\\\" />\\n        </svg></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_add_email\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n    </div>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"login-panel\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n    </div>\\n    <div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</div>\\n        <div class=\\\"input-field email-name\\\">\\n            <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n            <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field\\\">\\n            <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n            <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field buttons-wrap\\\">\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/forgot-password/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-forgot-password\\\">{[print(xabber.getString(\\\"forgot_pass\\\"))]}</a>\\n            <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        </div>\\n        <div class=\\\"social-auth-wrap\\\"><div class=\\\"social-header\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"xabber_login__new_account\\\"))]}</div>\\n        </div></div>\\n        <div class=\\\"registration-footer\\\">\\n            <div class=\\\"registration-tip-wrap\\\">\\n                <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"xabber_account__login__text_no_xmpp_acc\\\"))]}</span>\\n                <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/?source=Xabber Web\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n            </div>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_email\\\"))]}</div>\\n    <div class=\\\"input-field email-name\\\">\\n        <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n        <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n        <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"login-panel-footer buttons-wrap\\\"><button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button><button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"/>\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"/>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"/>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <div class=\\\"name one-line\\\"/>\\n    </div>\\n</div>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"/>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"/>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"/>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"storage\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-database\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__data_and_storage\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"connection\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-wan\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__connection_settings\\\"))]}</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"developer\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-bug\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__developer\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"security\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-security\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"about\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-information\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__about\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"side-panel-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_side_panel\\\"))]}</div>\\n                            <div class=\\\"setting side-panel-setting radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"side-panel\\\" value=\\\"dark\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dark-side-panel\\\" />\\n                                            <label for=\\\"{{view.cid}}-dark-side-panel\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__label_dark\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"side-panel\\\" value=\\\"light\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-light-side-panel\\\" />\\n                                            <label for=\\\"{{view.cid}}-light-side-panel\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__label_light\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting side-panel-setting field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"side_panel_blur_switch\\\"/>\\n                                    <label for=\\\"side_panel_blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                </div>\\n                                <div class=\\\"transparency-setting\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"transparency_switch\\\"/>\\n                                        <label for=\\\"transparency_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__checkbox_transparency\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"transparency\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"/>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    <span class=\\\"all-msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n    <span class=\\\"msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item group-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__groups\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"message-group\\\"></svg>\\n    <span class=\\\"group-msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__mentions\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"ic-at\\\"></svg>\\n    <span class=\\\"mentions-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n    <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n</div>\\n\\n<div class=\\\"toolbar-item search hidden\\\" title='{[print(xabber.getString(\\\"search\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"ic-searching\\\"></svg>\\n</div>\\n\\n<div class=\\\"add-something-wrap\\\">\\n    <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n    </div>\\n\\n    <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n        <div class=\\\"add-variant contact\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant public-groupchat\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant incognito-groupchat\\\">\\n            <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n            </svg>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant account\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"divider noselect\\\"></div>\\n\\n<div class=\\\"accounts-wrap\\\">\\n    <div class=\\\"accounts\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    {[if (SCREEN_ABOUT) {]}\\n    <div class=\\\"toolbar-item about\\\" title='{[print(xabber.getString(\\\"about\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-information\\\"></i>\\n    </div>\\n    {[}]}\\n    <div class=\\\"toolbar-item settings\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                    <div class=\\\"uploading-emoticons\\\">\\n                    <div class=\\\"preloader-wrapper preloader-20px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"/>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"/>\\n<div class=\\\"contact-status hide-offline\\\"/>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"/>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <!--<li class=\\\"btn-contact-details\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>-->\\n            <!--</li>-->\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-export-history\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"export_chat\\\"))]}</span>\\n            </li>-->\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-delete-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-block-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_block\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-unblock-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_unblock_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-msg-video-id=\\\"{{video_id}}\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"/>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"status hide-offline\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"btn-more  dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-auth-request\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_request_authorization\\\"))]}</span></li>\\n            <li class=\\\"btn-add\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</span></li>\\n            <li class=\\\"btn-delete\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"remove_contact\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-phone btn-voice-call\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper btn-block\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"left-column\\\">\\n            <div class=\\\"block-wrap subscription-block-wrap\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_subscription_settings\\\"))]}</span>\\n                </div>\\n                <div class=\\\"subscription-info-wrap\\\">\\n                    <div class=\\\"incoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"incoming-subscription\\\"/>\\n                            <label for=\\\"incoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"outcoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"outcoming-subscription\\\"/>\\n                            <label for=\\\"outcoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap vcard\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"right-column\\\">\\n            <div class=\\\"block-wrap resources-block-wrap hidden\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_info_connected_clients_header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-unmute-dropdown\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"group-edit-preloader\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                    <svg viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                    </svg>\\n                </div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs not-edit\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <ul class=\\\"tabs participant-tabs\\\">\\n            <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n            <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n            <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n            <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        </ul>\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"/></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n        <img class=\\\"server-icon hidden\\\" src=\\\"./assets/images/BotIcon20x20@2x.png\\\">\\n        <img class=\\\"group-chat-icon hidden\\\" src=\\\"./assets/images/GroupchatIcon20x20@2x.png\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/account-outline</title>\\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/address-outline</title>\\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell-off</title>\\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell-sleep</title>\\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell</title>\\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/birthday-outline</title>\\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/blocked-add</title>\\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/blocked</title>\\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/bot-variant</title>\\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/bot</title>\\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/call-outline</title>\\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/call</title>\\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/camera-retake</title>\\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/cancel</title>\\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/channel</title>\\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-down</title>\\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-left-variant</title>\\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.500000, 12.000000) scale(-1, 1) translate(-11.500000, -12.000000) \\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-right-variant</title>\\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/circles</title>\\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/clock-outline</title>\\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/close</title>\\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs-gps</title>\\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs-question</title>\\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs</title>\\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/description-outline</title>\\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/devices</title>\\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/edit-outline</title>\\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/edit</title>\\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/email-outline</title>\\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-audio</title>\\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-document</title>\\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-pdf</title>\\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-presentation</title>\\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-video</title>\\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-zip</title>\\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file</title>\\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/fullname-outline</title>\\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/fullname</title>\\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-incognito</title>\\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-invite</title>\\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-private</title>\\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-public</title>\\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/history</title>\\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/id-outline</title>\\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/image</title>\\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/index</title>\\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/information-outline</title>\\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/invite-outline</title>\\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/job-outline</title>\\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/link</title>\\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/map-marker-outline</title>\\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/map-marker</title>\\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/membership-outline</title>\\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/message-bookmark-outline</title>\\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/minus</title>\\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/mobile</title>\\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/palette</title>\\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pause</title>\\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-bottom-right</title>\\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-minimize</title>\\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-top-right</title>\\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pinned-circle-small</title>\\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pinned</title>\\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/play</title>\\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-float</title>\\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-full</title>\\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-mini-variant</title>\\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-mini</title>\\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/plus</title>\\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/qrcode</title>\\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/restrictions-outline</title>\\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/rss-variant</title>\\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/rss</title>\\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/saved-messages</title>\\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/search</title>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n        </mask>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/server</title>\\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/status-outline</title>\\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/subscription-from</title>\\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/subscription-to</title>\\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/circle/task</title>\\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/translate</title>\\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/video</title>\\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/volume-high</title>\\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/volume-off</title>\\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 17.765357,5.9248618 c 0.009,0.1518861 -0.206601,0.1119764 -0.206601,0.2652514 0,4.4595198 -5.17314,11.2012628 -10.3933633,12.5152538 v 0.136731 C 14.101125,18.204712 21.825325,11.114777 22,4.2839629 l -4.233831,1.6413619 z\\\"\\n     id=\\\"path4-5\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 15.907561,6.3610856 c 0.009,0.1518861 0.014,0.3045804 0.014,0.4578554 0,4.459522 -3.55133,10.468554 -8.7715528,11.783009 v 0.189367 C 13.982554,18.349079 19.389945,11.500913 19.389945,6.1592263 c 0,-0.2747361 -0.01446,-0.5470438 -0.04292,-0.8162264 l -3.439122,1.017508 z\\\"\\n     id=\\\"path6\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 6.2332547,5.9248618 c -0.00886,0.1518861 0.2067174,0.1119764 0.2067174,0.2652514 0,4.4595198 5.3857609,11.2631498 10.6063279,12.5777208 V 18.95743 C 10.11103,18.318886 2.1746761,11.11443 2,4.2836157 l 4.2337177,1.6413618 z\\\"\\n     id=\\\"path8\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"M 8.3307389,6.473525 C 8.3219828,6.6254111 8.31686,6.7777591 8.31686,6.9312646 c 0,4.4595214 3.551213,10.4685544 8.771549,11.7830104 v 0.189596 C 10.258286,18.581129 4.8484667,11.613351 4.8484667,6.2717814 c 0,-0.2747361 0.014805,-0.5470427 0.042915,-0.8162284 l 3.4391228,1.0177415 z\\\"\\n     id=\\\"path10\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 4.8583007,5.3920472 0.8811221,0.3148763 c -0.00473,0.111283 -0.00765,0.2607395 -0.00765,0.3730642 0,4.7681513 4.3114542,11.3600893 10.0954942,12.3914783 0.375377,0.125857 0.871982,0.240263 1.264595,0.339052 V 19 C 9.5433961,18.356828 4.2400023,10.686651 4.857725,5.3915852 z\\\"\\n     id=\\\"path12\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 19.390639,5.2968432 -0.906108,0.3036565 c 0.0047,0.1113977 0.02208,0.2548387 0.02208,0.3670476 0,4.7681497 -4.311569,11.3602047 -10.0957226,12.3914777 -0.3751445,0.125972 -0.8719856,0.240267 -1.2643666,0.33917 v 0.189596 C 15.052467,17.886018 20.00767,10.591448 19.389946,5.2967275 z\\\"\\n     id=\\\"path14\\\" />\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"vcard_edit__header\\\"))]}</span>\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-vcard-back btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_cancel\\\"))]}</button>\\n                <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content details-panel\\\">\\n\\n                <div class=\\\"settings-block-wrap vcard\\\">\\n                    <div class=\\\"vcard-edit-wrap\\\">\\n                        <div class=\\\"info-wrap personal-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-card-details\\\"></i>\\n                            <div class=\\\"input-field first-name\\\">\\n                                <input id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field middle-name\\\">\\n                                <input id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field last-name\\\">\\n                                <input id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field fullname\\\">\\n                                <input id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap nickname-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                            <div class=\\\"input-field nickname\\\">\\n                                <input id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap birthday-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-cake-variant\\\"></i>\\n                            <div class=\\\"input-field birthday\\\">\\n                                <input id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap job-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-briefcase\\\"></i>\\n                            <div class=\\\"input-field org-name\\\">\\n                                <input id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field job-title\\\">\\n                                <input id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n                            </div>\\n                            <div class=\\\"input-field org-unit\\\">\\n                                <input id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n                            </div>\\n                            <div class=\\\"input-field role\\\">\\n                                <input id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap site-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                            <div class=\\\"input-field url\\\">\\n                                <input id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap description-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n                            <div class=\\\"input-field description\\\">\\n                                <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea\\\" name=\\\"description\\\"></textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap phone-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n                            <div class=\\\"input-field phone-work\\\">\\n                                <input id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-home\\\">\\n                                <input id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-mobile\\\">\\n                                <input id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap email-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n                            <div class=\\\"input-field email-work\\\">\\n                                <input id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field email-home\\\">\\n                                <input id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap address-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n                            <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","var constants = {\n\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 30000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            url: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n    SOUNDS: {\n        beep_up: 'assets/sounds/beep_up.ogg',\n        tiny_noize: 'assets/sounds/tiny_noize.ogg',\n        retro_game: 'assets/sounds/retro_game.ogg',\n        pixel_beep: 'assets/sounds/pixel_beep.ogg',\n        beep_positive: 'assets/sounds/beep_positive.ogg',\n        good_chime: 'assets/sounds/good_chime.ogg',\n        cellular_click: 'assets/sounds/cellular_click.ogg',\n        bleep: 'assets/sounds/bleep.ogg',\n        mono_u: 'assets/sounds/mono_u.ogg',\n        plop: 'assets/sounds/plop.ogg',\n        ether: 'assets/sounds/ether.ogg',\n        pop: 'assets/sounds/pop.ogg',\n        computer_chime: 'assets/sounds/computer_chime.ogg',\n        beep_a: 'assets/sounds/beep_a.ogg',\n        call: 'assets/sounds/marching-band-dave-girtsman.mp3',\n        connecting: 'assets/sounds/alien-bomb-timer.wav',\n        busy: 'assets/sounds/phone_busy.wav',\n        attention: 'assets/sounds/attention.wav'\n    },\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, 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FUTRNmKZpqiowTVUVAABQ4AAAEGCDpsTiAIWGrAQAQgIAHIpiWZrmeZ4niqapmiRJ0zxPFEXRNE1TVUmSpnmeKIqiaZqmqrIsTfM8URRF01RVVYWmeZ4oiqJpqqrqwvM8TxRF0TRV1XXheZ4niqJomqrquhBFUTRN01RNVXVdIIqmaZqqqqquC0RPFE1TVV3XdYHniaJpqqqrui4QTdNUVVV1XVkGmKZpqqrryjJAVVXVdV1XlgGqqqqu67qyDFBV13VdWZZlAK7rurIsywIAAA4cAAACjKCTjCqLsNGECw9AoSErAoAoAADAGKYUU8owJiGkEBrGJIQUQiYlpdJSqiCkUlIpFYRUSiolo5RSailVEFIpqZQKQiollVIAANiBAwDYgYVQaMhKACAPAIAwRinGGHNOIqQUY845JxFSijHnnJNKMeacc85JKRlzzDnnpJTOOeecc1JK5pxzzjkppXPOOeeclFJK55xzTkopJYTOQSellNI555wTAABU4AAAEGCjyOYEI0GFhqwEAFIBAAyOY1ma5nmiaJqWJGma53meKJqmJkma5nmeJ4qqyfM8TxRF0TRVled5niiKommqKtcVRdM0TVVVXbIsiqZpmqrqujBN01RV13VdmKZpqqrrui5sW1VV1XVlGbatqqrqurIMXNd1ZdmWgSy7ruzasgAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAQBiDkEIIIWUQQgohhJRSCAkAABhwAAAIMKEMFBqyEgBIBQAAjLHWWmuttdZAZ6211lprrYDMWmuttdZaa6211lprrbXWUmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaay2llFJKKaWUUkoppZRSSimllFJKBQD6VTgA+D/YsDrCSdFYYKEhKwGAcAAAwBilGHMMQimlVAgx5px0VFqLsUKIMeckpNRabMVzzkEoIZXWYiyecw5CKSnFVmNRKYRSUkottliLSqGjklJKrdVYjDGppNZai63GYoxJKbTUWosxFiNsTam12GqrsRhjayottBhjjMUIX2RsLabaag3GCCNbLC3VWmswxhjdW4ultpqLMT742lIsMdZcAAB3gwMARIKNM6wknRWOBhcashIACAkAIBBSijHGGHPOOeekUow55pxzDkIIoVSKMcaccw5CCCGUjDHmnHMQQgghhFJKxpxzEEIIIYSQUuqccxBCCCGEEEopnXMOQgghhBBCKaWDEEIIIYQQSiilpBRCCCGEEEIIqaSUQgghhFJCKCGVlFIIIYQQQiklpJRSCiGEUkIIoYSUUkophRBCCKWUklJKKaUSSgklhBJSKSmlFEoIIZRSSkoppVRKCaGEEkopJaWUUkohhBBKKQUAABw4AAAEGEEnGVUWYaMJFx6AQkNWAgBkAACQopRSKS1FgiKlGKQYS0YVc1BaiqhyDFLNqVLOIOYklogxhJSTVDLmFEIMQuocdUwpBi2VGELGGKTYckuhcw4AAABBAICAkAAAAwQFMwDA4ADhcxB0AgRHGwCAIERmiETDQnB4UAkQEVMBQGKCQi4AVFhcpF1cQJcBLujirgMhBCEIQSwOoIAEHJxwwxNveMINTtApKnUgAAAAAAAMAPAAAJBcABER0cxhZGhscHR4fICEiIyQCAAAAAAAFwB8AAAkJUBERDRzGBkaGxwdHh8gISIjJAEAgAACAAAAACCAAAQEBAAAAAAAAgAAAAQET2dnUwAAQAAAAAAAAAAjaKehAgAAAEhTii0BRjLV6A+997733vvfe+997733vvfG+8fePvH3j7x94+8fePvH3j7x94+8fePvH3j7x94+8fePvH3gAAAAAAAAAAXm5PqUgABPZ2dTAABLAAAAAAAAACNop6EDAAAAIOuvQAsAAAAAAAAAAAAAAE9nZ1MAAEADAAAAAAAAI2inoQQAAAB/G0m4ATg/8A+997733vvfe+997733vvfK+8B94D7wAB94AAAAD8Kl94D7wH3gAD7wAAAAH4VABem0+pSAAE9nZ1MAAEsDAAAAAAAAI2inoQUAAABc3zKaCwAAAAAAAAAAAAAAT2dnUwAEQAYAAAAAAAAjaKehBgAAAOytEQUBOD/wD733vvfe+997733vvfe+98r7wH3gPvAAH3gAAAAPwqX3gPvAfeAAPvAAAAAfhUAF6bT6lIAAT2dnUwAAQL4AAAAAAACWSy/CAgAAAHsqKaIxAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQAKDg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg5PZ2dTAAQAxAAAAAAAAJZLL8IDAAAABLWpWwIBAQ4O',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, GkXfowEAAAAAAAAfQoaBAUL3gQFC8oEEQvOBCEKChHdlYm1Ch4EEQoWBAhhTgGcBAAAAAAAVkhFNm3RALE27i1OrhBVJqWZTrIHfTbuMU6uEFlSua1OsggEwTbuMU6uEHFO7a1OsghV17AEAAAAAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVSalmAQAAAAAAAEUq17GDD0JATYCNTGF2ZjU1LjMzLjEwMFdBjUxhdmY1NS4zMy4xMDBzpJBlrrXf3DCDVB8KcgbMpcr+RImIQJBgAAAAAAAWVK5rAQAAAAAAD++uAQAAAAAAADLXgQFzxYEBnIEAIrWcg3VuZIaFVl9WUDiDgQEj44OEAmJaAOABAAAAAAAABrCBsLqBkK4BAAAAAAAPq9eBAnPFgQKcgQAitZyDdW5khohBX1ZPUkJJU4OBAuEBAAAAAAAAEZ+BArWIQOdwAAAAAABiZIEgY6JPbwIeVgF2b3JiaXMAAAAAAoC7AAAAAAAAgLUBAAAAAAC4AQN2b3JiaXMtAAAAWGlwaC5PcmcgbGliVm9yYmlzIEkgMjAxMDExMDEgKFNjaGF1ZmVudWdnZXQpAQAAABUAAABlbmNvZGVyPUxhdmM1NS41Mi4xMDIBBXZvcmJpcyVCQ1YBAEAAACRzGCpGpXMWhBAaQlAZ4xxCzmvsGUJMEYIcMkxbyyVzkCGkoEKIWyiB0JBVAABAAACHQXgUhIpBCCGEJT1YkoMnPQghhIg5eBSEaUEIIYQQQgghhBBCCCGERTlokoMnQQgdhOMwOAyD5Tj4HIRFOVgQgydB6CCED0K4moOsOQghhCQ1SFCDBjnoHITCLCiKgsQwuBaEBDUojILkMMjUgwtCiJqDSTX4GoRnQXgWhGlBCCGEJEFIkIMGQcgYhEZBWJKDBjm4FITLQagahCo5CB+EIDRkFQCQAACgoiiKoigKEBqyCgDIAAAQQFEUx3EcyZEcybEcCwgNWQUAAAEACAAAoEiKpEiO5EiSJFmSJVmSJVmS5omqLMuyLMuyLMsyEBqyCgBIAABQUQxFcRQHCA1ZBQBkAAAIoDiKpViKpWiK54iOCISGrAIAgAAABAAAEDRDUzxHlETPVFXXtm3btm3btm3btm3btm1blmUZCA1ZBQBAAAAQ0mlmqQaIMAMZBkJDVgEACAAAgBGKMMSA0JBVAABAAACAGEoOogmtOd+c46BZDppKsTkdnEi1eZKbirk555xzzsnmnDHOOeecopxZDJoJrTnnnMSgWQqaCa0555wnsXnQmiqtOeeccc7pYJwRxjnnnCateZCajbU555wFrWmOmkuxOeecSLl5UptLtTnnnHPOOeecc84555zqxekcnBPOOeecqL25lpvQxTnnnE/G6d6cEM4555xzzjnnnHPOOeecIDRkFQAABABAEIaNYdwpCNLnaCBGEWIaMulB9+gwCRqDnELq0ehopJQ6CCWVcVJKJwgNWQUAAAIAQAghhRRSSCGFFFJIIYUUYoghhhhyyimnoIJKKqmooowyyyyzzDLLLLPMOuyssw47DDHEEEMrrcRSU2011lhr7jnnmoO0VlprrbVSSimllFIKQkNWAQAgAAAEQgYZZJBRSCGFFGKIKaeccgoqqIDQkFUAACAAgAAAAABP8hzRER3RER3RER3RER3R8RzPESVREiVREi3TMjXTU0VVdWXXlnVZt31b2IVd933d933d+HVhWJZlWZZlWZZlWZZlWZZlWZYgNGQVAAACAAAghBBCSCGFFFJIKcYYc8w56CSUEAgNWQUAAAIACAAAAHAUR3EcyZEcSbIkS9IkzdIsT/M0TxM9URRF0zRV0RVdUTdtUTZl0zVdUzZdVVZtV5ZtW7Z125dl2/d93/d93/d93/d93/d9XQdCQ1YBABIAADqSIymSIimS4ziOJElAaMgqAEAGAEAAAIriKI7jOJIkSZIlaZJneZaomZrpmZ4qqkBoyCoAABAAQAAAAAAAAIqmeIqpeIqoeI7oiJJomZaoqZoryqbsuq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq4LhIasAgAkAAB0JEdyJEdSJEVSJEdygNCQVQCADACAAAAcwzEkRXIsy9I0T/M0TxM90RM901NFV3SB0JBVAAAgAIAAAAAAAAAMybAUy9EcTRIl1VItVVMt1VJF1VNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVN0zRNEwgNWQkAkAEAkBBTLS3GmgmLJGLSaqugYwxS7KWxSCpntbfKMYUYtV4ah5RREHupJGOKQcwtpNApJq3WVEKFFKSYYyoVUg5SIDRkhQAQmgHgcBxAsixAsiwAAAAAAAAAkDQN0DwPsDQPAAAAAAAAACRNAyxPAzTPAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA0jRA8zxA8zwAAAAAAAAA0DwP8DwR8EQRAAAAAAAAACzPAzTRAzxRBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA0jRA8zxA8zwAAAAAAAAAsDwP8EQR0DwRAAAAAAAAACzPAzxRBDzRAwgIRQasiIAiBMAcEgSJAmSBM0DSJYFTYOmwTQBkmVB06BpME0AAAAAAAAAAAAAJE2DpkHTIIoASdOgadA0iCIAAAAAAAAAAAAAkqZB06BpEEWApGnQNGgaRBEAAAAAAAAAAAAAzzQhihBFmCbAM02IIkQRpgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAGHAAAAgwoQwUGrIiAIgTAHA4imUBAIDjOJYFAACO41gWAABYliWKAABgWZooAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYcAAACDChDBQashIAiAIAcCiKZQHHsSzgOJYFJMmyAJYF0DyApgFEEQAIAAAocAAACLBBU2JxgEJDVgIAUQAABsWxLE0TRZKkaZoniiRJ0zxPFGma53meacLzPM80IYqiaJoQRVE0TZimaaoqME1VFQAAUOAAABBgg6bE4gCFhqwEAEICAByKYlma5nmeJ4qmqZokSdM8TxRF0TRNU1VJkqZ5niiKommapqqyLE3zPFEURdNUVVWFpnmeKIqiaaqq6sLzPE8URdE0VdV14XmeJ4qiaJqq6roQRVE0TdNUTVV1XSCKpmmaqqqqrgtETxRNU1Vd13WB54miaaqqq7ouEE3TVFVVdV1ZBpimaaqq68oyQFVV1XVdV5YBqqqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"\": \"Montenegrin (Latin)\", // ????????\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    API_SERVICE_URL: 'https://api.xabber.com/api/v2',\n    USE_SOCIAL_AUTH: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    CLIENT_URL: 'https://www.xabber.com',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE'\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"qrcode\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    magnificPopup: magnificPopup,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.txt').default),//todo fix json import\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = function (data) {\n            return insertSvg(tpl(data));\n        };\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('api_service.xabber_login');\n    addTemplate('api_service.xabber_login_by_email');\n    addTemplate('api_service.add_xabber_account');\n    addTemplate('api_service.xabber_account');\n    addTemplate('api_service.linked_email_item');\n    addTemplate('api_service.sync_settings');\n    addTemplate('api_service.sync_settings_account_item');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.settings_left');\n    addTemplate('accounts.settings_right');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item');\n    addTemplate('accounts.current_token_item');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_edit');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","import _ from \"underscore\";\nimport $ from \"jquery\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    var sprite = options.sprite,\n        tag_name = sprite ? (options.tag_name || 'span') : 'img',\n        emoji_size = options.emoji_size || 20,\n        href = options.href ? ` href=\"#${options.href}\" ` :\"\",\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        let data = emoji_data[emoji],\n            emoji_code = data && Number(data.code).toString(16);\n        if (data) {\n            (emoji_code.length < 4) && (emoji_code = \"0\".repeat(4 - emoji_code.length) + emoji_code);\n            let img_src = tag_name === 'img' ? (sprite ? ' src=\"assets/images/emoji/blank.gif\"' : '  src=\"assets/images/emoji/svg32/emoji_u' + emoji_code + '.svg\"') : '';\n            return '<' + tag_name + img_src + href + title + ' class=\"emoji emoji-w' + emoji_size +\n                (sprite ? (' sprite-' + sprite + '\" style=\"background-position: ' + '-' + (emoji_size * data.x) + 'px ' + '-' + (emoji_size * data.y) + 'px;\" ') : '\" ') +\n                'alt=\"' + emoji + '\" ' +\n                'data-emoji=\"' + emoji + '\"/>';\n        }\n        else\n            return emoji;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.28) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (size.width > size.height) {\n        if (size.width > max_size) {\n            size.height *= max_size / size.width;\n            size.width = max_size;\n        }\n    } else {\n        if (size.height > max_size) {\n            size.width *= max_size / size.height;\n            size.height = max_size;\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml') {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                buttons || (buttons = {});\n                dialog_options || (dialog_options = []);\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: dialog_options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options) {\n            return this.common(getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: true, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {}\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                        if (options.decode_uri)\n                            x = x.replace(list[i], decodeURI(list[i]));\n                        else\n                            x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'Mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils,\n    bc = new BroadcastChannel(\"xabber-web\");\n\nbc.onmessage = (event) => {\n    if (event.data === `1` && !bc.disabled_client) {\n        bc.postMessage(`2`);\n    }\n    if (event.data === `2`) {\n        bc.disabled_client = true\n    }\n};\n\nbc.postMessage(`1`);\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        client_name: 'Xabber for Web'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.cacheFavicons();\n        this.extendFunction();\n        this.check_config = new $.Deferred();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n        // setInterval(function() {\n        //     console.log(new Date());\n        // }, 5000)\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            sound_on_call: 'call',\n            sound_on_dialtone: 'call',\n            sound_on_connection: 'connecting',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: 'beep_a',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n            ping_interval: 60,\n            reconnect_interval: 90\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'API_SERVICE_URL',\n                'USE_SOCIAL_AUTH',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            if (utils.isMobile.any()) {\n                let ios_msg = this.getString(\"warning__client_not_support_ios_browser\", [constants.CLIENT_NAME]),\n                    android_msg = this.getString(\"warning__client_not_support_android_browser\"),\n                    any_mobile_msg = this.getString(\"warning__client_not_support_mobile\", [constants.CLIENT_NAME]),\n                    msg;\n                if (utils.isMobile.iOS()) {\n                    msg = ios_msg;\n                } else if (utils.isMobile.Android()) {\n                    msg = any_mobile_msg + android_msg;\n                } else {\n                    msg = any_mobile_msg;\n                }\n                utils.dialogs.error(msg);\n                this.check_config.resolve(false);\n                return;\n            }\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            if (bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                self._cache.save('notifications', granted);\n                self._cache.save('endpoint_key', undefined);\n                self.check_config.resolve(true);\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight === scrollTop + offsetHeight;\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        _.each(this.children, function (view) {\n            view.hide();\n        });\n        this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              let saved_chat = acc.chats.getSavedChat();\n              saved_chat.set('opened', true);\n              saved_chat.item_view.updateLastMessage();\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1 || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1) {\n                          let searched_by = name.indexOf(query) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || (name === 'settings' || name ==='account_settings'))\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    ps_settings: {theme: 'item-list'},\n    template: templates.toolbar,\n\n    events: {\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .chats\":                 \"showChats\",\n        \"click .group-chats\":           \"showGroupChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .search\":                \"showSearch\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .mentions\":              \"showMentions\",\n        \"click .settings\":              \"showSettings\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n        \"click .about\":                 \"showAbout\"\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n        this.$('.toolbar-icon').css('color', color);\n        this.$('.toolbar-icon path').css('fill', color);\n    },\n\n    onUpdatedScreen: function (name) {\n        if ((name === 'account_settings') || ((name === 'all-chats') &&\n            (this.$('.toolbar-item.all-chats').hasClass('active') ||\n                this.$('.toolbar-item.group-chats').hasClass('active') ||\n                this.$('.toolbar-item.chats').hasClass('active')||\n                this.$('.toolbar-item.account-item').hasClass('active')||\n                this.$('.toolbar-item.archive-chats').hasClass('active')))) {\n            return;\n        }\n        this.$('.toolbar-item').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'search', 'about'], name)) {\n            this.$('.toolbar-item.'+name).addClass('active');\n        }\n    },\n\n    showAllChats: function (ev) {\n        let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_all_chats');\n    },\n\n    showChats: function (ev) {\n        let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.chats').addClass('active').switchClass('unread', is_active);\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_chats');\n    },\n\n    showGroupChats: function (ev) {\n        let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.group-chats').addClass('active').switchClass('unread', is_active);\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_group_chats');\n    },\n\n    showArchive: function () {\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats');\n    },\n\n    showChatsByAccount: function (account) {\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.account-item[data-jid=\"' + account.get('jid') + '\"]').addClass('active');\n        xabber.body.setScreen('all-chats', {\n            right_contact_save: true\n        });\n        xabber.trigger('show_account_chats', [account]);\n    },\n\n    showSearch: function () {\n        xabber.body.setScreen('search');\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    showAbout: function () {\n        if (!xabber.about_view)\n            xabber.about_view = xabber.wide_panel.addChild('about', xabber.AboutView, {model: xabber});\n        xabber.body.setScreen('about');\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => item.get('invitation') || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        let video = this.$el.find('.webrtc-remote-video')[0],\n            local_video = this.$el.find('.webrtc-local-video')[0],\n            buttons = this.$el.find('.buttons-panel')[0];\n        if (!video)\n            return;\n        if (video.requestFullScreen) {\n            video.requestFullScreen();\n            local_video.requestFullScreen();\n            buttons.requestFullScreen();\n        }\n        else if (video.webkitRequestFullScreen) {\n            video.webkitRequestFullScreen();\n            local_video.webkitRequestFullScreen();\n            buttons.webkitRequestFullScreen();\n        }\n        else if (video.mozRequestFullScreen) {\n            video.mozRequestFullScreen();\n            local_video.mozRequestFullScreen();\n            buttons.mozRequestFullScreen();\n        }\n        else if (video.msRequestFullScreen) {\n            video.msRequestFullScreen();\n            local_video.msRequestFullScreen();\n            buttons.msRequestFullScreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function () {\n        this.updateStatusText(xabber.getString(this.model.get('status') == 'device_busy' ? \"dialog_jingle_message__status_device_busy\" : this.model.get('status') == 'busy' ? \"dialog_jingle_message__status_busy\" : \"dialog_jingle_message__status_disconnected\"));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            let video_sources = {\n                src: options.player.video_src,\n                provider: options.player.provider,\n            };\n            options.player.type && (video_sources.type = options.player.type);\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    video_sources,\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        });\n\n        if (options.player && options.player.key && options.player.chat_item.model && options.player.video_src){\n            options.player.chat_item.model.messages.decryptFile(options.player.video_src, options.player.key).then((result) => {\n                options.player.video_src = result;\n                dfd.resolve();\n            });\n        } else\n            dfd.resolve();\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsView = xabber.BasicView.extend({\n    className: 'settings-panel',\n    template: templates.settings,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        \"click .setting.private-notifications label\": \"setPrivateNotifications\",\n        \"click .setting.group-notifications label\": \"setGroupNotifications\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .setting.call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #transparency\": \"changeTransparency\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .current-main-color-wrap\": \"openMainColorPicker\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"change .background input[type=radio][name=side-panel]\": \"setSidePanelTheme\",\n        \"change #side_panel_blur_switch\": \"setSidePanelBlur\",\n        \"change #transparency_switch\": \"switchTransparency\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n    },\n\n    render: function () {\n        let settings = this.model.attributes,\n            lang = settings.language;\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private});\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group});\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.updateSidePanelSetting();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        return this;\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n        this.$('.toolbar-main-color-setting .color-name').text(xabber.getString(`account_color_name_${this.model.get('main_color').replace(/-/g, \"_\")}`).replace(/-/g, \" \"));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        this.$('#blur')[0].value = blur_switched ? appearance.blur : constants.BLUR_VALUE;\n\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        this.$('#vignetting')[0].value = vignetting_switched ? appearance.vignetting : constants.VIGNETTING_VALUE;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    updateSidePanelSetting: function () {\n        let side_panel_settings = this.model.get('side_panel'),\n            transparency_switched = side_panel_settings.transparency !== false;\n        this.$('#side_panel_blur_switch')[0].checked = side_panel_settings.blur;\n        this.$('#transparency_switch')[0].checked = transparency_switched;\n        this.$('.transparency-setting .disabled').switchClass('hidden', transparency_switched);\n        this.$('#transparency')[0].value = transparency_switched ? side_panel_settings.transparency : constants.TRANSPARENCY_VALUE;\n        this.$(`#${this.cid}-${side_panel_settings.theme}-side-panel`)[0].checked = true;\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.data('block-name'));\n        this.$('.btn-add-account').hideIf($tab.data('block-name') != 'xmpp-accounts')\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        this.scrollToChild($elem);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications'),\n            $target = $(ev.target);\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    $target.closest('.setting.notifications').find('input').prop('checked', value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                $target.closest('.setting.notifications').find('input').prop('checked', value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.group-notifications').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    setSidePanelTheme: function (ev) {\n        let value = ev.target.value,\n            side_panel_settings = this.model.get('side_panel');\n        this.model.save('side_panel', _.extend(side_panel_settings, {theme: value}));\n        xabber.roster_view.updateTheme(value);\n    },\n\n    setSidePanelBlur: function () {\n        let value = this.$('#side_panel_blur_switch')[0].checked,\n            side_panel_settings = this.model.get('side_panel');\n        this.model.save('side_panel', _.extend(side_panel_settings, {blur: value}));\n        xabber.roster_view.updateBlur(value);\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    openMainColorPicker: function () {\n        if (!this.mainColorPicker)\n            this.mainColorPicker = new xabber.mainColorPicker({model: this.model});\n        this.mainColorPicker.render();\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    switchTransparency: function () {\n        let is_switched = this.$('#transparency_switch')[0].checked,\n            side_panel_settings = this.model.get('side_panel'),\n            value = is_switched ? constants.TRANSPARENCY_VALUE : false;\n        this.$('.transparency-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#transparency')[0].value = constants.TRANSPARENCY_VALUE;\n        this.model.save('side_panel', _.extend(side_panel_settings, {transparency: value}));\n        xabber.roster_view.updateTransparency(value);\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeTransparency: function () {\n        let value = this.$('#transparency')[0].value,\n            side_panel_settings = this.model.get('side_panel');\n        this.model.save('side_panel', _.extend(side_panel_settings, {transparency: value}));\n        xabber.roster_view.updateTransparency(value);\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.VIGNETTING_VALUE : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#vignetting')[0].value = constants.VIGNETTING_VALUE;\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.BLUR_VALUE : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#blur')[0].value = constants.BLUR_VALUE;\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value;\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"), xabber.getString(\"settings__dialog_change_language__confirm\"), null, { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_full_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_no_translation_platform\",\n                        [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__section_interface_language__text_description_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`, constants.EMAIL_FOR_JOIN_TRANSLATION]);\n            }\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    }\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        let request = {\n            type: \"GET\",\n            contentType: \"application/xml\",\n            dataType: 'xml',\n            success: (data) => {\n                if (this.type == 'repeating-pattern') {\n                    this.onGetPatternsCallback(data);\n                } else {\n                    this.onGetImagesCallback(data);\n                }\n                callback && callback();\n            }\n        };\n        if (this.type == 'repeating-pattern') {\n            request.url = './background-patterns.xml';\n        } else {\n            request.url = './background-images.xml';\n        }\n        $.ajax(request);\n    },\n\n    onGetPatternsCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            images.push({thumbnail: $(img).text()});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            let $img = $(img),\n                thumbnail = $img.children('thumbnail').text(),\n                fs_img = $img.children('fullscreen-image').text();\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev.target.closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 50,\n            out_duration: 100,\n            opacity: 0.4\n        },\n        close: {out_duration: 100}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function () {\n        if (this._blink_interval)\n            return;\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function () {\n        if (this._blink_interval) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        this.set('all_msg_counter', this.setAllMessageCounter());\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = constants.SOUNDS[name];\n        if (filename) {\n            let audio = new window.Audio(filename);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_view = this.wide_panel.addChild(\n        'settings', this.SettingsView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.api_service,\n    utils = env.utils,\n    $ = env.$,\n    _ = env._;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n\n    create_from_server: function (settings_item) {\n        let settings = this.create(_.extend({\n            jid: settings_item.jid,\n            timestamp: settings_item.timestamp,\n            to_sync: true,\n            synced: true\n        }, settings_item.settings));\n        this.trigger('add_settings', settings);\n        return settings;\n    }\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.APIAccount = Backbone.ModelWithStorage.extend({\n    defaults: {\n        token: null,\n        sync_all: true\n    },\n\n    _initialize: function (_attrs, options) {\n        this.list = options.settings_list;\n        this.save({connected: false, sync_request: 'silent'});\n        this.on(\"change:connected\", function () {\n            if (this.get('connected')) {\n                this.fcm_subscribe();\n            } else {\n                this.fcm_unsubscribe();\n            }\n        }, this);\n        this.on(\"change:token\", function () {\n            if (this.get('token') !== null) {\n                this.save({sync_all: true,\n                           sync_request: this.list.length ? 'window' : 'silent'});\n            }\n        }, this);\n        this.list.on(\"change:to_sync\", function (item) {\n            if (this.get('sync_all') && !item.get('to_sync')) {\n                this.save('sync_all', false);\n            }\n        }, this);\n        xabber.on(\"push_message\", function (message) {\n            if (this.get('connected') &&\n                    message.username === this.get('username') &&\n                    message.from_token !== this.get('token') &&\n                    message.action === 'settings_updated') {\n                this.synchronize_main_settings();\n                this.synchronize_order_settings();\n            }\n            if (this.get('connected') &&\n                message.username === this.get('username') &&\n                message.from_token !== this.get('token') &&\n                message.action === 'account_updated') {\n                this.get_settings();\n            }\n        }, this);\n\n        this.ready = new $.Deferred();\n        if (xabber.url_params.social_auth) {\n            let social_auth = xabber.url_params.social_auth;\n            delete xabber.url_params.social_auth;\n            try {\n                let data = JSON.parse(atob(social_auth));\n                this.save('token', null);\n                this.social_login(data);\n                return;\n            } catch (e) {}\n        }\n        if (xabber.url_params.token) {\n            this.save('token', xabber.url_params.token);\n            delete xabber.url_params.token;\n        }\n        if (this.get('token')) {\n            this.login_by_token();\n        } else {\n            this.ready.resolve();\n        }\n    },\n\n    _call_method: function (method, url, data, callback, errback) {\n        let request = {\n            type: method,\n            url: constants.API_SERVICE_URL + url,\n            headers: {\"Authorization\": \"Token \" + this.get('token')},\n            context: this,\n            contentType: \"application/json\",\n            dataType: 'json',\n            success: (data, textStatus, jqXHR) => {\n                callback && callback(data);\n            },\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (data) {\n            request.data = JSON.stringify(data);\n        }\n        $.ajax(request);\n    },\n\n    add_source: function (data) {\n        return _.extend({\n            source: `${constants.CLIENT_NAME} ${xabber.get('version_number')}`\n        }, data);\n    },\n\n    get_settings: function () {\n        if (this.get('token') !== null) {\n            this._call_method('GET', '/accounts/current/', null,\n                (data) => {\n                    if (data.account_status === 'registered') {\n                        this.onUserData(data);\n                        this._call_method('GET', '/accounts/current/client-settings/', null,\n                            this.onSettings.bind(this),\n                            this.onSettingsFailed.bind(this)\n                        );\n                    } else {\n                        utils.dialogs.error(xabber.getString(\"xabber_account__sync__error_no_permission_to_sync\"));\n                        this.save({token: null, connected: false});\n                        this.trigger('settings_result', null);\n                    }\n                },\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    delete_settings: function (jid) {\n        if (this.get('connected')) {\n            this._call_method('DELETE', '/accounts/current/client-settings/', {jid: jid},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_main_settings: function () {\n        if (this.get('connected')) {\n            let data = _.map(this.list.where({to_sync: true}), function (settings) {\n                return settings.request_data();\n            });\n            if (data.length) {\n                this._call_method('PATCH', '/accounts/current/client-settings/',\n                    {settings_data: data},\n                    this.onSettings.bind(this),\n                    this.onSettingsFailed.bind(this)\n                );\n            } else {\n                this.get_settings();\n            }\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_order_settings: function () {\n        if (this.get('connected') && this.get('sync_all')) {\n            let timestamp = this.list.order_timestamp.get('timestamp');\n            let data = this.list.map(function (settings) {\n                return {jid: settings.get('jid'), order: settings.get('order')};\n            });\n            this._call_method('PATCH', '/accounts/current/client-settings/',\n                {order_data: {settings: data, timestamp: timestamp}},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    fetch_from_server: function (data) {\n        let deleted_list = data.deleted,\n            settings_list = data.settings_data,\n            order_timestamp = data.order_data.timestamp,\n            order_list = data.order_data.settings,\n            list = this.list,\n            sync_all = this.get('sync_all');\n        _.each(deleted_list, (item) => {\n            let settings = list.get(item.jid);\n            if (settings && settings.get('to_sync') &&\n                    settings.get('timestamp') <= item.timestamp) {\n                settings.trigger('delete_account', true);\n            }\n        });\n        _.each(settings_list, function (settings_item) {\n            let settings = list.get(settings_item.jid);\n            if (settings) {\n                if (settings.get('to_sync')) {\n                    settings.save(_.extend({\n                        timestamp: settings_item.timestamp,\n                        deleted: false,\n                        synced: true\n                    }, settings_item.settings));\n                } else {\n                    settings.save('synced', settings_item.timestamp >= settings.get('timestamp'));\n                }\n            }\n            if (!settings && sync_all) {\n                settings = list.create_from_server(settings_item);\n            }\n        });\n        if (sync_all) {\n            let order_map = {}, max_order = 1;\n            _.each(order_list, function (order_item) {\n                order_map[order_item.jid] = order_item.order;\n                if (order_item.order > max_order) {\n                    max_order = order_item.order;\n                }\n            });\n            list.order_timestamp.save('timestamp', order_timestamp);\n            list.each((settings) => {\n                let jid = settings.get('jid'),\n                    order = order_map[jid];\n                if (!order) {\n                    max_order += 1;\n                    order = max_order;\n                }\n                settings.save('order', order);\n            });\n        }\n        this.trigger('settings_result', data);\n        this.save('last_sync', utils.now());\n    },\n\n    onAPIError: function (jqXHR, errback) {\n        let status = jqXHR.status,\n            response = jqXHR.responseJSON;\n        if (status === 403) {\n            this.save({connected: false, token: null});\n            if (response.detail === 'Invalid token') {\n                if (response.reason === 'not_found') {\n                    // TODO remove only Xabber-related XMPP accounts\n                } else if (response.reason === 'revoked') {\n                    _.each(this.list.where({to_sync: true}), function (settings) {\n                        settings.trigger('delete_account', true);\n                    });\n                } else if (response.reason === 'expired'){\n                    utils.dialogs.common(xabber.getString(\"xabber_account__login__dialog_error__header\"), xabber.getString(\"xabber_account__login__dialog_error__text\"),\n                        {ok_button: {text: xabber.getString(\"yes\")}, cancel_button: {text: xabber.getString(\"dialog_version_update__option_not_now\")}}\n                    ).done((result) => {\n                        result && this.trigger('relogin');\n                    });\n                }\n            }\n        }\n        errback && errback(response, status);\n    },\n\n    _login: function (credentials, callback, errback) {\n        let request = {\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/login/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source()),\n            success: callback,\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (credentials.token) {\n            request.headers = {\"Authorization\": \"Token \" + credentials.token};\n        } else {\n            let username = credentials.username,\n                password = credentials.password;\n            request.headers = {\"Authorization\": \"Basic \" + utils.utoa(username+':'+password)};\n        }\n        $.ajax(request);\n    },\n\n    login: function (username, password) {\n        this._login({username: username, password: password}, this.onLogin.bind(this),\n                this.onLoginFailed.bind(this));\n    },\n\n    login_by_token: function () {\n        this._login({token: this.get('token')}, this.onLoginByToken.bind(this),\n                this.onLoginByTokenFailed.bind(this));\n    },\n\n    social_login: function (credentials) {\n        $.ajax({\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/social_auth/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source(credentials)),\n            success: this.onSocialLogin.bind(this),\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, this.onSocialLoginFailed.bind(this));\n            }\n        });\n    },\n\n    revoke_token: function () {\n        let token = this.get('token');\n        if (token !== null) {\n            this._call_method('delete', '/accounts/current/tokens/', {token: token});\n        }\n        this.save({connected: false, token: null});\n        this.storage.clear();\n    },\n\n    onLoginByToken: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true, sync_request: 'silent'});\n        this.get_settings();\n        this.ready.resolve();\n    },\n\n    onLoginByTokenFailed: function (response, status) {\n        this.save('connected', false);\n        this.ready.resolve();\n    },\n\n    onLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        this.get_settings();\n    },\n\n    onLoginFailed: function (response, status) {\n        this.save('connected', false);\n        this.trigger('login_failed', response);\n    },\n\n    onSocialLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        xabber.body.setScreen('settings');\n        this.ready.resolve();\n    },\n\n    onSocialLoginFailed: function (response, status) {\n        this.save('connected', false);\n        xabber.body.setScreen('settings');\n        utils.dialogs.error(xabber.getString(\"xabber_account__login__error_auth_failed\"));\n        this.ready.resolve();\n    },\n\n    onUserData: function (data) {\n        let name, xmpp_binding_jid;\n        if (data.first_name && data.last_name) {\n            name = data.first_name + ' ' + data.last_name;\n        } else {\n            name = data.username;\n        }\n        if (data.xmpp_binding) {\n            xmpp_binding_jid = data.xmpp_binding.jid;\n        }\n        this.save({username: data.full_id, name: name, linked_email_list: data.email_list, linked_social: data.social_bindings, xmpp_binding: xmpp_binding_jid });\n    },\n\n    onSettings: function (data) {\n        let sync_request = this.get('sync_request');\n        this.save('sync_request', undefined);\n        if (sync_request === 'window') {\n            if (!xabber.sync_settings_view)\n                xabber.sync_settings_view = new xabber.SyncSettingsView({model: this});\n            this.trigger('open_sync_window', data);\n        } else {\n            this.fetch_from_server(data);\n        }\n    },\n\n    onSettingsFailed: function (response, status) {\n        this.trigger('settings_result', null);\n    },\n\n    logout: function () {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"logout_summary\"),\n                          [{name: 'delete_accounts', checked: true,\n                            text: xabber.getString(\"xabber_account__dialog_logout__option_delete_accounts\")}], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (res) {\n                if (xabber.accounts.connected.length > 0)\n                    _.each(xabber.accounts.connected, (account) => {\n                        account.set('auto_login_xa', false);\n                        account.save('auto_login_xa', false);\n                    });\n                this.revoke_token();\n                if (res.delete_accounts) {\n                    _.each(this.list.where({to_sync: true}), (settings) => {\n                        settings.trigger('delete_account', true);\n                    });\n                }\n            }\n        });\n    },\n\n    start: function () {\n        if (!this.get('connected')) {\n            this.fcm_unsubscribe();\n        }\n        this.get_settings();\n    },\n\n    fcm_subscribe: function () {\n        this._call_method('post', '/fcm/subscription/', {endpoint_key: xabber.cache.endpoint_key});\n    },\n\n    fcm_unsubscribe: function () {\n        $.ajax({\n            type: 'DELETE',\n            url: constants.API_SERVICE_URL + '/fcm/subscription/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify({endpoint_key: xabber.cache.endpoint_key})\n        });\n    }\n});\n\nxabber.APIAccountAuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$username_input = this.$('input[name=username]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.onChangeAuthenticationState, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$username_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let username = this.$username_input.val(),\n            password = this.$password_input.val();\n        if (!username) {\n            return this.errorFeedback({username: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        username = username.trim();\n        if (!password)  {\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n        this.model.login(username, password);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n    },\n\n    authFeedback: function (options) {\n        this.$username_input.switchClass('invalid', options.username)\n            .siblings('span.errors').text(options.username || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').switchClass('disabled', authentication);\n    },\n\n    onChangeAuthenticationState: function () {\n        this.updateButtons();\n        if (this.data.get('authentication')) {\n            this.model.on(\"change:connected\", this.onChangeConnected, this);\n            this.model.on(\"login_failed\", this.onLoginFailed, this);\n        } else {\n            this.model.off(\"change:connected\", this.onChangeConnected, this);\n            this.model.off(\"login_failed\", this.onLoginFailed, this);\n        }\n    },\n\n    onChangeConnected: function () {\n        if (this.model.get('connected')) {\n            this.successFeedback();\n        }\n    },\n\n    onLoginFailed: function (response) {\n        this.errorFeedback({password: (response && response.detail) || xabber.getString(\"connection__error__text_authentication_failed_short\")});\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email') {\n            this.closeModal();\n            xabber.email_auth_view.show();\n            // return;\n        }\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\n  xabber.XabberLoginByEmailPanel = xabber.APIAccountAuthView.extend({\n      className: 'login-panel add-xabber-account-panel',\n      template: templates.xabber_login_by_email,\n\n      events: {\n          \"click .btn-cancel\": \"close\",\n          \"click .btn-log-in\": \"submit\",\n          \"keyup input[name=password]\": \"keyUp\"\n      },\n\n      render: function () {\n          this.$el.openModal({\n              opacity: 0.9,\n              ready: this.onRender.bind(this),\n              complete: this.close.bind(this)\n          });\n      },\n\n      successFeedback: function () {\n          this.authFeedback({});\n          this.data.set('authentication', false);\n          this.close();\n      },\n\n      onRender: function () {\n          Materialize.updateTextFields();\n          this.$username_input.val('').focus();\n          this.$password_input.val('');\n      },\n\n      close: function (auth) {\n          this.$el.closeModal({ complete: this.hide.bind(this) });\n      }\n  });\n\nxabber.XabberLoginPanel = xabber.APIAccountAuthView.extend({\n    className: 'login-panel',\n    template: templates.xabber_login,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"submit\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-escape\": \"openXmppLoginPanel\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats');\n    },\n\n    changeLoginType: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    },\n\n    openXmppLoginPanel: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    }\n});\n\nxabber.AddAPIAccountView = xabber.APIAccountAuthView.extend({\n    className: 'login-panel add-xabber-account-panel',\n    template: templates.add_xabber_account,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-add\": \"loginXabberAccount\",\n        \"keyup input[name=password]\": \"keyUp\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-cancel\": \"closeModal\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            opacity: 0.9,\n            ready: () => {\n                this.onRender.bind(this);\n                this.$('.account-field .dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left',\n                });\n            },\n            complete: this.closeModal.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(env.templates.contacts.add_contact_account_item({jid: account.get('jid')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n        this.loginXabberAccount(account);\n    },\n\n    loginXabberAccount: function (account) {\n        account.set('auto_login_xa', true);\n        account.authXabberAccount();\n        this.closeModal();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SyncSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal sync-settings-modal noselect',\n    template: templates.sync_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .btn-sync\": \"syncSettings\",\n        \"click .btn-cancel\": \"close\",\n        \"change .sync-all\": \"changeSyncAll\",\n        \"change .sync-one\": \"changeSyncOne\",\n        \"click .sync-icon\": \"changeSyncWay\"\n    },\n\n    _initialize: function () {\n        this.settings = null;\n        this.to_sync_map = null;\n        this.model.on(\"open_sync_window\", this.render, this);\n    },\n\n    render: function (data, options) {\n        this.settings = data;\n        this.sync_all = this.model.get('sync_all');\n        this.accounts = [];\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.$('.accounts-wrap').empty();\n        let list = this.model.list,\n            accounts_map = {},\n            deleted_map = {},\n            settings_map = {},\n            order_map = {};\n        _.each(this.settings.settings_data, function (settings_item) {\n            settings_map[settings_item.jid] = settings_item;\n        });\n        this.settings_map = settings_map;\n        _.each(this.settings.order_data.settings, function (order_item) {\n            order_map[order_item.jid] = order_item.order;\n        });\n        _.each(this.settings.deleted, function (deleted_item) {\n            deleted_map[deleted_item.jid] = deleted_item.timestamp;\n        });\n\n        // Make synchronization list\n        _.each(settings_map, (obj, jid) => {\n            // pick accounts that are present on server only\n            if (!list.get(jid)) {\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: this.sync_all,\n                    sync_way: 'from_server'\n                }, obj);\n            }\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid'),\n                obj = settings_map[jid],\n                sync_way;\n            if (_.has(deleted_map, jid)) {\n                // pick local but deleted from server accounts\n                sync_way = deleted_map[jid] >= settings.get('timestamp') ? 'delete' : 'to_server';\n                accounts_map[jid] = _.extend({\n                    sync_way: sync_way,\n                    sync_choose: ['delete', 'to_server']\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            } else if (obj) {\n                // pick accounts that are present on both server and client\n                if (obj.timestamp > settings.get('timestamp')) {\n                    sync_way = 'from_server';\n                } else if (obj.timestamp < settings.get('timestamp')) {\n                    sync_way = 'to_server';\n                } else {\n                    sync_way = 'no';\n                }\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: settings.get('to_sync'),\n                    sync_way: sync_way,\n                    sync_choose: sync_way !== 'no' ? ['from_server', 'to_server'] : false\n                }, obj.settings);\n                settings.save('synced', sync_way === 'no');\n            } else {\n                // pick local accounts\n                accounts_map[jid] = _.extend({\n                    sync_way: 'to_server'\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            }\n        });\n\n        // fetch server order of accounts and merge it with local order\n        let max_order = _.max(order_map) || 0;\n        _.each(order_map, (order, jid) => {\n            accounts_map[jid].order = order;\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid');\n            if (!accounts_map[jid].order) {\n                accounts_map[jid].order = (++max_order);\n            }\n        });\n\n        this.accounts_map = accounts_map;\n        this.accounts = _.map(accounts_map, function (value, key) { return value; });\n        // sort merged list by new order value\n        this.accounts.sort(function (acc1, acc2) {\n            return acc1.order - acc2.order;\n        });\n        _.each(this.accounts, this.addAccountHtml.bind(this));\n        this.updateSyncOptions();\n    },\n\n    addAccountHtml: function (settings) {\n        let jid = settings.jid;\n        let $account_el = $(templates.sync_settings_account_item({\n            jid: jid,\n            view: this\n        }));\n        this.$('.accounts-wrap').append($account_el);\n    },\n\n    updateAccountHtml: function (account_wrap) {\n        let $account_wrap = $(account_wrap),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        this.sync_all && (account_item.to_sync = true);\n        $account_wrap.switchClass('sync', account_item.to_sync);\n        $account_wrap.find('.sync-one').prop('checked', account_item.to_sync);\n        let sync_way;\n        if (account_item.to_sync) {\n            sync_way = account_item.sync_way;\n        } else if (this.model.list.get(jid)) {\n            sync_way = 'off_local';\n        } else {\n            sync_way = 'off_remote';\n        }\n        let mdiclass = constants.SYNC_WAY_DATA[sync_way].icon,\n            $sync_icon = $account_wrap.find('.sync-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n        $account_wrap.find('.sync-tip').text(xabber.getString(constants.SYNC_WAY_DATA[sync_way].tip));\n    },\n\n    updateSyncOptions: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all,\n            accounts_map = this.accounts_map;\n        this.$('.sync-all').prop('checked', sync_all ? 'checked' : '');\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        this.$('.account-wrap').each((idx, el) => {\n            this.updateAccountHtml(el);\n        });\n    },\n\n    changeSyncAll: function (ev) {\n        let $target = $(ev.target),\n            sync_all = $target.prop('checked');\n        this.sync_all = sync_all;\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        if (sync_all) {\n            _.each(this.accounts, (account_item) => {\n                account_item.to_sync = true;\n            });\n            this.$('.account-wrap').each((idx, el) => {\n                this.updateAccountHtml(el);\n            });\n        }\n    },\n\n    changeSyncOne: function (ev) {\n        let $target = $(ev.target),\n            value = $target.prop('checked'),\n            $account_wrap = $target.closest('.account-wrap'),\n            jid = $account_wrap.data('jid');\n        this.accounts_map[jid].to_sync = value;\n        this.updateAccountHtml($account_wrap);\n    },\n\n    changeSyncWay: function (ev) {\n        let $account_wrap = $(ev.target).closest('.account-wrap'),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        if (!account_item.to_sync || !account_item.sync_choose) {\n            return;\n        }\n        let sync_choose = account_item.sync_choose,\n            idx = sync_choose.indexOf(account_item.sync_way) + 1;\n        if (idx === sync_choose.length) {\n            idx = 0;\n        }\n        account_item.sync_way = sync_choose[idx];\n        this.updateAccountHtml($account_wrap);\n    },\n\n    syncSettings: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all;\n        this.model.save('sync_all', this.sync_all);\n        _.each(this.accounts, function (account_item) {\n            let jid = account_item.jid,\n                settings = list.get(jid);\n            if (settings) {\n                settings.save('to_sync', account_item.to_sync);\n                if (sync_all) {\n                    settings.save('order', account_item.order);\n                }\n                let sync_way = account_item.sync_way;\n                if (sync_way === 'to_server') {\n                    settings.update_timestamp();\n                } else if (sync_way === 'from_server' || sync_way === 'delete') {\n                    settings.save('timestamp', 0);\n                }\n            }\n            if (!settings && account_item.to_sync) {\n                settings = list.create_from_server(\n                    _.omit(account_item, ['sync_way', 'sync_choose']));\n            }\n        });\n        this.model.synchronize_main_settings();\n        this.do_sync = true;\n        this.close();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (xabber.body.isScreen('blank')) {\n            xabber.body.setScreen('all-chats');\n        }\n    },\n\n    close: function () {\n        if (!this.do_sync) {\n            this.model.trigger('settings_result', null);\n        }\n        this.do_sync = null;\n        this.settings = null;\n        this.settings_map = null;\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.APIAccountView = xabber.BasicView.extend({\n    className: 'setting xabber-account',\n    template: templates.xabber_account,\n    avatar_size: constants.AVATAR_SIZES.XABBER_ACCOUNT,\n\n    events: {\n        \"click .account-info-wrap\": \"openAccount\",\n        \"click .btn-login\": \"login\",\n        \"click .btn-logout\": \"logout\",\n        \"click .btn-set-password\": \"setPassword\",\n        \"click .btn-sync-settings\": \"synchronize\",\n        \"click .social-linked-header\": \"changeExpanded\",\n        \"click .btn-unlink\": \"unlinkSocial\",\n        \"click .btn-link\": \"linkSocial\",\n        \"click .btn-verify-email\": \"verifyEmail\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-block-wrap.xabber-account'));\n        this.$tab = this.parent.$('.xabber-account-tab');\n        this.updateForConnectedStatus();\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n        this.model.on(\"change:username\", this.updateName, this);\n        this.model.on(\"change:name\", this.updateAvatar, this);\n        this.model.on(\"change:connected\", this.updateForConnectedStatus, this);\n        this.model.on(\"change:last_sync\", this.updateLastSyncInfo, this);\n        this.model.on(\"change:linked_email_list\", this.updateSocialBindings, this);\n        this.model.on(\"change:linked_social\", this.updateSocialBindings, this);\n        this.model.on(\"relogin\", this.login, this);\n        this.data.on(\"change:sync\", this.updateSyncButton, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', false);\n    },\n\n    render: function () {\n        this.data.set('sync', false);\n        this.$('span.errors ').html(\"\");\n        this.updateLastSyncInfo();\n        this.updateSocialBindings();\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n    },\n\n    changeExpanded: function () {\n        this.data.set('expanded', (this.data.get('expanded')) ? false : true);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.social-linked-wrap').showIf(expanded);\n    },\n\n    updateSocialBindings: function () {\n        let linked_emails = this.model.get('linked_email_list'),\n            linked_social = this.model.get('linked_social');\n        this.$('.email-linked').remove();\n        this.$('.social-account').each(function (idx, item) {\n            let $social_item = $(item);\n            $social_item.addClass('not-linked');\n            $social_item.find('.synced-info').text(xabber.getString(\"title_not_linked_account\"));\n            $social_item.find('.btn-link').text(xabber.getString(\"action_connect\")).removeClass('btn-unlink');\n        });\n        _.each(linked_emails, (email) => {\n            let email_id = email.id,\n                email_address = email.email,\n                is_verified = email.verified,\n                email_item_html = $(templates.linked_email_item({email_id: email_id, email: email_address, verified: is_verified, color: this.default_color}));\n            email_item_html.insertBefore(this.$('#email.not-linked'));\n        });\n        _.each(linked_social, (social) => {\n            let social_provider = social.provider,\n                social_name = social.first_name + \" \" + social.last_name;\n            this.$('.'+ social_provider + '-linked').removeClass('not-linked');\n            this.$('.' + social_provider + '-linked .btn-link').text(xabber.getString(\"action_disconnect\")).addClass('btn-unlink');\n            this.$('.'+ social_provider + '-linked .synced-info').html($(`<div class=\"name one-line\">${social_name}</div><div class=\"verified-status one-line\">${xabber.getString(\"title_linked_account\", [social_provider])}</div>`));\n        });\n    },\n\n    linkSocial: function (ev) {\n        if ((this.model.get('token'))&&(!$(ev.target).hasClass('btn-unlink'))) {\n            let social_elem = $(ev.target).closest('.social-linked-item-wrap'),\n                provider = social_elem.attr('id');\n            if (provider === 'email') {\n                utils.dialogs.ask_enter_value(xabber.getString(\"xabber_account__dialog_add_email__header\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_add_email__hint_enter_email\")}, { ok_button_text: xabber.getString(\"action_connect\")}).done((mail) => {\n                    if (mail) {\n                        this.model._call_method('POST', '/accounts/current/email_list/', {email: mail},\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list');\n                                email_list.push(mail_data);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            },\n                            (jqXHR, textStatus, errorThrown) => {\n                                this.$('span.errors ').text(jqXHR.email[0]);\n                            });\n                    }\n                });\n            }\n            else {\n                this.openAccount();\n            }\n        }\n    },\n\n    verifyEmail: function (ev) {\n        let $target = $(ev.target),\n            $email_html = $target.closest('.social-linked-item-wrap'),\n            email_address = $email_html.data('email');\n        utils.dialogs.ask_enter_value(xabber.getString(\"title_email_confirm\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_confirm_email__hint_enter_code\")}, { ok_button_text: xabber.getString(\"button_confirm\"), resend_button_text: xabber.getString(\"button_resend_link\"), resend_to: email_address}).done((code) => {\n            if (code) {\n                if (code === email_address) {\n                    this.model._call_method('POST', '/accounts/current/email_list/', {email: code});\n                }\n                else {\n                    this.model._call_method('POST', '/accounts/email_confirmation/', {code: code},\n                        (mail_data) => {\n                            let email_list = mail_data.email_list;\n                            this.model.set('linked_email_list', email_list);\n                            this.updateSocialBindings();\n                        }, (jqXHR, textStatus, errorThrown) => {\n                            this.$('span.errors').text(jqXHR.code[0]);\n                        });\n                }\n            }\n        });\n    },\n\n    unlinkSocial: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.hasClass('btn-verify-email')) {\n            let $social_html = $target.closest('.social-linked-item-wrap');\n            let provider = $social_html.attr('id'),\n                is_email = $social_html.data('email');\n            if (is_email) {\n                let email_address = $social_html.data('email');\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_email__header\"), xabber.getString(\"title_delete_email\"), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('DELETE', '/accounts/current/email_list/' + $social_html.data('id') + '/', null,\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list'),\n                                    deleted_mail_index = email_list.indexOf(email_list.find(email => email.id === $social_html.data('id')));\n                                email_list.splice(deleted_mail_index, 1);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n            else if (provider !== 'email') {\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_social__header\"), xabber.getString(\"title_delete_social\", [provider]), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('POST', '/accounts/current/social_unbind/', {provider: provider},\n                            () => {\n                                let social_list = this.model.get('linked_social'),\n                                    deleted_social_index = social_list.indexOf(social_list.find(social => social.provider === provider));\n                                social_list.splice(deleted_social_index, 1);\n                                this.model.set('linked_social', social_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n        }\n    },\n\n    updateName: function () {\n        this.$('.account-info-wrap .name').text(this.model.get('username'));\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n    },\n\n    updateAvatar: function () {\n        let name = this.model.get('name'),\n            image = this.model.get('image') || utils.images.getDefaultAvatar(name);\n        this.$('.circle-avatar').setAvatar(utils.images.getCachedImage(image), this.avatar_size);\n    },\n\n    updateForConnectedStatus: function () {\n        let connected = this.model.get('connected');\n        this.$tab.switchClass('online', connected)\n                 .switchClass('offline', !connected);\n        this.$('.linked-social-accounts-and-emails').showIf(connected);\n        this.$('.account-info-wrap').showIf(connected);\n        this.$('.sync-wrap').showIf(connected);\n        if (connected) {\n            this.updateName();\n            this.updateAvatar();\n            this.updateSyncButton();\n            this.updateLastSyncInfo();\n        }\n        this.$('.btn-login').hideIf(connected);\n        this.$('.btn-more').showIf(connected);\n    },\n\n    updateSyncButton: function () {\n        let sync = this.data.get('sync');\n        this.$('.btn-sync .button').hideIf(sync);\n        this.$('.btn-sync .preloader-wrapper').showIf(sync);\n    },\n\n    updateLastSyncInfo: function () {\n        let last_sync = this.model.get('last_sync');\n        if (last_sync) {\n            let time_delta = utils.now() - last_sync;\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__text\", [env.moment(env.moment.now() - 1000*time_delta).fromNow()]));\n        } else {\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__not_synced\"));\n        }\n    },\n\n    synchronize: function () {\n        if (!this.data.get('sync')) {\n            this.data.set('sync', true);\n            this.model.once(\"settings_result\", function () {\n                this.data.set('sync', false);\n            }, this);\n            this.model.save('sync_request', 'window');\n            this.model.get_settings();\n        }\n    },\n\n    login: function () {\n        if (xabber.add_api_account_view && xabber.accounts.connected.length > 1)\n            xabber.add_api_account_view.show();\n        else {\n            let account = xabber.accounts.connected[0];\n            if (account) {\n                account.set('auto_login_xa', true);\n                account.authXabberAccount();\n            }\n        }\n    },\n\n    logout: function () {\n        this.model.logout();\n    },\n\n    onPasswordResetFailed: function () {\n        utils.dialogs.error(xabber.getString(\"password_reset_need_email\"));\n    },\n\n    setPassword: function () {\n        let email_list = this.model.get('linked_email_list');\n        if (email_list) {\n            let verified_email = email_list.find(mail => mail.verified === true);\n            if (email_list.indexOf(verified_email) != -1) {\n                $.ajax({\n                    type: 'POST',\n                    url: constants.API_SERVICE_URL + '/accounts/password_reset_request/',\n                    contentType: \"application/json\",\n                    dataType: 'json',\n                    data: JSON.stringify({email: verified_email.email}),\n                    success: () => {\n                        utils.dialogs.notify(xabber.getString(\"button_reset_pass\"), xabber.getString(\"password_reset_success\", [verified_email.email]));\n                    },\n                    error: this.onPasswordResetFailed.bind(this)\n                });\n            }\n            else\n                this.onPasswordResetFailed();\n        }\n        else\n            this.onPasswordResetFailed();\n    },\n\n    openAccount: function () {\n        utils.openWindow(constants.XABBER_ACCOUNT_URL + '/?token=' + this.model.get('token'));\n    }\n});\n\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.api_account = new this.APIAccount({id: 'api-account'},\n            {\n                storage_name: this.getStorageName(), fetch: 'before',\n                settings_list: this.account_settings_list\n            });\n    }\n\n        this.xabber_login_panel = xabber.login_page.addChild(\n            'xabber_login', this.XabberLoginPanel, {model: this.api_account});\n\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.settings_view.addChild('api-account', this.APIAccountView,\n            {model: this.api_account});\n\n        this.add_api_account_view = new this.AddAPIAccountView({model: this.api_account});\n        this.email_auth_view = new xabber.XabberLoginByEmailPanel({\n            parent: this.add_api_account_view,\n            model: this.api_account\n        });\n    }\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n    if (msg && msg.includes('policy-violation') && log_level === Strophe.LogLevel.ERROR)\n        utils.dialogs.error(msg);\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('secret').t(old_token.token).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'https://xabber.com/protocol/synchronization#chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,1)'});\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,0.5)'});\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,0)'});\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-wrap',\n    template: templates.vcard_edit,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n        \"click .btn-vcard-back\": \"render\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function () {\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-back').addClass('hidden');\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                    auto_login_xa: this.get('auto_login_xa'),\n                    to_sync: xabber.api_account && xabber.api_account.get('sync_all')\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.vcard_edit = new xabber.VCardEditView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            if (xabber.api_account)\n                xabber.api_account.on(\"settings_result\", function (result) {\n                    if (result && this.settings.get('token')) {\n                        this.save({auth_type: 'token'});\n                    }\n                    this.trigger('start');\n                }, this);\n            else\n                xabber.on(\"bind_xmpp_accounts\", () => {\n                    if (this.settings.get('token'))\n                        this.save({auth_type: 'token'});\n                    this.trigger('start');\n                }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        verifyXabberAccount: function (code, callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_auth/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ code: code, jid: this.connection.jid}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data.token);\n                }\n            };\n            $.ajax(request);\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            jid += '/xabber-web-' + xabber.get('client_id');\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            }\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        connectXabberAccount: function () {\n            let iq_private_storage = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE}).c('storage', {xmlns:'xabber:options'});\n            this.sendIQFast(iq_private_storage, (iq) => {\n                if (($(iq).find('option').attr('type') == 'bind') && ($(iq).find('option').text() == 1)) {\n                    this.authXabberAccount();\n                }\n            });\n        },\n\n        authXabberAccount: function (callback) {\n            this.requestPassword((data) => {\n                this.xabber_auth = { api_jid: data.api_jid, request_id: data.request_id };\n                if (this.code_requests.length > 0) {\n                    let verifying_code = this.code_requests.find(verifying_mess => (verifying_mess.jid === this.xabber_auth.api_jid && verifying_mess.id === this.xabber_auth.request_id));\n                    if (verifying_code) {\n                        let idx_verifying_code = this.code_requests.indexOf(verifying_code);\n                        (idx_verifying_code > -1) && this.code_requests.splice(idx_verifying_code, 1);\n                        this.verifyXabberAccount(verifying_code.code, (data) => {\n                            this._waiting_code = false;\n                            let iq_send_auth_mark = $iq({type: 'set'})\n                                .c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE})\n                                .c('storage', {xmlns:'xabber:options'})\n                                .c('option', {type: 'bind'}).t(1);\n                            if (xabber.api_account) {\n                                xabber.api_account.save('token', data);\n                                xabber.api_account.login_by_token();\n                            }\n                            this.sendIQFast(iq_send_auth_mark);\n                            callback && callback();\n                        });\n                    }\n                    if (this.code_requests.length) {\n                        let msg_attrs = {\n                            from_jid: this.code_requests[0].jid,\n                            message: xabber.getString(\"xmpp_confirm__text_message__verification_code_is\", [Number(this.code_requests[0].code)]),\n                            is_archived: false\n                        };\n                        this.createMessageFromIQ(msg_attrs);\n                    }\n                }\n            });\n        },\n\n        requestPassword: function(callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_code_request/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ jid: this.connection.jid, type: 'iq'}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data);\n                }\n            };\n            this._waiting_code = true;\n            $.ajax(request);\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({connected: true, reconnected: true,\n                    reconnecting: false, conn_retries: 0});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.settings_right && this.settings_right.children && this.settings_right.children.account_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.settings_right.children.account_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.settings_right.children.account_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.settings_right.children.account_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.settings_right.children.account_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function () {\n            if (!this.auth_view){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function () {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('description').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address});\n                });\n                this.x_tokens_list = tokens_list;\n                this.settings_right && this.settings_right.updateXTokens();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid')) {\n                xabber.trigger('quit_accounts');\n                return;\n            }\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (encrypted, callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: (encrypted && this.omemo) ? this.omemo.getRetractVersion() : this.retraction_version};\n            encrypted && (query_options.type = 'encrypted');\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQFast(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                if (msg.collection && msg.collection.chat && msg.collection.chat.get('group_chat'))\n                    $(msg_iq).append(\"<retry to='\" + msg.collection.chat.get('jid') + \"' xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                else\n                    $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            let has_settings_right = !_.isUndefined(this.settings_right);\n            if (!this.settings_left)\n                this.settings_left = new xabber.AccountSettingsLeftView({model: this});\n            if (!has_settings_right)\n                this.settings_right = new xabber.AccountSettingsRightView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings', {\n                account: this, right: right, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_settings_right) {\n                this.trigger('render_settings');\n                this.settings_right.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_right.$('.blocklist-info')[0]\n                });\n                this.settings_right.addChild('account_password_view', xabber.ChangeAccountPasswordView, {\n                    model: this,\n                    el: this.settings_right.$('.change-password-container')[0]\n                });\n            }\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_left && this.settings_left.$el.attr('data-color', color);\n            if (this.settings_right) {\n                this.settings_right.$el.attr('data-color', color);\n            }\n            this.vcard_edit.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings) {\n            this.show_settings_after_delete = show_settings;\n            xabber.body.setScreen('all_chats', {right_contact: ''});\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid'))\n                xabber.trigger('quit_accounts');\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster.deleteDataBase();\n            this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'))\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_auth', true)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response) {\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'))\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                }\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    if (file.duration)\n                        formData.append('duration', file.duration);\n                    if (file.voice)\n                        formData.append('media_type', file.type + '+voice');\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/avatar/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id)\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        data: JSON.stringify({id: file_id}),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n        xabber.api_account && xabber.api_account.on(\"settings_result\", function (result) {\n            result && this.trigger('update_order');\n        }, this);\n    },\n\n    onQuit: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount();\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    onQuitAccounts: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length || xabber.api_account && xabber.api_account.get('connected'));\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings');\n            } else {\n                xabber.body.setScreen('all-chats');\n                xabber.chats_view.showAllChats();\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            this.settings_list.order_timestamp.save('timestamp', utils.now());\n            xabber.api_account.synchronize_order_settings();\n        }\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .filter-chats': 'filterChats',\n        'click .circle-avatar': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"filter_chats\", this.setActive, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showSettings: function () {\n        let scroll_top = xabber.toolbar_view.getScrollTop();\n        this.model.showSettings();\n        xabber.toolbar_view.scrollTo(scroll_top);\n    },\n\n    filterChats: function (ev) {\n        let scroll_top = xabber.toolbar_view.getScrollTop();\n        ev.stopPropagation();\n        xabber.chats_view.showChatsByAccount(this.model);\n        this.model.trigger('filter_chats');\n        xabber.toolbar_view.scrollTo(scroll_top);\n    },\n\n    setActive: function () {\n        xabber.toolbar_view.$('.toolbar-item').removeClass('active');\n        this.$el.addClass('active');\n    }\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n        });\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function () {\n        this.model.showSettings('vcard_edit');\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .tabs .tab\": \"onTabClick\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .gallery-file\": \"onClickFile\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            this.getFiles(this.current_options)\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            if (!after_avatar_update){\n                this.$('.tabs .list-variant[data-value=\"image\"]').hideIf(!(response.images && response.images.used))\n                if (response.images && response.images.used)\n                    this.$('.tabs .list-variant[data-value=\"image\"]').addClass('tab')\n                else\n                    this.$('.tabs .list-variant[data-value=\"image\"]').removeClass('tab')\n            }\n            this.$('.storage-label-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.tabs .list-variant[data-value=\"video\"]').hideIf(!(response.videos && response.videos.used))\n            if (response.videos && response.videos.used)\n                this.$('.tabs .list-variant[data-value=\"video\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"video\"]').removeClass('tab')\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.tabs .list-variant[data-value=\"voice\"]').hideIf(!(response.voices && response.voices.used))\n            if (response.voices && response.voices.used)\n                this.$('.tabs .list-variant[data-value=\"voice\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"voice\"]').removeClass('tab')\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.tabs .list-variant[data-value=\"files\"]').hideIf(!(response.files && response.files.used))\n            if (response.files && response.files.used)\n                this.$('.tabs .list-variant[data-value=\"files\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"files\"]').removeClass('tab')\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            this.$('.tabs .indicator').remove();\n            this.$('.tabs').tabs();\n            this.$('.indicator').addClass('ground-color-500');\n            if (after_deletion){\n                if (!this.$('.tabs .list-variant.tab').length) {\n                    return;\n                }\n                !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('grid')\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        }\n        this.$('.tabs .list-variant a').removeClass('active');\n        this.$('.tabs .list-variant[data-value=\"' + file_type + '\"] a').addClass('active');\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.tab'),\n            file_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.tab .active').closest('.tab').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.tab .active').closest('.tab').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.tab .active').closest('.tab').attr('data-value'))\n            return;\n        if (!response.total_objects && response.type != 'avatars'){\n            if (response.type){\n                let tab = this.$('.tabs .list-variant[data-value=' + response.type + ']');\n                tab.removeClass('tab');\n                tab.addClass('hidden');\n                this.$('.tabs .indicator').remove();\n                this.$('.tabs').tabs();\n                this.$('.indicator').addClass('ground-color-500');\n            }\n        }\n        if (!response.items.length){\n            !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            return;\n        }\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove()\n        if (response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let $gallery_file = $(templates.media_gallery_account_file({file: item, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(xabber.getString(\"no_files\"))\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            this.updateStorage(true);\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    data: JSON.stringify({id: file_id}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    deleteFilesFiltered: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.property-variant'),\n                days = $target.attr('data-date'),\n                date = new Date();\n            days && date.setDate(date.getDate() - days)\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && date && date.toISOString().split('T') && date.toISOString().split('T')[0])\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    data: JSON.stringify({date_lte: date.toISOString().split('T')[0]}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.AccountSettingsLeftView = xabber.BasicView.extend({\n    className: 'account-settings-left-wrap',\n    template: templates.settings_left,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .main-info-wrap .status\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\"\n    },\n\n    _initialize: function () {\n        this.status_field = new xabber.StatusMessageWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.$el.switchClass('vcard-edit', options.right == 'vcard_edit');\n        this.$('.settings-tab[data-block-name=\"tokens\"]').hideIf(this.model.get('auth_type') !== 'x-token');\n        this.$('.settings-tab').removeClass('active');\n        this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`).addClass('active');\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n\n        this.updateCSS();\n        return this;\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.updateNameCSS();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info-wrap .status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        // this.$('.settings-tab[data-block-name=\"xmpp-resources\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"server-info\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"blocklist\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"groups-info\"]').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    }, () => {\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            block_name = $tab.data('block-name');\n        if (block_name === 'vcard_edit'){\n            this.model.showSettings(block_name, 'vcard');\n            this.$('.settings-tab').removeClass('active');\n            $tab.addClass('active');\n        }\n        else if (block_name === 'media-gallery'){\n            this.model.showSettings(null, block_name);\n            this.model.settings_right.gallery_view.$('.tabs .list-variant:not(.hidden)').first().click();\n        }\n        else\n            this.model.showSettings(null, block_name);\n    },\n\n    deleteAccount: function () {\n        let dialog_options = [];\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            dialog_options = [{name: 'delete_settings',\n                checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"dialog_delete_account__label_delete_synced_settings\")}];\n        }\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            dialog_options, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            if (res.delete_settings && xabber.api_account) {\n                if (xabber.api_account.get('xmpp_binding') === this.model.get('jid'))\n                    xabber.api_account._call_method('DELETE', '/accounts/current/client-settings/', {jid: this.model.get('jid')});\n                else\n                    xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n            this.model.deleteAccount();\n        });\n    }\n});\n\nxabber.AccountSettingsRightView = xabber.BasicView.extend({\n    className: 'account-settings-right-wrap',\n    template: templates.settings_right,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"click .last-auth.resource\": \"showResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"change .color-scheme input[type=radio][name=account_color]\": \"changeColor\",\n        \"click .token-wrap .btn-revoke-token\": \"revokeXToken\",\n        \"click .tokens .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .omemo-info .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-delete-files\": \"deleteFilesFiltered\",\n        \"click .omemo-info .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function () {\n        // this.resources_view = this.addChild('resources', xabber.AccountResourcesView,\n        //     {model: this.model.resources, el: this.$('.xmpp-resources')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSynchronizationBlock, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        if (options.block_name){\n            this.$('.settings-block-wrap').addClass('hidden');\n            this.$('.settings-block-wrap.'+options.block_name).removeClass('hidden');\n            this.$('.settings-panel-head span.settings-panel-head-title').text(this.$('.settings-block-wrap.'+options.block_name).attr('data-header'));\n            this.$('.btn-block').switchClass('hidden2', options.block_name != 'blocklist-info');\n            this.$('.media-gallery-button.btn-more').hideIf(options.block_name != 'media-gallery');\n            if (options.block_name === 'media-gallery') {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'right'\n                };\n                this.$('.media-gallery-button.dropdown-button').dropdown(dropdown_settings);\n\n                this.$('.btn-delete-files-variants').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    hover: true,\n                    belowOrigin: true,\n                });\n            }\n        }\n        this.scrollToChild(this.$('.settings-block-wrap.'+options.block_name));\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        return this;\n    },\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status'),\n            status_message = account.getStatusMessage();\n        this.$('.main-resource .status').attr('data-status', status);\n        this.$('.main-resource .status-message').text(status_message);\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.$('.xabber-account-features-wrap').showIf(xabber.api_account && xabber.api_account.get('connected'));\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    renderAllXTokens: function () {\n        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n        $(_.sortBy(this.model.x_tokens_list), 'last_auth').each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    let $cur_token_html = $(templates.current_token_item(pretty_token));\n                    this.$('.panel-content-wrap .tokens .current-session').append($cur_token_html);\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item(pretty_token));\n            this.$('.panel-content-wrap .tokens .all-sessions').append($token_html);\n        });\n        if (this.$('.panel-content-wrap .tokens .all-sessions').children().length)\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').removeClass('hidden');\n        else\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').addClass('hidden');\n    },\n\n    updateXTokens: function () {\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.panel-content-wrap .tokens').addClass('hidden');\n            this.$('.panel-content-wrap .tokens .sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n            this.renderAllXTokens();\n        }\n    },\n\n    revokeXToken: function (ev) {\n        let $target = $(ev.target).closest('.token-wrap'),\n            token_uid = $target.data('token-uid');\n        this.model.revokeXToken([token_uid], () => {\n            if (this.model.get('x_token'))\n                if (this.model.get('x_token').token_uid === token_uid) {\n                    this.model.deleteAccount();\n                    return;\n                }\n            this.model.getAllXTokens();\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens();\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (this.model.omemo) {\n            has_keys = Object.keys(this.model.omemo.get('prekeys')).length;\n        } else {\n            let omemo = new xabber.Omemo({id: 'omemo'}, {\n                account: this.model,\n                storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                fetch: 'before'\n            });\n            has_keys = Object.keys(omemo.get('prekeys')).length;\n            omemo.destroy();\n        }\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.omemo-settings-wrap .setting-wrap.purge-keys').switchClass('hidden', !has_keys);\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n                this.$('.omemo-settings-wrap .setting-wrap.purge-keys').switchClass('hidden', true);\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n            xabber.api_account && xabber.api_account.synchronize_main_settings();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n                xabber.api_account && xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = ev.target.value;\n        this.model.settings.update_settings({color: value});\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.unblockSelected();\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.deleteFilesFiltered(ev);\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateEnabled();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$el.find('.sync-marker').showIf(this.model.settings.get('to_sync'));\n    },\n\n    showSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.SettingsAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSyncState, this);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.accounts-head-wrap').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n        this.$('.accounts-head-wrap').showIf(this.model.length);\n        this.parent.$('.settings-tab[data-block-name=\"xmpp-accounts\"] .settings-block-name')\n            .text(this.model.length === 1 ? xabber.getString(\"account\") : xabber.getString(\"settings__menu_item__xmpp_account\") );\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-head').showIf(connected);\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$('.sync-head').hideIf(!connected);\n        this.$('.sync-marker-wrap').hideIf(!connected);\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatar\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    saveAvatar: function (ev) {\n        let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176),\n            file = new File([blob], \"avatar\", {\n                type: \"image/png\",\n            });\n        file.generated = true;\n        file.base64 = blob;\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = JSON.parse(templates.emojis())\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"render\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    _initialize: function () {\n        this.account = this.model\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        return this;\n    },\n\n    render: function (options) {\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm)\n            .siblings('span.errors').text(options.password_confirm || '');\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.render();\n    },\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        Materialize.updateTextFields();\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1)\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                        this.endAuth();\n                    } else {\n                        this.stepped_auth_complete = true\n                        if (this.first_features_received)\n                            this.successFeedback();\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false)\n        this.account.trigger('start');\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings = xabber.wide_panel.addChild('account_settings',\n        this.NodeView, {classlist: 'settings-panel account-settings-panel'});\n    this.acc_settings_left = xabber.account_settings.addChild('left',\n        this.Container, {classlist: 'account-settings-left-container'});\n    this.acc_settings_right = xabber.account_settings.addChild('right',\n        this.Container, {classlist: 'account-settings-right-container'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_view.addChild('accounts', this.SettingsAccountsBlockView,\n        {model: this.accounts, el: this.settings_view.$('.xmpp-accounts')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-name one-line\"/>')\n                .append('<div class=\"supports\"/>');\n    },\n\n    _initialize: function () {\n        this.render();\n        this.$el.appendTo(this.model.collection.account.settings_right.$('.capabilities'));\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.supports').text(supports ? xabber.getString(\"account_settings__server_info__status_available\") : xabber.getString(\"account_settings__server_info__status_unavailable\"))\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.connection = this.account.connection;\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            xabber.get('client_name'),\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.GEOLOC, 'XEP-0080: User Location');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    }\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n            if (namespace === Strophe.NS.AUTH_DEVICES)\n                self.account.getAllXTokens();\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        })\n\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    this.connection.deleteTimedHandler(this._ping_handler);\n    this._ping_handler = this.connection.addTimedHandler(30000, () => {\n        let downtime = moment.now() - this.last_stanza_timestamp;\n        if (downtime / 1000 > (xabber.settings.reconnect_interval || 90)) {\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            return false;\n        }\n        if (downtime / 1000 > (xabber.settings.ping_interval || 60)) {\n            this.connection.ping.ping(this.get('jid'));\n        }\n        return true;\n    });\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    this.fast_connection.deleteTimedHandler(this._fast_ping_handler);\n    this._fast_ping_handler = this.fast_connection.addTimedHandler(30000, () => {\n        let downtime = moment.now() - this.last_fast_stanza_timestamp;\n        if (downtime / 1000 > (xabber.settings.reconnect_interval || 90)) {\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            return false;\n        }\n        if (downtime / 1000 > (xabber.settings.ping_interval || 60)) {\n            this.fast_connection.ping.ping(this.fast_connection.jid);\n        }\n        return true;\n    });\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated') && !attrs.is_deleted)\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                if (this.get('in_roster')) {\n                    this.updateCachedInfo();\n                }\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        let roster_info = {\n            jid: this.get('jid'),\n            in_roster: this.get('in_roster'),\n            groups: this.get('groups'),\n            subscription: this.get('subscription'),\n            roster_name: this.get('roster_name'),\n            subscription_request_out: this.get('subscription_request_out'),\n            subscription_request_in: this.get('subscription_request_in'),\n            name: this.get('name'),\n            vcard_updated: this.get('vcard_updated')\n        }, full_jid = this.get('full_jid');\n        if (this.get('photo_hash') || this.get('image'))\n            _.extend(roster_info, {\n                photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                avatar_priority: this.get('avatar_priority'),\n                avatar: this.get('image')\n            });\n        if (full_jid)\n            roster_info.resource = Strophe.getResourceFromJid(full_jid);\n        this.account.cached_roster.putInRoster(roster_info);\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat')) {\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item);\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('group_chat') ? this.get('full_jid') : this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let avatar_hash = sha1(image.base64),\n            iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                .c('item', {id: avatar_hash})\n                .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(image.base64),\n            iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                .c('item', {id: avatar_hash})\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n        this.account.sendIQFast(iq_pub_data, () => {\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }, (data_error) => {\n                errback && errback(data_error);\n            });\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        this.removeFromRoster();\n                        let chat = this.account.chats.getChat(this);\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        let chat = this.account.chats.getChat(this);\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    sendPresent: function () {\n        let pres = $pres({to: this.get('jid')})\n            .c('x', {xmlns: `${Strophe.NS.GROUP_CHAT}#present`});\n        this.account.sendPres(pres);\n        clearInterval(this._sending_present_interval);\n        this._sending_present_interval = setInterval(() => {\n            this.account.sendPres(pres);\n        }, constants.PRESENT_INTERVAL);\n    },\n\n    sendNotPresent: function () {\n        let pres = $pres({to: this.get('jid')})\n            .c('x', {xmlns: `${Strophe.NS.GROUP_CHAT}#not-present`});\n        this.account.sendPres(pres);\n        clearInterval(this._sending_present_interval);\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            if (this.details_view && !this.details_view.child('participants')) {\n                this.details_view = new xabber.GroupChatDetailsView({model: this});\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            if (this.details_view && this.details_view.isVisible() && group_chat_info.online_members_num != prev_group_info.online_members_num)\n                this.trigger('update_participants');\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                this.removeFromRoster();\n                let chat = this.account.chats.getChat(this);\n                if (!this.get('sync_deleted')){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                        this.destroy();\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                        this.destroy();\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                    this.destroy();\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n        getMessageByStanzaId: function (stanza_id, callback) {\n            let queryid = uuid(),\n                account = this.account,\n                is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection,\n                iq = $iq({type: 'set', to: this.get('full_jid') || this.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                    .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                    .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                    .c('value').t(Strophe.NS.MAM).up().up()\n                    .c('field', {'var': '{urn:xmpp:sid:0}stanza-id'})\n                    .c('value').t(stanza_id);\n            let handler = conn.addHandler((message) => {\n                let $msg = $(message);\n                if ($msg.find('result').attr('queryid') === queryid)\n                    callback && callback($msg);\n                return true;\n            }, Strophe.NS.MAM);\n            this.account.sendIQFast(iq, () => {\n                    conn.deleteHandler(handler);\n                }, () => {\n                    conn.deleteHandler(handler);\n                }\n            );\n        },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE) && options.encrypted)    {\n            iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_encrypted`})\n                .c('value').t(options.encrypted).up().up();\n        }\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE) && !options.encrypted)    {\n            if (options.filter_image)\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_image`})\n                    .c('value').t(options.filter_image).up().up();\n            if (options.filter_video)\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_video`})\n                    .c('value').t(options.filter_video).up().up();\n            if (options.filter_voice)\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_voice`})\n                    .c('value').t(options.filter_voice).up().up();\n            if (options.filter_files){\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_image`})\n                    .c('value').t('false').up().up();\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_video`})\n                    .c('value').t('false').up().up();\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_voice`})\n                    .c('value').t('false').up().up();\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_sticker`})\n                    .c('value').t('false').up().up();\n            }\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [];\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id'),\n                        id: $file.children('gallery-id').text(),\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let user_info = message.get('user_info') || {},\n                chat_content = this.account.chats.get(this.hash_id).item_view.content,\n                is_scrolled = chat_content.isScrolledToBottom(),\n                msg_author = user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            if (is_scrolled)\n                chat_content.scrollToBottom();\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.main-info').removeClass('fixed-scroll');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsView = xabber.BasicView.extend({\n    className: 'details-panel contact-details-panel',\n    template: templates.contact_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n        \"change .subscription-info-wrap input\": \"onChangedSubscription\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.resources_view = this.addChild('resources',\n            xabber.ContactResourcesView, {model: this.model.resources,\n                el: this.$('.resources-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.model.on(\"change\", this.update, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.setButtonsWidth();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-delete').showIf(in_roster);\n        this.$('.btn-block-wrap i').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap)').switchClass('non-active', is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    onChangedSubscription: function (ev) {\n        let contact = this.model,\n            $target = $(ev.target),\n            is_checked = $target.prop('checked');\n        if (is_checked) {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.askRequest();\n            else {\n                contact.set('subscription_preapproved', true);\n                contact.acceptRequest();\n            }\n        }\n        else {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.declineSubscription();\n            else\n                contact.declineSubscribe();\n        }\n    },\n\n    openChat: function (ev) {\n        if (ev && ($(ev.target).closest('.button-wrap').hasClass('non-active') || $(ev.target).closest('.button-wrap').length && this.model.get('blocked')))\n            return;\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        this.openChat();\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.ContactDetailsViewRight = xabber.ContactDetailsView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 200) {\n            this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,1)'});\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.block-wrap.vcard').css({'padding-top': '340px'})\n            this.$('.main-info .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,0.5)'});\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.block-wrap.vcard').css({'padding-top': '0'});\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,0)'});\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.block-wrap.vcard').css({'padding-top': '0'});\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        if (bottom_block_scroll && bottom_block_scroll < 150) {\n            this.$('.bottom-block:not(.edit-bottom-block) .tabs').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.main-info .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.main-info .block-name.second-text').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block) .tabs').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-110},\n            200,\n            () => {\n                this.onScroll();\n                this.ps_container.animate(\n                    {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-110},\n                    0,\n                );\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsView = xabber.BasicView.extend({\n    className: 'details-panel groupchat-details-panel',\n    template: templates.group_chats.group_chat_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"editDefaultRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.participants = this.addChild('participants', xabber.ParticipantsView, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesView, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusView, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit = new xabber.DefaultRestrictionsView({model: this.model});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateList('participants');\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n        this.setButtonsWidth();\n        return this;\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    editDefaultRestrictions: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active'))\n            this.default_restrictions_edit.open();\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                contact.removeFromRoster();\n                let chat = this.account.chats.getChat(contact);\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    },\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 200) {\n            this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,1)'});\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.block-wrap.vcard').css({'padding-top': '340px'})\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,0.5)'});\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.block-wrap.vcard').css({'padding-top': '0'});\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,0)'});\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.block-wrap.vcard').css({'padding-top': '0'});\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (bottom_block_scroll && bottom_block_scroll < 150) {\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .tabs').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .tabs').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                contact.removeFromRoster();\n                let chat = this.account.chats.getChat(contact);\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.main-info .header-buttons .block-name.second-text').text($target.text())\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 110},\n                400,\n                () => {\n                    this.onScroll();\n                    this.ps_container.animate(\n                        {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 110},\n                        0,\n                    );\n                });\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,1)'});\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,0.5)'});\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,0)'});\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.main-info').removeClass('fixed-scroll');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        this.messagesFileRequest({}, () => {\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        });\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted)\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                $(templates.preloader()).appendTo(this.$('.gallery-files'))\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.$el.html(\"<div class='gallery-files files'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.$el.html(\"<div class='gallery-files voice'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.model.get('group_info')) {\n                (this.participants.version === 0) && (this.model.get('group_info').members_num = this.participants.length);\n                if (this.participants.length != this.model.get('group_info').members_num) {\n                    this.account.groupchat_settings.resetParticipantsList(this.model.get('jid'));\n                    this.participants.resetParticipants();\n                    this.updateParticipants();\n                    return;\n                }\n            }\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n    },\n\n    onParticipantsUpdated: function () {\n        this.isVisible() && this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.model.get('group_info')) {\n                (this.participants.version === 0) && (this.model.get('group_info').members_num = this.participants.length);\n                if (this.participants.length != this.model.get('group_info').members_num) {\n                    this.account.groupchat_settings.resetParticipantsList(this.model.get('jid'));\n                    this.participants.resetParticipants();\n                    this.updateParticipants();\n                    return;\n                }\n            }\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n    },\n\n    onParticipantsUpdated: function () {\n        this.isVisible() && this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.pushInRoster(null, () => {\n                    contact.pres('subscribe');\n                    contact.getMyInfo();\n                    this.close();\n                    contact.sendPresent();\n                    this.account.chats.openChat(contact);\n                    let chat = this.account.chats.getChat(contact);\n                    chat.messages.createSystemMessage({\n                        from_jid: group_jid,\n                        message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                    });\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').css({'background-color': 'rgba(255,255,255,0)'});\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').css({'background-color': 'rgba(255,255,255,1)'});\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').css({'background-color': 'rgba(255,255,255,1)'});\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').css({'background-color': 'rgba(255,255,255,0.5)'});\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').css({'background-color': 'rgba(255,255,255,0)'});\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (bottom_block_scroll && bottom_block_scroll < 150) {\n            this.$('.bottom-block .tabs').addClass('fixed-scroll');\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block .tabs').removeClass('fixed-scroll');\n            this.$('.bottom-block .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                        this.close();\n                        },\n                        function (error) {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.pushInRoster(null, () => {\n                    contact.pres('subscribe');\n                    contact.getMyInfo();\n                    this.close();\n                    contact.sendPresent();\n                    this.account.chats.openChat(contact);\n                    let chat = this.account.chats.getChat(contact);\n                    chat.messages.createSystemMessage({\n                        from_jid: group_jid,\n                        message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                    });\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid'));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.find('id').text();\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.get('jid'), id);\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            this.blockInvitation();\n            contact.getMyInfo();\n            contact.sendPresent();\n            this.openChat();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field label': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add)\n            this.$('.groups-wrap').hideIf(false)\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').addClass('visible');\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n            this.$('.new-group-name input').addClass('visible');\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.new-group-name input').removeClass('visible');\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field.updateValue(true);\n        this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n        });\n        this.model.getBlockedParticipants((response) => {\n            this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n            });\n            this.model.getBlockedParticipants((response) => {\n                this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        this.settings_view.show();\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = options.roster_version || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION};\n        if (!options.after) {\n            if (options.stamp)\n                request_attrs.stamp = options.stamp;\n            else if (this.account.last_msg_timestamp)\n                request_attrs.stamp = this.account.last_msg_timestamp * 1000;\n        }\n        delete(options.stamp);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync);\n        });\n    },\n\n    syncCachedConversations: function (conv_list, request_with_stamp, is_first_sync) {\n        $(conv_list).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync) {\n        if (!$(item).length){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (jid === this.account.get('jid'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito, is_deleted: $item.attr('status') === 'deleted'}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,};\n        if (message.children('stanza-id').length\n            && message.children('stanza-id').attr('id')\n            && chat.retracted_msg_id_list.includes(message.children('stanza-id').attr('id'))){\n            return;\n        };\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            }\n            else{\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            contact && contact.details_view && contact.details_view.isVisible() && xabber.body.setScreen(xabber.body.screen.get('name'), {right: undefined});\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n            }\n        }\n        else\n            contact && contact.set('sync_deleted', false);\n        if ($group_metadata.length) {\n            contact.participants && contact.participants.createFromStanza($group_metadata.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`));\n        }\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.set('sync_type', type);\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (is_group_chat) {\n            if (request_with_stamp && !is_first_sync) {\n                if (chat.retraction_version < msg_retraction_version)\n                    chat.trigger(\"get_retractions_list\");\n            } else\n                chat.retraction_version = msg_retraction_version;\n        }\n        if (request_with_stamp && chat.item_view && chat.item_view.content && !is_invite) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (!(encrypted && !this.account.omemo)){\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last'),\n            encrypted_retract_version = $(iq).find('query conversation[type=\"encrypted\"]').first().children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            retract_version = $(iq).find('query conversation[type=\"chat\"]').first().children(`metadata[node=\"${Strophe.NS.REWRITE}\"]`).children('retract').attr('version');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        if (!_.isUndefined(encrypted_retract_version) && this.account.omemo && this.account.omemo.getRetractVersion() < encrypted_retract_version)\n            this.account.getAllMessageRetractions(true);\n        if (request_with_stamp) {\n            if (this.account.retraction_version < retract_version)\n                this.account.getAllMessageRetractions();\n        } else {\n            this.account.retraction_version = retract_version;\n        }\n        this.account.set('last_sync', sync_timestamp);\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        let dfd = new $.Deferred();\n        dfd.done((is_cached) => {\n            this.account.cached_sync_conversations.putInCachedConversations({\n                account_conversation_type: 'last_sync_timestamp',\n                timestamp: sync_timestamp,\n            });\n            xabber.chats_view.hideChatsFeedback();\n            if (!request_with_stamp)\n                this.account.chats.getSavedChat();\n            if (is_first_sync)\n                this.account.set('first_sync', sync_timestamp);\n            if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n                //\n            }\n            else if ($(iq).find('conversation').length) {\n                if (!synchronization_with_stamp) {\n                    this.syncFromServer({max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after});\n                }\n                else {\n                    this.account.get('last_sync') && this.syncFromServer({stamp: this.account.get('last_sync'), max: constants.SYNCHRONIZATION_RSM_MAX}, true);\n                }\n            }\n        });\n        if (is_first_sync)\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                let synced_conversations = $(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray();\n                res = res.filter(item => !synced_conversations.includes(item.account_conversation_type));\n                this.syncCachedConversations(res, request_with_stamp, is_first_sync);\n                this.syncConversations(iq, request_with_stamp, is_first_sync);\n                dfd.resolve(true);\n            });\n        else{\n            this.syncConversations(iq, request_with_stamp);\n            dfd.resolve();\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n            this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n            this.account.dfd_presence.resolve();\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver');\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item);\n        });\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.cached_roster.putInRoster({\n                    jid: 'roster_version',\n                    is_version: true,\n                    version: this.roster_version\n                });\n            }\n        }\n        return true;\n    },\n\n    onRosterItem: function (item) {\n        let jid = item.getAttribute('jid');\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n        }\n        if (subscription === 'from')\n            attrs.subscription_request_in = false;\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .blocked-item\": \"onTabClick\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n        this.hideTabs();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n        this.updateIndicator();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.$('.blocked-contact input:checked').length;\n        this.parent.$('.btn-unblock-selected').hideIf(!has_changes)\n        this.parent.$('.btn-deselect-blocked').hideIf(!has_changes)\n        this.parent.$('.btn-block').hideIf(has_changes)\n    },\n\n    unblockSelected: function (ev) {\n        let selected = this.$('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    onTabClick: function (ev) {\n        let tab = $(ev.target).closest('.blocked-item'),\n            tab_name = $(ev.target).closest('.blocked-item').attr('data-tab-name');\n        this.$('.blocked-item a').removeClass('active');\n        tab.find('a').addClass('active');\n        this.$('.blocked-items-container').addClass('hidden');\n        this.$('.' + tab_name).removeClass('hidden');\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    hideTabs: function () {\n        this.$('.tabs').hideIf(this.$('.blocked-item:not(.hidden)').length === 1)\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let tab_name = $(item).closest('.blocked-items-container').addClass('hidden').attr('data-tab-name');\n            this.$('.' + tab_name).addClass('hidden').removeClass('tab');\n        });\n        if (this.$('.blocked-item.hidden .active').length){\n            this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n\n        }\n        this.hideTabs();\n        this.updateUnblockButton();\n        this.updateIndicator();\n    },\n\n    onContactAdded: function (attrs) {\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.$('.invitations-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-invitations-wrap').find('.blocked-invitations').append(tmp);\n        }\n        else if (attrs.domain) {\n            this.$('.domains-item').removeClass('hidden').addClass('tab');\n            let $domain_wrap = this.$('.blocked-domains-wrap'),\n                $desc = $domain_wrap.find('.blocked-item-description');\n            $domain_wrap.find('.blocked-domains').append(tmp);\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        else {\n            this.$('.contacts-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-contacts-wrap').find('.blocked-contacts').append(tmp);\n            let $desc = this.$('.blocked-contacts-wrap .blocked-item-description');\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        this.$('.placeholder').addClass('hidden');\n        this.hideTabs();\n        this.updateIndicator();\n        if (this.$('.blocked-items-container.hidden').length === 3)\n            this.$('.blocked-list:not(:empty)').closest('.blocked-items-container').removeClass('hidden');\n        this.isVisible() && this.parent.updateScrollBar();\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        let blocked_list = $elem.closest('.blocked-list'),\n            reg = new RegExp(('\\\\,\\\\s' + jid + '|' + jid + '\\\\,\\\\s' + '|' + jid)),\n            blocked_contacts_desc = $elem.closest('.blocked-contacts-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description'),\n            blocked_domains_desc = $elem.closest('.blocked-domains-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description');\n        $elem.closest('.blocked-invitations-wrap').showIf(blocked_list.children().length > 1);\n        blocked_contacts_desc.text(blocked_contacts_desc.text().replace(reg, \"\"));\n        blocked_domains_desc.text(blocked_domains_desc.text().replace(reg, \"\"));\n        $elem.detach();\n        this.$('.placeholder').hideIf(this.account.blocklist.length());\n        this.parent.updateScrollBar();\n        this.hideEmptyContainers();\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\nxabber.RosterRightView = xabber.RosterView.extend({\n    className: 'roster-right-container container',\n    template: templates.roster_right,\n    ps_settings: {theme: 'roster-right'},\n    account_roster_view: xabber.AccountRosterRightView,\n\n    events: {\n        \"click .collapsed-wrap\": \"expand\",\n        \"mouseleave .expanded-wrap\": \"collaps\"\n    },\n\n    __initialize: function () {\n        this.updateCounter();\n        this.updateTheme();\n        this.updateBlur();\n        this.updateTransparency();\n        this.model.on(\"activate deactivate destroy\", this.updateCounter, this);\n        this.data.on(\"change\", this.updateLayout, this);\n        let pinned = this._settings.get('pinned');\n        this.data.set({expanded: false, pinned: false});\n    },\n\n    updateTheme: function (theme) {\n        theme = theme || xabber.settings.side_panel.theme;\n        this.$el.attr('data-theme', theme);\n        this.updateTransparency();\n    },\n\n    updateTransparency: function (transparency) {\n        transparency = transparency || xabber.settings.side_panel.transparency;\n        if (xabber.settings.side_panel.theme == 'dark')\n            this.$el.css('background-color', `rgba(0, 0, 0, ${1 - transparency/100})`);\n        else\n            this.$el.css('background-color', `rgba(255, 255, 255, ${1 - transparency/100})`);\n    },\n\n    updateBlur: function (blur) {\n        blur = _.isUndefined(blur) ? xabber.settings.side_panel.blur : blur;\n        this.$el.switchClass('with-blur', blur);\n    },\n\n    expand: function () {\n        this.data.set('expanded', true);\n    },\n\n    collaps: function () {\n        if (!this.data.get('pinned'))\n            this.data.set('expanded', false);\n    },\n\n    updateLayout: function () {\n        let changed = this.data.changed;\n        if (_.has(changed, 'expanded') || _.has(changed, 'pinned')) {\n            xabber.trigger('update_layout', {roster_state_changed: true});\n        }\n    },\n\n    updateCounter: function () {\n        this.$('.all-contacts-counter').text(\n            _.reduce(this.children, function (counter, view) {\n                return counter + view.roster.length;\n            }, 0)\n        );\n    },\n\n    onListChanged: function () {\n        this.updateScrollBar();\n    }\n});\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            let contact = this.getContactForItem(selection);\n            contact && contact.showDetails();\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el = this.model.account.settings_right.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        let jid = this.$('input[name=username]').val().trim();\n        this.$el.append($(templates.preloader()))\n        this.$('.btn-add').addClass('hidden-disabled')\n        this.$('input[name=contact_name]').val('');\n        if (this.account.connection && this.account.connection.connected) {\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.pushInRoster({name: name, groups: groups}, () => {\n                contact.pres('subscribe');\n                contact.trigger('presence', contact, 'subscribe_from');\n                contact.trigger(\"open_chat\", contact);\n            }, function () {\n                contact.destroy();\n            });\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n\n    this.cached_roster.on(\"database_opened\", () => {\n        this.cached_roster.getFromRoster('roster_version', (res) => {\n            let roster_version = res && res.version ? res.version : 0;\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: roster_version}));\n        });\n    });\n\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        this.resources.reset();\n        this.contacts.each(function (contact) {\n            contact.resources.reset();\n            contact.resetStatus();\n        });\n        this.cached_roster.getAllFromRoster((roster_items) => {\n            $(roster_items).each((idx, roster_item) => {\n                if (roster_item.jid === 'roster_version'){\n                    return;\n                }\n                this.contacts.mergeContact(roster_item);\n            });\n            if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                let options = {};\n                this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                    let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                    !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                    last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                    this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                    this.roster.getRoster();\n                });\n            }\n            else {\n                this.roster.getRoster();\n            }\n            this.blocklist.getFromServer();\n        });\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    this.roster.registerHandler();\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.roster_settings_view = xabber.settings_view.addChild(\n        'roster_settings', this.RosterSettingsView, {model: this._roster_settings});\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.roster_view = this.body.addChild('roster', this.RosterRightView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_contact_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id stanza_id archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id', this.get('origin_id') || this.get('stanza_id') || this.get('archived_id') || this.get('msgid'));\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    }\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.chat = options.chat;\n        this.account = options.account;\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = origin_id || options.stanza_id || archive_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = origin_id || options.stanza_id || archive_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched)\n            return message;\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`)\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        id: $file.children('gallery-id').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (this.chat && this.chat.item_view && !this.chat.item_view.content)\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if ((options.echo_msg || options.replaced) && message) {\n            message.set(attrs);\n            if (options.replaced)\n                return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.fckrkn202102.cyou:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n          });\n      },\n\n      createVideoStream: function () {\n          navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account, chat: this});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.retracted_msg_id_list = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        message.set('stanza_id', stanza_id);\n        if (!message.get('origin_id'))\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${stanza_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio')) {\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"jingle__system_message__no_devices_to_answer\")\n            });\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy();\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQFast(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.synced_msg){\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                $message.find('time').attr('stamp') && this.set('timestamp', $message.find('time').attr('stamp'));\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n            if (options.is_archived)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall();\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio('busy');\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else\n            return this.messages.createFromStanza($message, options);\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id);\n        if (message) {\n            if (options.searched_messages)\n                message.set('searched_message', false);\n            let stanza_id = message.get('stanza_id');\n            this.messages_view = new xabber.MessageContextView({\n                contact: this.contact,\n                mention_context: options.mention,\n                model: this,\n                stanza_id_context: stanza_id,\n                encrypted: options.encrypted\n            });\n            this.account.context_messages.add(message);\n            this.messages_view.messagesRequest({after: stanza_id}, () => {\n                let screen = 'all-chats';\n                if (options.mention)\n                    screen = 'mentions';\n                else if (options.message)\n                    screen = xabber.body.screen.get('name');\n                xabber.body.setScreen(screen, {\n                    right: 'message_context',\n                    model: this,\n                }, {\n                    right_contact_save: true\n                });\n            });\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                this.setMessagesDelivered(msg.get('timestamp'));\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DISPLAYED));\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg)\n                enc_chat.receiveCarbonsMarker($marker);\n            return;\n        }\n        if (msg_idx > -1) {\n            this.set('const_unread', 0);\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {id: (this.get('group_chat') && contact_stanza_id || stanza_id), xmlns: Strophe.NS.REWRITE, symmetric: symmetric, by: this.account.get('jid')});\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {id: user_id, xmlns: Strophe.NS.REWRITE, symmetric: true});\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {xmlns: Strophe.NS.REWRITE, symmetric: symmetric};\n        !is_group_chat && (retract_attrs.conversation = this.get('jid'));\n        this.get('encrypted') && (retract_attrs.type = 'encrypted');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if(chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if(chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 ){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n        this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        msg || (msg = this.model.last_message);\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=text-color-700/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        symmetric: false,\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || 0;\n          this._scrolltop = this.getScrollTop();\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0]);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || 0;\n          this._scrolltop = this.getScrollTop();\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max)\n                      this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.emptyChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\n  xabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if (this.model.sync_created && this.model.last_message){\n            this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n      render: function () {\n          this.cancelSearch();\n          this.scrollToBottom();\n          this.onScroll();\n          this.updateContactStatus();\n          this.updateWaveforms();\n          this.onUpdatePlyr();\n          if (this.contact) {\n              this.contact.get('group_chat') && this.updatePinnedMessage();\n              this.subscription_buttons.render();\n          }\n      },\n\n      openDevicesWindow: function () {\n          let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n          peer.fingerprints.open();\n      },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n      onTrustedChanged: function (message) {\n          let trusted = message.get('trusted'),\n              $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n          (trusted === null) && (trusted = 'none');\n          $message.attr('data-trust', trusted);\n      },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both'&& this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n            this.onScroll();\n            this.readMessages();\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat') && !this.contact.get('invitation')) {\n            if (active)\n                this.contact.sendPresent();\n            else\n                this.contact.sendNotPresent();\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                        image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                        image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            msg.set('is_unread', false);\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n                msg.set('is_unread', false);\n            }\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    onScrollY: function () {\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n    },\n\n    onScroll: function () {\n        if (!this.isVisible())\n            return;\n        this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        this._prev_scrolltop = this._scrolltop || 0;\n        this._scrolltop = this.getScrollTop();\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n    },\n\n    backToBottom: function () {\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE) && this.model.get('encrypted'))    {\n            iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_encrypted`})\n                .c('value').t(this.model.get('encrypted')).up().up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            console.log(iq)\n            console.log(conn)\n            console.log(conn.connected)\n            let connected_deferred = new $.Deferred();\n            connected_deferred.done(function() {\n                let handler = conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let callb = function (res) {\n                    console.log(iq);\n                    console.log(res);\n                    console.log(messages);\n                    conn.deleteHandler(handler);\n                    handler = null;\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    handler = null;\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n                account.once('send_pending_messages', () => {\n                    console.log('send_pending_archive_iq');\n                    console.log(iq);\n                    if (Boolean(handler)) {\n                        let pending_deferred = new $.Deferred();\n                        account.chats.onStartedMAMRequest(pending_deferred);\n                        conn.deleteHandler(handler);\n                        conn = is_fast && account.fast_connection ? account.fast_connection : account.connection;\n                        pending_deferred.done(function() {\n                            console.log('initiated pending archive iq');\n                            console.log(iq)\n                            console.log(conn)\n                            console.log(conn.connected)\n                            let connected_pending_deferred = new $.Deferred();\n                            connected_pending_deferred.done(function() {\n                                handler = conn.addHandler(function (message) {\n                                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                                        let $msg = $(message);\n                                        if ($msg.find('result').attr('queryid') === queryid) {\n                                            messages.push(message);\n                                        }\n                                    }\n                                    else {\n                                        messages = [];\n                                        success = false;\n                                    }\n                                    return true;\n                                }, Strophe.NS.MAM);\n                                if (is_fast)\n                                    account.sendFast(iq, callb, errb);\n                                else\n                                    account.sendIQ(iq, callb, errb);\n                            });\n                            if (conn.connected)\n                                connected_pending_deferred.resolve();\n                            else {\n                                let _pending_time = 1,\n                                _interval = setInterval(() => {\n                                    if (conn.connected || _pending_time >= 11){\n                                        clearInterval(_interval);\n                                        connected_pending_deferred.resolve();\n                                    }\n                                    _pending_time += 1;\n                                }, 1000);\n                            }\n                        });\n                    }\n                })\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            });\n            if (conn.connected)\n                connected_deferred.resolve();\n            else {\n                let _pending_time = 1,\n                _interval = setInterval(() => {\n                    if (conn.connected || _pending_time >= 11){\n                        clearInterval(_interval);\n                        connected_deferred.resolve();\n                    }\n                    _pending_time += 1;\n                }, 1000);\n            }\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n            this.MAMRequest(query, (success, messages, rsm) => {\n                    clearTimeout(this._load_history_timeout);\n                    this._loading_history = false;\n                    this.hideHistoryFeedback();\n                    if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                        this.getMessageArchive({after: rsm.last}, {missed_history: true});\n                    if (this.model.get('group_chat')) {\n                        if (this.contact && !this.contact.my_info)\n                            this.contact.getMyInfo();\n                    }\n                    else {\n                        if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                            this.contact.getLastSeen();\n                    }\n                    if ((messages.length < query.max) && success) {\n                        this.model.set('history_loaded', true);\n                    }\n                    if (options.previous_history || !this.model.get('first_archive_id')) {\n                        rsm.first && this.model.set('first_archive_id', rsm.first);\n                    }\n                    if (options.last_history || !this.model.get('last_archive_id')) {\n                        rsm.last && this.model.set('last_archive_id', rsm.last);\n                    }\n                    _.each(messages, function (message) {\n                        let loaded_message = account.chats.receiveChatMessage(message,\n                            _.extend({is_archived: true}, options)\n                        );\n                        if (loaded_message) counter++;\n                    });\n                    if (options.previous_history && !this.model.get('displayed_sent') && this.model.messages.length) {\n                        let last_msg = this.model.messages.models[this.model.messages.length - 1];\n                        if (last_msg)\n                            if (!last_msg.isSenderMe() && this.model.get('active') && this.model.get('display')) {\n                                this.model.sendMarker(last_msg.get('msgid'), 'displayed', last_msg.get('stanza_id'), last_msg.get('contact_stanza_id'));\n                                this.model.set('displayed_sent', true);\n                            }\n                    }\n                    if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                        this.getMessageArchive(_.extend(query, {\n                            max: xabber.settings.mam_messages_limit,\n                            before: this.model.get('first_archive_id') || ''\n                        }), {previous_history: true});\n                    }\n                }, (err) => {\n                    if (options.previous_history) {\n                        this._loading_history = false;\n                        this.showHistoryFeedback(true);\n                    }\n                }\n            );\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: this.model.get('first_archive_id') || '' },\n            {previous_history: true\n            });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    OGPLinkOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (this.isVisible()) {\n            if (is_scrolled_to_bottom || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (!(message.get('synced_from_server') || message.get('is_archived'))) {\n            if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                message.set('is_unread', !(this.model.get('display') && xabber.get('focused')));\n                if (!message.get('is_unread'))\n                    this.model.sendMarker(message.get('msgid'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n                if (!xabber.get('focused')) {\n                    if (this.model.get('saved') || this.model.isMuted())\n                        message.set('muted', true);\n                    else if (!message.get('synced_invitation_from_server'))\n                        this.notifyMessage(message);\n                }\n                this.model.setMessagesDisplayed(message.get('timestamp'));\n            }\n            if (this.contact && this.model.get('archived'))\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n                message.set('state', constants.MSG_DISPLAYED);\n            }\n        }\n\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n    },\n\n\n      decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom(),\n            unique_id = message.get('unique_id');\n          if (this.model.get('encrypted') || message.get('encrypted') || force) {\n              let images = message.get('images') || [];\n              if (images.length) {\n                  images.forEach((img) => {\n                      let source = img.sources[0];\n                      if (!img.key)\n                          return;\n                      this.model.messages.decryptFile(source, img.key).then((result) => {\n                          if (result === null)\n                              return;\n                          let $msg = [];\n                          if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                              $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${unique_id}\"] img[src=\"${source}\"]`);\n                          else\n                              $msg = this.$(`.chat-message[data-uniqueid=\"${unique_id}\"] img[src=\"${source}\"]`);\n                          if ($msg.length) {\n                              $msg[0].src = result;\n                              $msg[0].onload = () => {\n                                  if (!scrolled_from_bottom)\n                                      this.scrollToBottom();\n                                  else\n                                      this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                              };\n                              $msg.attr('data-mfp-src', result);\n                          }\n                      });\n                  });\n              }\n              let fwd_msgs = message.get('forwarded_message') || [];\n              fwd_msgs.forEach((fwd_msg) => {\n                  let fwd_images = fwd_msg.get('images') || [],\n                      fwd_unique_id = fwd_msg.get('unique_id');\n                  fwd_images.forEach((img) => {\n                      let source = img.sources[0];\n                      if (!img.key)\n                          return;\n                      this.model.messages.decryptFile(source, img.key).then((result) => {\n                          if (result === null)\n                              return;\n                          let $msg = this.$(`.chat-message[data-uniqueid=\"${unique_id}\"] .fwd-message[data-uniqueid=\"${fwd_unique_id}\"] img[src=\"${source}\"]`);\n                          if ($msg.length) {\n                              $msg[0].src = result;\n                              $msg[0].onload = () => {\n                                  if (!scrolled_from_bottom)\n                                      this.scrollToBottom();\n                                  else\n                                      this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                              };\n                              $msg.attr('data-mfp-src', result);\n                          }\n                      });\n                  });\n              });\n          }\n      },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else {\n            $message.insertAfter(this.$('.chat-message').eq(index - 1));\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0]);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0]);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);//переделать на выбор из всех\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('is_trusted'))\n            $message.attr('data-trust', attrs.is_trusted);\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])),];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n            this.OGPLinkOnload($message, message);\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video, idx) => {\n                        let video_el = this.createVideo(video, idx);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                    this.OGPLinkOnload($message, message);\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        return $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [],\n            msg_videos = message && message.get('videos') && message.get('videos').length ? message.get('videos') : null;\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.video_id = $(item).attr('data-msg-video-id');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                if (msg_videos && msg_videos.length && player.video_id >= 0) {\n                    let video_file = msg_videos[player.video_id];\n                    if (video_file.key){\n                        player.key = video_file.key;\n                        video_file.type && (player.type = video_file.type);\n                    }\n                }\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg);\n        }\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n      attentionMessage: function () {\n          let notification = xabber.popupNotification({\n              title: this.contact.get('name'),\n              text: xabber.getString(\"chats_attention\"),\n              icon: this.contact.cached_image.url\n          });\n          notification.onclick = () => {\n              window.focus();\n              this.model.trigger('open');\n          };\n          let sound = xabber.settings.sound_on_attention;\n          xabber.playAudio(sound);\n      },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file['id'] && stanza.c('gallery-id').t(file['id']).up();\n                file.thumbnail && stanza.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n      msgCallback: function (msg_sending_timestamp, message) {\n          this.bottom.click_counter = 0;\n          this.bottom.setDefaultPlaceholder();\n          if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n              setTimeout(() => {\n                  if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                      message.set('state', constants.MSG_SENT);\n                  } else {\n                      this.account.connection.ping.ping(this.account.get('jid'), () => {\n                          (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                      });\n                      setTimeout(() => {\n                          if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                              message.set('state', constants.MSG_ERROR);\n                      }, 5000);\n                  }\n              }, 1000);\n          }\n          else {\n              let _pending_time = 5, was_reconnecting;\n              if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                  was_reconnecting = true;\n              if (this.account.session.get('reconnecting'))\n                  was_reconnecting = true;\n              this.account.session.once('change:reconnecting', () => {\n                  console.log('change reconnecting');\n                  console.log(this.account.session.get('reconnecting'));\n                  was_reconnecting = true;\n              })\n              let _interval = setInterval(() => {\n                  console.log(was_reconnecting);\n                  if (_pending_time >= 10 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                      console.log('ping on message pending');\n                      this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                          console.log('message initiated reconnection');\n                          console.log(message);\n                          this.account.connection.disconnect();\n                      }, 5000);\n                  }\n                  if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                      message.set('state', constants.MSG_ERROR);\n                      clearInterval(_interval);\n                  }\n                  else if (message.get('state') !== constants.MSG_PENDING)\n                      clearInterval(_interval);\n                  _pending_time += 10;\n              }, 10000);\n          }\n      },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData();\n            formData.append('file', file, file.name);\n            if (file.duration)\n                formData.append('duration', file.duration);\n            if (file.voice)\n                formData.append('media_type', file.type + '+voice');\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.onload = xhr.onerror = xhr.onabort = function () {\n                if (this.status === 200) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = JSON.parse(this.response)\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            if (!is_error) {\n                                xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'))\n                                xhr_requests[files_count].is_uploading = true;\n                                xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                            }\n                        });\n                    }\n                } else {\n                    if (this.status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && this.status === 0){\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        let response_text;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (this.status === 500)\n                            response_text = this.statusText;\n                        else if (this.status === 400)\n                            response_text = JSON.parse(this.response).error;\n                        else if (this.status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (this.status === 0) && (message.get('files')[idx] = null);\n                        files_count++;\n                        if (this.status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    if (!is_error) {\n                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'))\n                                        xhr_requests[files_count].is_uploading = true;\n                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                    }\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    if (!is_error) {\n                        xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                        xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'))\n                        xhr_requests[0].is_uploading = true;\n                        xhr_requests[0].send(xhr_requests[0].formData);\n                    }\n                });\n            }\n        }\n\n    },\n\n      encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n      },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('videos', videos);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video, idx) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let video_attrs = {video_src: video.sources[0], thumbnail: video.thumbnail, video_id: idx},\n            $video_wrap_template = $(templates.messages.video(video_attrs));\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                this.bottom.setEditedMessageAttachments(message, true);\n                this.bottom.setRedactedUploadMessage(message);\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server');\n        if (is_unread && !is_synced) {\n            this.model.messages_unread.add(message);\n            this.model.recountUnread();\n        } else {\n            this.model.messages_unread.remove(message);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            link_references = msg.get('link_references'),\n            fwd_messages = [],\n            fwd_link_references = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n                message.get('link_references') && fwd_link_references.push(message.get('link_references'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(link_references).each(function(idx, link_reference) {\n            if (files_links != \"\")\n                files_links += '\\n';\n            files_links += link_reference.url;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        $(fwd_link_references).each(function (idx, message) {\n            $(message).each(function (i, link_reference) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += link_reference.url;\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            if (msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg);\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact.showDetails();\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            if (msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg);\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(), data, target;\n                if (paramValue.on_format){\n                    data = paramValue.data;\n                    target = paramValue.target;\n                } else {\n                    data = JSON.parse(paramValue);\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                }\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n\n            static formats(node) {\n                return {\n                    on_format: true,\n                    data: {\n                        nickname: node.innerHTML,\n                        is_me: node.classList.contains(\"ground-color-100\")\n                    },\n                    target: node.getAttribute('data-target')\n                };\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        class QuillEmoji extends Image {\n            static create(value) {\n                if (typeof value == 'string') {\n                    let emoji = $(value.emojify({tag_name: 'img'}))[0];\n                    emoji.style.display = 'none';\n                    emoji.onload = function () {\n                        this.style.display = 'unset';\n                    };\n                    return emoji;\n                } else {\n                    return value;\n                }\n            }\n\n            static value(domNode) {\n                return domNode;\n            }\n        }\n        QuillEmoji.blotName = 'emoji';\n        QuillEmoji.className = 'emoji';\n        QuillEmoji.tagName = 'img';\n        QuillEmoji.prototype.optimize = function () {};\n\n        Quill.register(QuillEmoji);\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n      let jid = this.account.get('jid'),\n          attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n          chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        chat.trigger('open', {clear_search: options.clear_search});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (pending_message) {\n                    let chat = this.account.chats.get(pending_message.chat_hash_id);\n                    chat && chat.setStanzaId(pending_message.unique_id, stanza_id);\n                    this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n                }\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == 'encrypted';\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            chat.retracted_msg_id_list.push(retracted_msg_id);\n            console.log(chat.retracted_msg_id_list);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (retract_version > this.account.retraction_version) {\n                if (chat.get('encrypted') && this.account.omemo)\n                    this.account.omemo.cacheRetractVersion(retract_version);\n                else\n                    this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        if ($message.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`).length) {\n            let code =  $message.find('confirm').attr('id');\n            if (($message.attr('from') == this.account.xabber_auth.api_jid) && ($message.attr('id') == this.account.xabber_auth.request_id)) {\n                this.account.verifyXabberAccount(code, (data) => {\n                    if (xabber.api_account && this.account.get('auto_login_xa')) {\n                        xabber.api_account.save('token', data);\n                        xabber.api_account.login_by_token();\n                    }\n                });\n            }\n            else {\n                return this.receiveChatMessage(message);\n            }\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            } else {\n                xabber.warn('Message from me to me');\n                xabber.warn(message);\n                return;\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n                if (contact.details_view && contact.details_view.isVisible())\n                    contact.trigger('update_participants');\n            }\n        }\n\n        if ($message.find('device[xmlns=\"' + Strophe.NS.AUTH_DEVICES + '\"]').length && !options.is_archived) {\n            this.account.getAllXTokens();\n        }\n\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n                let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.pushInRoster(null, () => {\n                    contact.pres('subscribe');\n                    contact.getMyInfo();\n                    this.close();\n                    xabber.chats_view.updateScreenAllChats();\n                    contact.sendPresent();\n                    contact.trigger(\"open_chat\", contact);\n                    if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                        let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                            .c('item', {jid: group_jid + '/' + moment.now()});\n                        this.account.sendIQFast(iq_set_blocking);\n                    }\n                });\n            }, () => {\n                this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item.unread').length);\n        if (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item.active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.setScreen(null, {chat_item: null, right: undefined},\n                    {silent: !xabber.body.isScreen('all-chats')});\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n        view.detach();\n        if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n            active_toolbar.click();\n        }\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view && (item.get('timestamp') || item.get('saved'))) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('all-chats') && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('account-item') && (view.model.get('saved') || (view.account.get('jid') === active_toolbar.attr('data-jid'))) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.account.get('jid') === (active_toolbar.attr('data-jid')) && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.account.get('jid') === (active_toolbar.attr('data-jid')) && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false)) {\n            view.model.set('display', true);\n            view.model.set('active', true);\n            xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded') && (view.model.messages.length < 20)) {\n                view.content.loadPreviousHistory();\n            }\n            if (!view.model.get('displayed_sent') && view.model.messages.length) {\n                let last_msg = view.model.messages.models[view.model.messages.length - 1];\n                if (last_msg)\n                    if (!last_msg.isSenderMe() && (view.model.get('unread') || view.model.get('const_unread'))) {\n                        view.model.sendMarker(last_msg.get('msgid'), 'displayed', last_msg.get('stanza_id'), last_msg.get('contact_stanza_id'));\n                        view.model.set('displayed_sent', true);\n                    }\n            }\n            if (xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            xabber.body.setScreen((options.screen || 'all-chats'), {\n                right: 'chat',\n                clear_search: options.clear_search,\n                chat_item: view,\n                blocked: view.model.get('blocked')\n            },{right_contact_save: options.right_contact_save} );\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        xabber.chats_view.scrollTo(scrolled_top);\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item').removeClass('active')\n            .filter('.all-chats').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap').html(\"\");\n        this.saved_chat = false;\n        xabber.chats_view.$('.chat-list-wrap .chat-item').each((idx, item) => {\n            let id = $(item).data('id'),\n                chat = this.account.chats.get(id);\n            if (chat) {\n                if (id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = $(item).clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap').append($(item).clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        $target.toggleClass('click-selected');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]));\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to])).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettings();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-contact-details\": \"showContactDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetails: function () {\n        this.contact.showDetails('all-chats');\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n            let img = new Image();\n            img.onload = () => {\n                onloaded_sprites++;\n                (onloaded_sprites === all_sprites) && $emoji_panel_wrap.find('.uploading-emoticons').detach();\n            };\n            img.src = './assets/images/emoji/spritesheet' + i++ + '.png';\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((is_contact_trusted) => {\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                if (!this.omemo_devices)\n                    this.omemo_devices = new xabber.Fingerprints({model: this.account.omemo});\n                this.omemo_devices.open();\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        (this.$el.hasClass('chat-bottom-blocked-wrap') && !$(ev.target).closest('.message-actions-panel').length) && this.contact.showDetails(xabber.body.screen.get('name'));\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        target.focus();\n        range.detach(); // optimization\n        target.scrollTop = target.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height(),\n            quill_textarea = $(this.quill.container).find('.rich-textarea'),\n            quill_current_height = quill_textarea.prop('scrollHeight');\n        if (quill_current_height !== this.text_input_height) {\n            if (this.text_input_height < quill_current_height){\n                quill_textarea.scrollTop(quill_current_height);\n            }\n            this.text_input_height = quill_current_height;\n        }\n\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n\n            }\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        ev.preventDefault();\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        if (clipboard_data) {\n            if (clipboard_data.files.length > 0) {\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                else {\n                    let text = _.escape(clipboard_data.getData('text')),\n                        arr_text = Array.from(text);\n                    arr_text.forEach((item, idx) => {\n                        if (item == '\\n')\n                            arr_text.splice(idx, 1, '</p><p>');\n                    });\n                    text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                    window.document.execCommand('insertHTML', false, text);\n                }\n            }\n            else {\n                let text = _.escape(clipboard_data.getData('text')),\n                    arr_text = Array.from(text);\n                arr_text.forEach((item, idx) => {\n                    if (item == '\\n')\n                        arr_text.splice(idx, 1, '</p><p>');\n                    if (item == ' ')\n                        arr_text.splice(idx, 1, '&nbsp');\n                });\n                text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                window.document.execCommand('insertHTML', false, text);\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted)\n        list = _.difference(list, this.currently_loaded_link_references)\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new MediaRecorder(stream),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                    mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob(chunks, { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks.push(e.data);\n                    stream.getTracks().forEach(track => track.stop() );\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertEmbed(caret_idx, 'emoji', emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    submit: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea();\n        this.$('.mentions-list').html(\"\").hide();\n        $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n            let emoji = emoji_item.innerText;\n            this.account.chat_settings.updateLastEmoji(emoji);\n        });\n        let content_concat = [];\n        if (text.length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            $rich_textarea.flushRichTextarea();\n            return;\n        }\n        if (text.length) {\n            this.quill.getContents().forEach((content) => {\n                if (content.attributes) {\n                    let content_attrs = [],\n                        start_idx = content_concat.length,\n                        end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                    for (let attr in content.attributes)\n                        (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                    if (content_attrs.indexOf('mention') > -1) {\n                        let mention_idx = content_attrs.indexOf('mention'),\n                            is_gc = this.contact.get('group_chat'),\n                            target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                        content_attrs.splice(mention_idx, mention_idx + 1);\n                        target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                        mentions.push({\n                            start: start_idx,\n                            end: end_idx,\n                            target: target,\n                            is_gc: is_gc\n                        });\n                    }\n                    if (content.attributes.blockquote) {\n                        if (content_concat.length) {\n                            Array.from(content.insert).forEach((ins) => {\n                                let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                    quote_end_idx = content_concat.length;\n                                blockquotes.push({\n                                    marker: constants.QUOTE_MARKER,\n                                    start: quote_start_idx,\n                                    end: quote_end_idx + constants.QUOTE_MARKER.length\n                                });\n                                text = Array.from(_.escape(text));\n\n                                if (quote_start_idx === quote_end_idx) {\n                                    text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                    content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                }\n                                else {\n                                    text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                    content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                }\n                                (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                text[quote_end_idx - 1] += '\\n';\n\n                                text = _.unescape(text.join(\"\"));\n                                content_concat = Array.from(content_concat.join(\"\"));\n\n                                markup_references.forEach((markup_ref) => {\n                                    if (markup_ref.start >= quote_start_idx) {\n                                        markup_ref.start += constants.QUOTE_MARKER.length;\n                                        markup_ref.end += constants.QUOTE_MARKER.length;\n                                    }\n                                });\n\n                                content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                            })\n                        }\n                    }\n                    content_attrs.length && markup_references.push({\n                        start: start_idx,\n                        end: end_idx,\n                        markup: content_attrs\n                    });\n                }\n                if (content.insert && content.insert.emoji) {\n                    content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                }\n                else if (content.attributes && content.attributes.blockquote) {\n                }\n                else\n                    content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n            });\n        }\n        let start_length = text.length;\n        text = text.trimStart();\n        if (start_length > text.length) {\n            let delta = start_length - text.length;\n            mentions.forEach((mention) => {\n                mention.start -= delta;\n                mention.end -= delta;\n            });\n            markup_references.forEach((markup_reference) => {\n                markup_reference.start -= delta;\n                markup_reference.end -= delta;\n            });\n            blockquotes.forEach((blockquote) => {\n                blockquote.start -= delta;\n                blockquote.end -= delta;\n            });\n        }\n        if (link_references && link_references.length) {\n            link_references = link_references.filter(item => item.original_text);\n            link_references.forEach((link_reference) => {\n                if (link_reference && link_reference.original_text) {\n                    link_reference.start = text.indexOf(link_reference.original_text);\n                    if (link_reference.start != -1) {\n                        link_reference.start = 0;\n                        link_reference.end = 0;\n                    }\n                }\n            });\n        }\n        this.removeAllLinkReferences();\n        this.link_reference_exempted = [];\n        this.removeAllFileSnippets();\n        text = text.trimEnd();\n        $rich_textarea.flushRichTextarea();\n        this.quill.focus();\n        this.displayMicrophone();\n        if (this.edit_message) {\n            this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            $rich_textarea.placeCaretAtEnd();\n            return;\n        }\n        if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n            if (this.model.get('saved') && this.fwd_messages.length && !text)\n                this.fwd_messages.forEach((message) => {\n                    this.view.onSubmit(\"\", [message]);\n                });\n            else\n                this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n        }\n        this.unsetForwardedMessages();\n        xabber.chats_view.clearSearch();\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n        $rich_textarea.placeCaretAtEnd();\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content'),\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {xmlns: Strophe.NS.REWRITE, id: stanza_id}),\n            $message = $build('message').attrs({xmlns: undefined});\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file['id'] && $message.c('gallery-id').t(file['id']).up();\n                file.thumbnail && $message.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message]);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, decrypted_msg);\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && my_msgs == $msgs.length && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.sendPresence();\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            this.roster && this.roster.syncFromServer({stamp: last_msg_timestamp * 1000}, false, true);\n            this.roster && this.roster.getRoster();\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.readMessages();\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function () {\n        this.chats_view.showAllChats();\n    }, this);\n\n    this.on(\"show_account_chats\", function (ev, account) {\n        this.chats_view.showChatsByAccount(account);\n    }, this);\n\n    this.on(\"show_archive_chats\", function () {\n        this.chats_view.showArchiveChats();\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromSever(jid);\n            }\n        });\n    },\n\n    getChatsFromSever: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n            contact.sendPresent();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n            if (attrs.name === 'all-chats' && attrs.right === 'contact_details')\n                attrs.contact.trigger('open_chat', attrs.contact);\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (!window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        if (this.roster_view.isVisible()) {\n            this.updateRosterLayout(options);\n        }\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateRosterLayout = function (options) {\n        let width = this.body.$el.width(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM,\n            is_tiny = width < constants.WIDTH_TINY,\n            expanded = this.roster_view.data.get('expanded'),\n            pinned = this.roster_view.data.get('pinned');\n        this.roster_view.$('.collapsed-wrap').hideIf(expanded);\n        this.roster_view.$('.expanded-wrap').showIf(expanded);\n        this.roster_view.$('.btn-pin').hide();\n        if (is_narrow && pinned) {\n            this.roster_view.data.set({expanded: false, pinned: false});\n            return;\n        }\n        let roster_width,\n            panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 50,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow || pinned)) {\n            panel_width = 1536;\n            roster_width = 300;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n            roster_width = 250;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n            roster_width = (width - toolbar_width - 20) * 2 / 9;\n        }\n        if (!expanded) {\n            roster_width = is_wide ? 48 : 44;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        let panel_gap = (width - panel_width) / 2,\n            left_gap = panel_gap - toolbar_width,\n            right_gap = panel_gap - roster_width;\n        this.roster_view.$('.expanded-wrap').switchClass('solid',\n                (!pinned && (!is_wide || right_gap < 0)));\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.roster_view.setCustomCss({width: roster_width});\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { settings: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_left = new this.ViewPath('account.settings_left'),\n        path_acc_settings_right = new this.ViewPath('account.settings_right'),\n        path_acc_vcard_edit = new this.ViewPath('account.vcard_edit');\n\n    this.body.addScreen('account_settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: {\n                account_settings: {\n                    left: path_acc_settings_left,\n                    right: path_acc_settings_right\n                }\n            },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.account_settings.patchTree = function (tree, options) {\n        if (options.right === 'vcard_edit') {\n            return {\n                left: path_acc_settings_left,\n                right: path_acc_vcard_edit\n            };\n        }\n    };\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details = new this.ViewPath('contact.details_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.right === 'contact_details') {\n            return { details: path_contact_details };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (this.api_account) {\n        this.api_account.once(\"settings_result\", function (result) {\n            if (result === null && !this.accounts.length) {\n                this.body.setScreen('login');\n            } else if (this.body.isScreen('blank')) {\n                this.body.setScreen('all-chats');\n            }\n        }, this);\n\n        this.api_account.ready.then(this.api_account.start.bind(this.api_account));\n    } else {\n        if (!this.accounts.length)\n            this.body.setScreen('login');\n        else if (this.body.isScreen('blank'))\n            this.body.setScreen('all-chats');\n        xabber.trigger(\"bind_xmpp_accounts\");\n    }\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_error'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                let f_count = this.$('div.fingerprints-content').find('div.row').length;\n                if (!f_count)\n                    this.$('div.fingerprints-content').html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                this.jid == this.account.get('jid') && f_count++;\n                this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle();\n           this.set('resend_bundle', false);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey)\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            throw e;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on('device_published', this.publishBundle, this);\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device || device && (device.label || this.account.settings.get('device_label_text')) && device.label != this.account.settings.get('device_label_text')) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    omemo.publishDevice(device_id, label, () => {\n                        this.account.trigger('device_published');\n                    });\n                }\n                else\n                    this.account.trigger('device_published');\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device || device && (device.label || this.account.settings.get('device_label_text')) && device.label != this.account.settings.get('device_label_text')) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        omemo.publishDevice(device_id, label, () => {\n                            this.account.trigger('device_published');\n                        });\n                    }\n                    else\n                        this.account.trigger('device_published');\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, plaintext);\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied)\n                return;\n\n            if (cached_msg) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                        if (options.gallery && deferred)\n                            deferred.resolve($message);\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch((e) => {\n                    if (e.name === 'MessageCounterError')//for capturing double decryption of same message\n                        return;\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust);\n                resolve(trust);\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                else\n                                    is_trusted = null;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey;\n        try {\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        }\n        catch (e) {\n            throw e;\n        }\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            });\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n        if (bundle.preKeys.length && bundle.preKeys.length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - bundle.preKeys.length,\n                last_id = _.sortBy(xabber.accounts.connected[0].omemo.bundle.preKeys, 'keyId').last().keyId;\n            for (let i = ++last_id; last_id + missing_keys; i++)\n                await this.bundle.generatePreKey(i);\n            this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function () {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            return;\n        }\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, () => {\n                this.publish(spk, ik.pubKey, pks);\n            }, (err) => {\n                if (($(err).find('error').attr('code') == 404))\n                    this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                        this.publish(spk, ik.pubKey, pks);\n                    });\n            });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item.html\": 86348,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item.html\": 98078,\n\t\"./accounts/media_gallery_account.html\": 1161,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/settings_left.html\": 35626,\n\t\"./accounts/settings_right.html\": 34987,\n\t\"./accounts/token_item.html\": 52509,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./api_service/add_xabber_account.html\": 64805,\n\t\"./api_service/linked_email_item.html\": 5398,\n\t\"./api_service/sync_settings.html\": 48881,\n\t\"./api_service/sync_settings_account_item.html\": 28522,\n\t\"./api_service/xabber_account.html\": 29674,\n\t\"./api_service/xabber_login.html\": 48755,\n\t\"./api_service/xabber_login_by_email.html\": 24864,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/settings.html\": 15887,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details.html\": 62859,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit.html\": 11803,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","var map = {\n\t\"./accounts/emojis.txt\": 13034\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 62037;","let client_translation_progress = {\"en\":100,\"ar\":27,\"az\":2,\"be\":13,\"bg\":65,\"bs\":0,\"ca\":25,\"cs\":99,\"cy\":0,\"da\":0,\"de\":49,\"el\":29,\"es-ES\":34,\"es-latin\":7,\"et\":0,\"fa\":4,\"fi\":9,\"fil\":14,\"fr\":35,\"ga-IE\":0,\"he\":21,\"hi\":0,\"hr\":0,\"hu\":14,\"hy-AM\":8,\"id\":67,\"is\":0,\"it\":72,\"ja\":20,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":4,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":21,\"ne-NP\":0,\"nl\":20,\"no\":0,\"oc\":13,\"pa-IN\":0,\"pl\":66,\"pt-BR\":71,\"pt-PT\":15,\"qya-AA\":0,\"ro\":16,\"ru\":69,\"sat\":1,\"sco\":0,\"si-LK\":37,\"sk\":20,\"sl\":28,\"sq\":3,\"sr\":13,\"sr-Cyrl-ME\":0,\"sv-SE\":38,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":66,\"uk\":27,\"uz\":0,\"vi\":13,\"yo\":0,\"zh-CN\":38,\"zh-TW\":11,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.3.36\",\"version_description\":\"fixed wrong unread msg counter for encrypted chats, fixed double decryption of same message error\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(10019)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","constants","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","url","credential","username","urls","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SOUNDS","beep_up","tiny_noize","retro_game","pixel_beep","beep_positive","good_chime","cellular_click","bleep","mono_u","plop","ether","pop","computer_chime","beep_a","call","connecting","busy","attention","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","API_SERVICE_URL","USE_SOCIAL_AUTH","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","CLIENT_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","xabber_i18next","xabber_i18next_sprintf","sha256","magnificPopup","Strophe","evaluate","interpolate","templates","insertSvg","html","$html","find","each","$el","this","svg_name","data","removeClass","addClass","attr","svg","_addTemplate","name","options","path","split","tpl","join","default","tpl_name","res","is_svg","addTemplate","addSvgTemplate","addJSONTemplate","raw_data","code","x","y","getEmoji","offset","lead","trail","emoji_data","item","emoji","push","emoji_regexp","prototype","emojify","sprite","tag_name","emoji_size","href","title","replace","emoji_code","Number","toString","length","repeat","removeEmoji","replaceEmoji","selector","text","all","get","getByIndex","idx","hasher","_image_cache","COLORS","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","window","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","resolve","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","file_name","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","id","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","value","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","ok_button","cancel_button","optional_buttons","reverse","inverted_buttons","img_details","append","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","e","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","forEach","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","replaceAll","RegExp","utils","uuid","c","r","random","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","getDomainFromUrl","a","test","hostname","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","includes","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_name","substr","toLowerCase","getKeyByValue","object","Object","keys","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","clientHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","client_translation_progress","bc","BroadcastChannel","onmessage","event","disabled_client","postMessage","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","client_name","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","_settings","Settings","storage_name","getStorageName","fetch","settings","location","host","pathname","_cache","ModelWithStorage","cache","save","cacheFavicons","extendFunction","check_config","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","lang","language","loadTranslations","Promise","reject","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","msg","console","warn","log","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","notifications","notifications_private","notifications_group","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","hotkeys","avatar_shape","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","ping_interval","reconnect_interval","configure","config","pick","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","isArray","ios_msg","android_msg","any_mobile_msg","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","extendWith","reduce","instance","module","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollTop","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","tree","patchTree","has","className","new_view","events","keyUpOnSearch","stopPropagation","ids","map","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","offsetTop","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","account","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","NS","MAM","DATAFORM","up","cnode","RSM","toXML","handler","connection","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","unbind","new_attrs","stamp","uniqueId","isScreen","right","right_contact","changed","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","showAllChats","closest","is_active","showChats","showGroupChats","showArchive","showChatsByAccount","right_contact_save","showSearch","showContacts","showMentions","showSettings","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","showAbout","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","top","left","setFullScreen","local_video","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","cancelFullScreen","exitFullscreen","fullscreenElement","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","dfd","provider","updateColorScheme","player_item","message_unique_id","video_sources","video_src","source","sources","once","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","decryptFile","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","content","renderVoiceMessage","toggleMute","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","updateSidePanelSetting","belowOrigin","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","side_panel_settings","transparency_switched","cid","jumpToBlock","$tab","$elem","setNotifications","$target","requestPermission","setPrivateNotifications","setGroupNotifications","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setPrivateSound","current_sound","pause","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","setSidePanelTheme","setSidePanelBlur","changeBackgroundImage","openColorPicker","colorPicker","openMainColorPicker","mainColorPicker","changeBlur","switchTransparency","is_switched","changeNotificationsVolume","volume","sound","changeTransparency","changeVignetting","switchVignetting","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","progress","progress_text","platform_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","request","dataType","success","onGetPatternsCallback","onGetImagesCallback","ajax","img","thumbnail","$img","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","screen_name","updateScreen","$active_screen","non_active","current_count","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","headers","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","$icon","favicon","favicon_message","stopBlinkingFavicon","clearInterval","resetMessageCounter","onChangedFocusState","popupNotification","notification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","innerWidth","innerHeight","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_view","SettingsView","api_service","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","create_from_server","settings_item","create","token","sync_all","_attrs","settings_list","connected","sync_request","fcm_subscribe","fcm_unsubscribe","from_token","action","synchronize_main_settings","synchronize_order_settings","get_settings","social_auth","social_login","login_by_token","_call_method","method","context","textStatus","jqXHR","errorThrown","onAPIError","stringify","add_source","account_status","onUserData","onSettings","onSettingsFailed","delete_settings","where","settings_data","order_timestamp","order","order_data","fetch_from_server","deleted_list","order_list","order_map","max_order","order_item","response","responseJSON","reason","_login","credentials","password","login","onLogin","onLoginFailed","onLoginByToken","onLoginByTokenFailed","onSocialLogin","onSocialLoginFailed","revoke_token","storage","clear","xmpp_binding_jid","xmpp_binding","full_id","linked_email_list","email_list","linked_social","social_bindings","logout","delete_accounts","endpoint_key","$username_input","$password_input","onChangeAuthenticationState","onRender","authFeedback","updateTextFields","submit","errorFeedback","authentication","onChangeConnected","successFeedback","socialAuth","origin","xabber_login_by_email","auth","xabber_login","changeLoginType","openXmppLoginPanel","add_xabber_account","renderAccountItem","bindAccount","add_contact_account_item","selectAccount","loginXabberAccount","authXabberAccount","sync_settings","to_sync_map","accounts_map","deleted_map","settings_map","deleted_item","sync_way","sync_choose","acc1","acc2","addAccountHtml","updateSyncOptions","$account_el","sync_settings_account_item","updateAccountHtml","account_wrap","$account_wrap","account_item","mdiclass","$sync_icon","changeSyncAll","changeSyncOne","changeSyncWay","syncSettings","do_sync","xabber_account","updateForConnectedStatus","default_color","updateLastSyncInfo","updateSocialBindings","updateSyncButton","updateExpanded","changeExpanded","expanded","linked_emails","$social_item","email","email_id","email_address","is_verified","verified","linked_email_item","social","social_provider","social_name","linkSocial","mail","mail_data","openAccount","verifyEmail","unlinkSocial","$social_html","deleted_mail_index","splice","social_list","deleted_social_index","sync","last_sync","time_delta","fromNow","synchronize","onPasswordResetFailed","setPassword","verified_email","account_settings_list","AccountSettingsList","AccountsOrderTimestamp","api_account","APIAccount","xabber_login_panel","XabberLoginPanel","APIAccountView","add_api_account_view","AddAPIAccountView","email_auth_view","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","req","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","_submit_cb","error_text","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","server_features","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","changePlaceholder","nickname_placeholder","setVCard","$pres","Images","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","getLastOrder","deleteAccount","photo_hash","session","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","xml","isOnline","getPassword","isConnected","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","verifyXabberAccount","createFastConnection","token_invalidated","fast_conn_manager","disconnect","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","is_fast","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onConnectionConflict","CONNECTED","onTokenRevoked","onAuthFailed","DISCONNECTED","flush","connectXabberAccount","iq_private_storage","PRIVATE_STORAGE","requestPassword","api_jid","request_id","verifying_code","verifying_mess","idx_verifying_code","iq_send_auth_mark","msg_attrs","from_jid","is_archived","createMessageFromIQ","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","settings_right","account_password_view","old_password","change_password_connection","change_password_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","last_auth","ip_address","ip","x_tokens_list","updateXTokens","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","omemo","getRetractVersion","retractions_query","Builder","is_msg","b","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","deactivate","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","activate","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","block_name","has_settings_right","settings_left","revokeXToken","token_num","revokeAllXTokens","show_settings","show_settings_after_delete","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","gallery_feature","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","onloadend","b64","testFile","getStorageStats","uploadFile","formData","FormData","voice","processData","deleteFile","file_id","getOpenGraphData","site","ogp","image_height","image_width","video_url","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","models","getEnabledList","getConnectedList","onAdd","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","ns","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","showEditView","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","tabs","filterType","sorting","order_by","getAvatars","onTabClick","sortFiles","sort_type","onClickFile","prev_audio_message","file_url","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","container","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","load","assign","obj_per_page","current_rendered_type","renderFiles","total_objects","tab","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","deleteFilesFiltered","days","date","setDate","getDate","toISOString","date_lte","openStoragePanel","status_field","updateBlocks","updateGallery","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","gallery_view","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateEnabledOmemo","updateEncryptedChatstates","dropdown_settings","showResources","resource_id","hideResources","renderAllXTokens","sortBy","pretty_token","findWhere","toJSON","$cur_token_html","current_token_item","$token_html","token_item","has_keys","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","own_devices","ik","fingerprint","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","openBlockWindow","block","blockContact","unblockSelected","blocklist","deselectBlocked","global_settings_item","onDragTo","onMoveAccount","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","current_items","current_file","addAvatar","img_from_gallery","createFileFromURL","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","stop","getUserMedia","stream","takePicture","clearPhoto","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","pickEmoji","change_password","is_login","getActionName","$old_password_input","$password_confirm_input","password_confirm","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","xmpp_login_panel","XmppLoginPanel","account_settings","acc_settings_left","Container","acc_settings_right","Accounts","ToolbarAccountsBlockView","SettingsAccountsBlockView","add_account_view","AddAccountView","onbeforeunload","login_screen","supports","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","GEOLOC","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","deleteTimedHandler","_ping_handler","addTimedHandler","downtime","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_fast_ping_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","groups","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","chat_settings","b64_sha1","updateCachedInfo","is_deleted","out_request","status_text","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","sendPresent","_sending_present_interval","sendNotPresent","handlePresence","$group_chat_info","updateGroupChatsList","details_view","group_chat_info","parseGroupInfo","prev_group_info","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","$msg","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","references","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","created_at","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","concat","user_info","chat_content","is_scrolled","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details","name_field","resources_view","edit_groups_view","updateJingleButtons","updateSubscriptions","setButtonsWidth","widths","button","is_blocked","is_server","showQRCode","qrcode","VanillaQR","noBorder","domElement","$label_outcoming","$label_incoming","prev","onChangedSubscription","openChat","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","changeNotifications","muteChat","addContact","requestAuthorization","contact_details_right","contact_edit_view","updateNotifications","updateChilds","updateIndicator","keydownHandler","hideEdit","isOpen","scrollToTopSmooth","animate","bottom_block_scroll","showEdit","muted_seconds","mute_type","unmuteChat","$search_form","changeList","list_name","scrollLeft","addList","_render","constructor_func","group_chat_details","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit","is_owner","change_group","editProperties","editDefaultRestrictions","leaveGroupChat","inviteUser","getInvitations","deleteGroup","group_chat_details_right","default_restrictions_edit_right","hideRestrictions","showRestrictions","clearHistory","head","edit_view","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","err_text","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","participant","temporary_items","all_messages_loaded","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","updateForParticipant","delegateEvents","filter_type","filterEncryptedFiles","encryptedFilesHandler","files_count","updateEncryptedMedia","is_loaded","true_voice","media_item","media_items_empty","messages_count","msg_items","fail","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","groupchat_settings","resetParticipantsList","resetParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","badge","is_me","pretty_present","present","isValid","group_member_item","prependTo","updateMemberAvatar","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateNickname","updateRightsView","getMessages","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","removeParticipantFromList","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","participant_info","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","args","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","groups_settings","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","add","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","onSyncIQ","last_version_sync","syncCachedConversations","conv_list","request_with_stamp","syncConversation","conversation","parseXML","saved","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","retracted_msg_id_list","putInCachedConversations","account_conversation_type","updateEncryptedChat","updateMutedList","removeFromCachedConversations","$jingle_message","getCallingAvailability","sendReject","initIncomingCall","updateEmptyChat","is_unread","delay","messages_unread","isSenderMe","last_message","is_last_sync","sync_timestamp","sync_rsm_after","last_chat_msg_id","encrypted_retract_version","retract_version","conversations_loaded","last_sync_timestamp","getAllFromCachedConversations","synced_conversations","getRoster","request_ver","getAllFromRoster","roster_items","ver","new_roster_version","onRosterItem","is_version","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","hideTabs","selectUnblock","updateUnblockButton","unblockContactByJid","tab_name","hideEmptyContainers","tmp","contact_blocked_item","$domain_wrap","$desc","blocked_list","reg","blocked_contacts_desc","blocked_domains_desc","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_right","updateTheme","updateTransparency","updateLayout","pinned","expand","collaps","roster_state_changed","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","add_contact","group_data","updateGroups","renderGroupsForAccount","stepForward","silent","groups_checkbox_list_contact","checkJid","custom_notifications","message_preview","clearStorage","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clearDataBase","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","Boolean","_roster_settings","RosterSettings","roster_settings_view","RosterSettingsView","contacts_view","RosterLeftView","RosterRightView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","forwarded_message","getState","getVerboseState","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","participant_message","echo_msg","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","recountUnread","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","receiveNoTextMessage","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","sendMarker","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","$delivery_msg","msg_id","by","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","undelivered_messages","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","removeMessage","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","getConversationType","SYNCHRONIZATION_REGULAR_CHAT","message_counter","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","italics","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","bottom","click_counter","setDefaultPlaceholder","onChatRemoved","wheelPropagation","loading_history","history_loaded","first_msg_id","last_msg_id","_scrolltop","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","_prev_scrolltop","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","timer","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","onChangedReadState","onChangedActiveStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMyInfo","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","showDayIndicator","indicator_idx","opacity_value","$chatday_indicator","$messages","indicator","is_saved","connected_deferred","pending_deferred","connected_pending_deferred","_pending_time","_interval","getMessageArchive","previous_history","_load_history_timeout","last_history","last_msg","last_archive_id","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","OGPLinkOnload","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","fwd_images","fwd_unique_id","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","current_time","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","main","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","day_date","msg_players","msg_videos","existing_player","message_id","video_id","video_file","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","setRequestHeader","response_text","statusText","files_","file_new_format","imgContent","video_attrs","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","onTouchMessage","fwd_link_references","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","on_format","classList","blotName","optimize","QuillEmoji","domNode","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","participant_version","msg_item","active_right_screen","participant_msg_item","is_encrypted","$retracted_msg","retracted_msg_id","cacheRetractVersion","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","not_encrypted","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","showPlaceholder","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","group_chats_pinned","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","all_chats","all_chats_pinned","message_item","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","addUser","itemIdx","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetails","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","metadata","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","onloaded_sprites","all_sprites","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","checkContactFingerprints","is_contact_trusted","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","quill_textarea","quill_current_height","text_input_height","bottom_height","scrolled_to_bottom","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","arr_text","execCommand","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","MediaRecorder","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","emoji_item","innerText","content_concat","getContents","content_attrs","insert","mention_idx","ins","quote_start_idx","quote_end_idx","marker","markup_ref","start_length","delta","markup_reference","editMessage","setText","msg_author","image_preview","$img_html_preview","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","cached_messages","putMessage","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","updateHeight","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","_get_msg_handler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateRosterLayout","is_wide","is_narrow","roster_width","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","right_contact_panel_styles","right_contact_panel_saveable","panel_gap","right_gap","wide","placeholders","path_acc_settings_left","ViewPath","path_acc_settings_right","path_acc_vcard_edit","path_chat_head","path_chat_body","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","store","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderOwnDevices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","devices_count","$container","f_count","generateFingerprint","fing","old_fingerprint","addRow","getBundleInfo","getBundle","pk","spk","getIdentityKeyPair","pubKey","padStart","trustDevice","is_session_initiated","ignoreDevice","trust","delete_button","edit_setting","fingerprint_item","deleteDevice","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","dev_id","rand","peer","encryptedMessage","encryptedElement","myKeys","rid","kex","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","cached_msg","getMessage","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","missing_keys","last_id","rec","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","Error","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","discovery","ui","g","webpackContext","webpackContextResolve","__webpack_require__","o","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}