{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,muZ,6DCAA,oR,6DCAA,25D,6DCAA,igC,6DCAA,upE,6DCAA,81B,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,8uB,6DCAA,uoH,6DCAA,w9E,6DCAA,k6B,2DCAA,o2B,6DCAA,6vK,6DCAA,22jB,6DCAA,+rB,6DCAA,6gB,6DCAA,0sC,6DCAA,m7lB,6DCAA,4mG,4DCAA,qjC,6DCAA,wkC,6DCAA,kmB,6DCAA,8jI,6DCAA,ooE,6DCAA,k7B,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,s9E,6DCAA,0pE,4DCAA,w9B,6DCAA,ue,6DCAA,4a,6DCAA,o2E,6DCAA,we,6DCAA,quC,6DCAA,o7pD,6DCAA,yyI,6DCAA,uS,6DCAA,qpO,6DCAA,k6C,4DCAA,6hD,6DCAA,8H,6DCAA,orO,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,24B,6DCAA,ijM,4DCAA,2+B,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,28E,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,wkE,6DCAA,6e,6DCAA,0J,6DCAA,0sE,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,woB,6DCAA,iE,6DCAA,0yG,6DCAA,ghE,6DCAA,2hB,6DCAA,8H,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,8U,6DCAA,iR,6DCAA,ujI,6DCAA,6xO,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,o/V,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,07R,6DCAA,q4F,6DCAA,qoG,6DCAA,0tK,6DCAA,+wD,6DCAA,qxE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,qkB,6DCAA,8iB,6DCAA,q1I,6DCAA,0jO,4DCAA,+sF,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,i9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,kT,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,gsD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,wwB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,49B,6DCAA,4iC,6DCAA,yiC,6DCAA,q/B,6DCAA,i5B,6DCAA,mrC,6DCAA,ksC,6DCAA,m+B,6DCAA,0rC,6DCAA,kpD,6DCAA,4/B,4DCAA,u8B,6DCAA,4qC,6DCAA,oqC,6DCAA,q5B,6DCAA,olB,6DCAA,qsB,6DCAA,2mB,6DCAA,oxC,6DCAA,85B,6DCAA,onB,6DCAA,6gC,6DCAA,6oC,6DCAA,i4B,6DCAA,2xB,6DCAA,6sB,6DCAA,giC,4DCAA,6vB,6DCAA,osB,6DCAA,qiC,6DCAA,k7B,6DCAA,6xB,6DCAA,yqB,6DCAA,2sB,4DCAA,gqB,6DCAA,svB,4DCAA,6yC,6DCAA,y5B,6DCAA,uyB,6DCAA,szB,6DCAA,mpB,6DCAA,qlC,6DCAA,siC,6DCAA,2kD,6DCAA,q0B,6DCAA,o7E,6DCAA,gkC,6DCAA,m6B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,s/B,6DCAA,osB,4DCAA,otD,6DCAA,s5B,6DCAA,0rC,6DCAA,i8B,6DCAA,k4B,6DCAA,kjC,6DCAA,y6B,4DCAA,g7C,4DCAA,mvB,6DCAA,svB,6DCAA,siB,6DCAA,yqB,6DCAA,i4C,6DCAA,+jB,6DCAA,izB,6DCAA,k/B,6DCAA,yyB,6DCAA,i/B,4DCAA,q8B,6DCAA,4hB,6DCAA,w7B,6DCAA,ymC,6DCAA,qsB,6DCAA,gxB,6DCAA,ioB,6DCAA,6xL,6DC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E,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IACtkF,mBAAsB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACp7E,kBAAqB,CAAC,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KA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ACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACpqD,QAAW,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,IAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EA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cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,IACA,KAED,UAAW,CACV,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,KACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,oBAAqB,CACpB,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MA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","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/settings_left.html","webpack://xabber.web/./templates/accounts/settings_right.html","webpack://xabber.web/./templates/accounts/token_item.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/api_service/add_xabber_account.html","webpack://xabber.web/./templates/api_service/linked_email_item.html","webpack://xabber.web/./templates/api_service/sync_settings.html","webpack://xabber.web/./templates/api_service/sync_settings_account_item.html","webpack://xabber.web/./templates/api_service/xabber_account.html","webpack://xabber.web/./templates/api_service/xabber_login.html","webpack://xabber.web/./templates/api_service/xabber_login_by_email.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_devices_item.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/fingerprints_devices.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_content_placeholder.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/chats/unread_marker.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/device-cellphone.html","webpack://xabber.web/./templates/svg/device-console.html","webpack://xabber.web/./templates/svg/device-desktop.html","webpack://xabber.web/./templates/svg/device-tablet.html","webpack://xabber.web/./templates/svg/device-web.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/./templates/ sync ^\\.\\/.*\\.json$","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"client one-line\\\">{{client}}</div>\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n    </div>\\n    <div class=\\\"last-auth text-color-700\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    <div class=\\\"device-encryption one-line {[if (is_omemo) {]} active is-own text-color-green-500{[}]}\\\">\\n        <i class=\\\"mdi mdi-lock mdi-14px{[if (!is_omemo) {]} hidden{[}]}\\\"></i>\\n        <span>\\n            {[if (is_omemo) {]}\\n                {[print(xabber.getString(\\\"settings_account__omemo_enabled\\\"))]}\\n            {[} else {]}\\n                {[print(xabber.getString(\\\"settings_account__omemo_not_enabled\\\"))]}\\n            {[}]}\\n        </span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"move-account-to-this droppable\\\"></div>\\n<div class=\\\"account-info-wrap\\\">\\n    <i class=\\\"drag-item drag-handle mdi mdi-28px mdi-drag-vertical\\\"></i>\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid text-color-700 one-line\\\"></div>\\n        </div>\\n        <div class=\\\"conn-status one-line\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"sync-marker-wrap hidden\\\">\\n    <i class=\\\"sync-marker mdi mdi-20px mdi-cloud-check\\\"></i>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n        <div class=\\\"storage-usages\\\">\\n            <div class=\\\"storage-category-usage storage-usage-images\\\">\\n                {[print(xabber.getString(\\\"images\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-videos\\\">\\n                {[print(xabber.getString(\\\"videos\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-voices\\\">\\n                {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-files\\\">\\n                {[print(xabber.getString(\\\"files\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <ul class=\\\"tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        <li data-value=\\\"avatars\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"list-managment-wrap\\\">\\n        <button class=\\\"btn-sorting dropdown-button btn-flat btn-main text-color-700 hover-ground-color-300\\\" data-activates=\\\"storage-file-sorting\\\">\\n            {[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}\\n        </button>\\n    </div>\\n    <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n        </div>\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n        </div>\\n    </ul>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'; this.onerror = null;\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{file.created_at}}</span>\\n        </div>\\n        {[if (duration && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"    <div class=\\\"left-column ground-color-900 noselect\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                        <img/>\\n                        <input type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name\\\"></div>\\n            </div>\\n            <div class=\\\"status-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"connection\\\">\\n                <i class=\\\"mdi mdi-24px mdi-settings\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_connection_settings\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"vcard_edit\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-box\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"color-scheme\\\">\\n                <i class=\\\"mdi mdi-24px mdi-palette\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"color\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                <i class=\\\"mdi mdi-24px mdi-chart-arc\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"blocklist-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"blocked_contacts\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"groups-info\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"server-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-information\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_server_info\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab omemo-info\\\" data-block-name=\\\"tokens\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_settings_devices_and_encryption\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap ground-color-900\\\">\\n            <div class=\\\"settings-tab delete-account\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <div class=\\\"buttons-wrap\\\">\\n            <button class=\\\"btn-block btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"settings_account__blocklist__button_block\\\"))]}</button>\\n            <button class=\\\"btn-deselect-blocked btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n        </div>\\n        <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-manage-devices\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-purge-keys\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files-variants\\\" data-activates=\\\"storage-delete-files\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_delete_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <ul id=\\\"storage-delete-files\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_15_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"30\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_30_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"60\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_60_days\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_connection_settings\\\"))]}' class=\\\"settings-block-wrap connection\\\">\\n                <div class=\\\"connection-wrap\\\">\\n                    <div class=\\\"readonly-setting\\\">\\n                        <i class=\\\"details-icon mdi mdi-24px mdi-account\\\"></i>\\n                        <div class=\\\"setting-wrap account-name\\\">\\n                            <div class=\\\"value one-line\\\"></div>\\n                            <div class=\\\"label conn-status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"change-password-container\\\">\\n                        <div class=\\\"change-password-fields\\\">\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <button class=\\\"btn-change btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n                            <button class=\\\"btn-change-password btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</button>\\n                            <button class=\\\"btn-reconnect btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"settings_account__button_reconnect\\\"))]}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap vcard\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_server_info_description\\\"))]}' class=\\\"settings-block-wrap server-info\\\">\\n                <div class=\\\"capabilities-wrap\\\">\\n                    <div class=\\\"capabilities\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"blocked_contacts\\\"))]}' class=\\\"settings-block-wrap blocklist-info\\\">\\n                <div class=\\\"blocklist-wrap\\\">\\n                    <div class=\\\"blocked-items\\\">\\n                        <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                        <div class=\\\"blocklist-tabs-wrap\\\">\\n                            <ul class=\\\"tabs\\\">\\n                                <li class=\\\"blocked-item contacts-item hidden\\\" data-tab-name=\\\"blocked-contacts-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__contacts\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item domains-item hidden\\\" data-tab-name=\\\"blocked-domains-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__domains\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item invitations-item hidden\\\" data-tab-name=\\\"blocked-invitations-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__invitations\\\"))]}</a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-contacts-wrap hidden\\\" data-tab-name=\\\"contacts-item\\\">\\n                            <div class=\\\"blocked-contacts blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-domains-wrap hidden\\\" data-tab-name=\\\"domains-item\\\">\\n                            <div class=\\\"blocked-domains blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-invitations-wrap hidden\\\" data-tab-name=\\\"invitations-item\\\">\\n                            <div class=\\\"blocked-invitations blocked-list\\\"/>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap groups-info\\\">\\n                <div class=\\\"groups-wrap\\\">\\n                    <div class=\\\"groups\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_settings_devices_and_encryption\\\"))]}' class=\\\"settings-block-wrap tokens\\\">\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <!--<div class=\\\"setting-wrap manage-devices\\\">-->\\n                            <!--<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</button>-->\\n                        <!--</div>-->\\n                        <!--<div class=\\\"setting-wrap purge-keys\\\">-->\\n                            <!--<button class=\\\"btn-purge-keys btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</button>-->\\n                        <!--</div>-->\\n                    </div>\\n                </div>\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <p class=\\\"btn-revoke-all-tokens hover-text-color-500 text-color-700\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                    <div class=\\\"orphaned-fingerprints hidden\\\">\\n                        <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                        <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"client one-line\\\">{{client}}</div>\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n    </div>\\n    <div class=\\\"last-auth\\\">{[ if (resource_obj) {]}{[print(xabber.getString(\\\"account_state_connected\\\"))]}{[} else {]}{{last_auth}}{[}]}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    <div class=\\\"device-encryption one-line\\\">\\n        <i class=\\\"mdi mdi-lock mdi-14px hidden\\\"></i>\\n        <span>\\n            {[print(xabber.getString(\\\"settings_account__omemo_not_enabled\\\"))]}\\n        </span>\\n    </div>\\n    <i class=\\\"btn-revoke-token mdi mdi-24px mdi-close\\\"></i>\\n</div>\";","export default \"<div class=\\\"border ground-color-500\\\"/>\\n<div class=\\\"account-item-avatar-wrap\\\">\\n    <div class=\\\"circle-avatar-wrap\\\">\\n        <div class=\\\"dropdown-button circle-avatar border-color noselect\\\"/>\\n    </div>\\n</div>\\n<div class=\\\"status\\\"/>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"show-account-settings\\\">\\n        <i class=\\\"mdi mdi-settings mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal main-modal add-xabber-account-modal\\\">\\n    <div class=\\\"modal-content-wrap\\\">\\n        <div class=\\\"modal-header\\\">\\n            <span>{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</span>\\n        </div>\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"row account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            {[if (constants.USE_SOCIAL_AUTH){]}\\n            <div class=\\\"row social-auth-wrap\\\">\\n                <div class=\\\"social-header\\\">\\n                    <div class=\\\"divider\\\"></div>\\n                    <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"social_sign_in\\\"))]}</div>\\n                </div>\\n                <div class=\\\"social-buttons\\\">\\n                    <div class=\\\"btn-social google-color\\\" data-provider=\\\"google\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-google-plus\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social facebook-color\\\" data-provider=\\\"facebook\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-facebook\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social twitter-color\\\" data-provider=\\\"twitter\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social xabber-color\\\" data-provider=\\\"email\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-at\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n            {[}]}\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-footer\\\">\\n    <div class=\\\"registration-footer\\\">\\n        <div class=\\\"registration-tip-wrap\\\">\\n            <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__text_no_account\\\"))]}</span>\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n        </div>\\n    </div>\\n    <div class=\\\"footer-text clearfix\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n</div>\\n\";","export default \"<div data-id=\\\"{{email_id}}\\\" data-email=\\\"{{email}}\\\" class=\\\"{[if (!verified){]}not-linked {[}]}social-linked-item-wrap email-linked\\\"><div style=\\\"background-color:{{color}}\\\" class=\\\"social-icon\\\">{[if (verified){]}<svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#FFF\\\" d=\\\"M21,13.34C20.37,13.12 19.7,13 19,13A6,6 0 0,0 13,19C13,19.34 13.03,19.67 13.08,20H3A2,2 0 0,1 1,18V6C1,4.89 1.89,4 3,4H19A2,2 0 0,1 21,6V13.34M23.5,17L18.5,22L15,18.5L16.5,17L18.5,19L22,15.5L23.5,17M3,6V8L11,13L19,8V6L11,11L3,6Z\\\" />\\n</svg>{[} else {]}<i class=\\\"mdi mdi-24px mdi-email\\\"></i>{[}]}</div><div class=\\\"synced-info\\\"><div class=\\\"name one-line\\\">{{email}}</div><div class=\\\"verified-status one-line\\\">{[if (verified){print(xabber.getString(\\\"title_verified_email\\\"));}else{print(xabber.getString(\\\"title_unverified_email\\\"));}]}</div></div>{[if (!verified){]}<div class=\\\"btn-main btn-flat btn-verify-email\\\">{[print(xabber.getString(\\\"button_confirm\\\"))]}</div>{[}]}<div class=\\\"btn-main btn-flat btn-link btn-unlink\\\">{[print(xabber.getString(\\\"action_disconnect\\\"))]}</div></div>\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"xabber_account__dialog_sync__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"setting sync-all-wrap field-wrap\\\">\\n                <div class=\\\"field clickable-field switch normal\\\">\\n                    <span class=\\\"field-name\\\">{[print(xabber.getString(\\\"sync_all\\\"))]}</span>\\n                    <label class=\\\"field-value\\\">\\n                       <input type=\\\"checkbox\\\" class=\\\"sync-all\\\">\\n                       <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"accounts-wrap\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-sync\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <i class=\\\"sync-icon mdi mdi-24px\\\" data-mdiclass=\\\"\\\"></i>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name text-color-grey-900 one-line\\\">{{jid}}</div>\\n            <div class=\\\"sync-tip text-color-grey-500 one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-field checkbox-field sync-one-wrap no-padding\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in sync-one\\\" id=\\\"{{view.cid}}_sync_{{jid}}\\\"/>\\n        <label for=\\\"{{view.cid}}_sync_{{jid}}\\\"></label>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"xabber-account-content-wrap\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name text-color-red-700 one-line\\\"></div>\\n            </div>\\n            <div class=\\\"last-sync-info\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"sync-wrap\\\">\\n        <div class=\\\"btn-sync\\\">\\n            <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-flat btn-main btn-login\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"account-action-more\\\">\\n            <i class=\\\"mdi mdi-20px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"account-action-more\\\" class=\\\"xabber-account-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-sync btn-sync-settings\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-password\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-logout\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n<div class=\\\"xabber-account-tip\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n<div class=\\\"linked-social-accounts-and-emails\\\">\\n    <div class=\\\"social-linked-header\\\"><div class=\\\"chevron-icon\\\"><i class=\\\"arrow mdi mdi-20px\\\"></i></div><div class=\\\"social-linked-header-text\\\">{[print(xabber.getString(\\\"title_linked_accounts\\\"))]}</div></div>\\n    <div class=\\\"social-linked-wrap\\\">\\n        <div id='google' class=\\\"not-linked social-account social-linked-item-wrap google-linked\\\"><div class=\\\"google-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-google-plus\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='facebook' class=\\\"not-linked social-account social-linked-item-wrap facebook-linked\\\"><div class=\\\"facebook-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-facebook\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='twitter' class=\\\"not-linked social-account social-linked-item-wrap twitter-linked\\\"><div class=\\\"twitter-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-twitter\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='email' class=\\\"not-linked social-linked-item-wrap\\\"><div class=\\\"email-color social-icon\\\"><svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path fill=\\\"#FFF\\\" d=\\\"M3,4C1.89,4 1,4.89 1,6V18A2,2 0 0,0 3,20H14.09C14.03,19.67 14,19.34 14,19A6,6 0 0,1 20,13C20.34,13 20.67,13.03 21,13.09V6C21,4.89 20.1,4 19,4H3M3,6L11,11L19,6V8L11,13L3,8V6M19,15V18H16V20H19V23H21V20H24V18H21V15H19Z\\\" />\\n        </svg></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_add_email\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n    </div>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"login-panel\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n    </div>\\n    <div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</div>\\n        <div class=\\\"input-field email-name\\\">\\n            <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n            <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field\\\">\\n            <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n            <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field buttons-wrap\\\">\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/forgot-password/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-forgot-password\\\">{[print(xabber.getString(\\\"forgot_pass\\\"))]}</a>\\n            <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        </div>\\n        <div class=\\\"social-auth-wrap\\\"><div class=\\\"social-header\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"xabber_login__new_account\\\"))]}</div>\\n        </div></div>\\n        <div class=\\\"registration-footer\\\">\\n            <div class=\\\"registration-tip-wrap\\\">\\n                <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"xabber_account__login__text_no_xmpp_acc\\\"))]}</span>\\n                <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/?source=Xabber Web\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n            </div>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_email\\\"))]}</div>\\n    <div class=\\\"input-field email-name\\\">\\n        <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n        <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n        <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"login-panel-footer buttons-wrap\\\"><button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button><button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"fingerprint-content\\\">\\n    {[if (svg_icon){]}\\n        <div class=\\\"fingerprint-device-icon\\\">\\n            <svg class=\\\"mdi mdi-72px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        </div>\\n    {[}]}\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"fingerprint-label\\\">\\n            <div class=\\\"value\\\">{{label}}</div>\\n        </div>\\n    </div>\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"device-id\\\">\\n            <div class=\\\"value\\\">{{id}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint device-fingerprints-part\\\">\\n            <div class=\\\"label\\\">\\n                {[if (!edit_setting) {]}\\n                    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__other_fingerprint_label\\\"))]}\\n                {[} else {]}\\n                <span class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</span> {[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}\\n                {[}]}:</div>\\n            <div class=\\\"value\\\">{{fingerprint}}</div>\\n        </div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n</div>\\n<div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n    {[if (trust !== null && !error) {]}\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n        <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n            <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_verify_device`))]}</div>\\n        </div>\\n    </div>\\n    <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content bootstrap-dropdown noselect fingerprint-dropdown\\\">\\n        <div data-value=\\\"ignore\\\" class=\\\"property-variant btn-ignore\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n        <div data-value=\\\"trust\\\" class=\\\"property-variant btn-trust\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__device_verification_label\\\"))]}\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n    <div class=\\\"other-device-content\\\">\\n\\n    </div>\\n    <div class=\\\"this-device-content\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"fingerprints-help-text\\\">\\n        {[print(xabber.getString(\\\"omemo__dialog_fingerprints__bottom_help_text\\\"))]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"/>\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"/>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"/>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <div class=\\\"name one-line\\\"/>\\n    </div>\\n</div>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"/>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"/>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"/>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"/>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting idling field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"toolbar-top\\\">\\n    <div class=\\\"toolbar-item toolbar-logo\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-middle\\\">\\n    <div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n        <span class=\\\"all-msg-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item jingle-calls\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__jingle_calls\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"bell\\\"></svg>\\n        <span class=\\\"mentions-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n    </div>\\n\\n    <div class=\\\"toolbar-item geolocation-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__geolocation_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-compass\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item saved-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__saved_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-bookmark\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n    <div class=\\\"toolbar-item settings\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n    </div>\\n\\n    <div class=\\\"add-something-wrap\\\">\\n        <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n            <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n        </div>\\n\\n        <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n            <div class=\\\"add-variant contact\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant public-groupchat\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant incognito-groupchat\\\">\\n                <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n                </svg>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant account\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    <div class=\\\"accounts-wrap\\\">\\n        <div class=\\\"accounts\\\">\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                    <div class=\\\"uploading-emoticons\\\">\\n                    <div class=\\\"preloader-wrapper preloader-20px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"/>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-unread hidden mdi-chevron-down\\\"><div class=\\\"back-to-unread-counter\\\"></div></i>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-body-content-placeholder-text no-select\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"/>\\n<div class=\\\"contact-status hide-offline\\\"/>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"/>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <!--<li class=\\\"btn-contact-details\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>-->\\n            <!--</li>-->\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-export-history\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"export_chat\\\"))]}</span>\\n            </li>-->\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-delete-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-block-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_block\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-unblock-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_unblock_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"contact-list forward-chats-list\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590 || image_height && image_height < 80) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-msg-video-id=\\\"{{video_id}}\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"/>\\n</div>\";","export default \"<div class=\\\"unread-marker\\\">\\n    <div class=\\\"unread-marker-content no-select\\\">\\n        {{text}}\\n    </div>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <div class=\\\"audio-control-time\\\">\\n        <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n        <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    </div>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"status hide-offline\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"btn-more  dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-auth-request\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_request_authorization\\\"))]}</span></li>\\n            <li class=\\\"btn-add\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</span></li>\\n            <li class=\\\"btn-delete\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"remove_contact\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-phone btn-voice-call\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper btn-block\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"left-column\\\">\\n            <div class=\\\"block-wrap subscription-block-wrap\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_subscription_settings\\\"))]}</span>\\n                </div>\\n                <div class=\\\"subscription-info-wrap\\\">\\n                    <div class=\\\"incoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"incoming-subscription\\\"/>\\n                            <label for=\\\"incoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"outcoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"outcoming-subscription\\\"/>\\n                            <label for=\\\"outcoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap vcard\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"right-column\\\">\\n            <div class=\\\"block-wrap resources-block-wrap hidden\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_info_connected_clients_header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-unmute-dropdown\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap fixed-scroll hidden\\\">\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more-fixed\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more-fixed\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-unmute-dropdown\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"group-edit-preloader\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                    <svg viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                    </svg>\\n                </div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap fixed-scroll hidden\\\">\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more-fixed\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more-fixed\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                    <svg viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                    </svg>\\n                </div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs not-edit\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <ul class=\\\"tabs participant-tabs\\\">\\n            <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n            <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n            <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n            <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        </ul>\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"/></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files && !is_encrypted))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n        <img class=\\\"server-icon hidden\\\" src=\\\"./assets/images/BotIcon20x20@2x.png\\\">\\n        <img class=\\\"group-chat-icon hidden\\\" src=\\\"./assets/images/GroupchatIcon20x20@2x.png\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/account-outline</title>\\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/address-outline</title>\\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell-off</title>\\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell-sleep</title>\\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell</title>\\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/birthday-outline</title>\\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/blocked-add</title>\\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/blocked</title>\\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/bot-variant</title>\\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/bot</title>\\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/call-outline</title>\\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/call</title>\\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/camera-retake</title>\\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/cancel</title>\\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/channel</title>\\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-down</title>\\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-left-variant</title>\\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.500000, 12.000000) scale(-1, 1) translate(-11.500000, -12.000000) \\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-right-variant</title>\\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/circles</title>\\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/clock-outline</title>\\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/close</title>\\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs-gps</title>\\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs-question</title>\\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs</title>\\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/description-outline</title>\\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/device-cellphone</title>\\n    <g id=\\\"icon/material/device-cellphone\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,19 L7,19 L7,5 L17,5 M17,1 L7,1 C5.89,1 5,1.89 5,3 L5,21 C5,22.1045695 5.8954305,23 7,23 L17,23 C18.1045695,23 19,22.1045695 19,21 L19,3 C19,1.8954305 18.1045695,1 17,1 Z\\\" id=\\\"mdi:cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/device-console</title>\\n    <g id=\\\"icon/material/device-console\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M18,12 L18,14 L13,14 L13,12 L18,12 Z M8.4,6 L11.7,9.3 C12.09,9.69 12.09,10.33 11.7,10.72 L8.42,14 L5.59,14 L9.58,10 L5.57,6 L8.4,6 Z\\\" id=\\\"xabber.monitor-console\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/device-desktop</title>\\n    <g id=\\\"icon/material/device-desktop\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,16 L3,16 L3,4 L21,4 M21,2 L3,2 C1.89,2 1,2.89 1,4 L1,16 C1,17.1045695 1.8954305,18 3,18 L10,18 L10,20 L8,20 L8,22 L16,22 L16,20 L14,20 L14,18 L21,18 C22.1045695,18 23,17.1045695 23,16 L23,4 C23,2.8954305 22.1045695,2 21,2 Z\\\" id=\\\"mdi:monitor\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/device-tablet</title>\\n    <g id=\\\"icon/material/device-tablet\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,18 L5,18 L5,6 L19,6 M21,4 L3,4 C1.89,4 1,4.89 1,6 L1,18 C1,19.1045695 1.8954305,20 3,20 L21,20 C22.1045695,20 23,19.1045695 23,18 L23,6 C23,4.8954305 22.1045695,4 21,4 Z\\\" id=\\\"mdi:tablet\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/device-web</title>\\n    <g id=\\\"icon/material/device-web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M9.59,6.41 L10.5,7.5 L8,10 L10.5,12.5 L9.59,13.5 L6,10 L9.59,6.41 Z M14.5,6.50152764 L18,10 L14.5,13.5 L13.5,12.5 L16,10 L13.5,7.5 L14.5,6.50152764 Z\\\" id=\\\"xabber.monitor-tag\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/devices</title>\\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/edit-outline</title>\\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/edit</title>\\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/email-outline</title>\\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-audio</title>\\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-document</title>\\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-pdf</title>\\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-presentation</title>\\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-video</title>\\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-zip</title>\\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file</title>\\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/fullname-outline</title>\\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/fullname</title>\\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-incognito</title>\\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-invite</title>\\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-private</title>\\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-public</title>\\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/history</title>\\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/id-outline</title>\\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/image</title>\\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/index</title>\\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/information-outline</title>\\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/invite-outline</title>\\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/job-outline</title>\\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/link</title>\\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/map-marker-outline</title>\\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/map-marker</title>\\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/membership-outline</title>\\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/message-bookmark-outline</title>\\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/minus</title>\\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/mobile</title>\\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/palette</title>\\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pause</title>\\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-bottom-right</title>\\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-minimize</title>\\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-top-right</title>\\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pinned-circle-small</title>\\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pinned</title>\\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/play</title>\\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-float</title>\\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-full</title>\\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-mini-variant</title>\\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-mini</title>\\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/plus</title>\\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/qrcode</title>\\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/restrictions-outline</title>\\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/rss-variant</title>\\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/rss</title>\\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/saved-messages</title>\\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/search</title>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n        </mask>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/server</title>\\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/status-outline</title>\\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/subscription-from</title>\\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/subscription-to</title>\\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/circle/task</title>\\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/translate</title>\\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/video</title>\\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/volume-high</title>\\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/volume-off</title>\\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 17.765357,5.9248618 c 0.009,0.1518861 -0.206601,0.1119764 -0.206601,0.2652514 0,4.4595198 -5.17314,11.2012628 -10.3933633,12.5152538 v 0.136731 C 14.101125,18.204712 21.825325,11.114777 22,4.2839629 l -4.233831,1.6413619 z\\\"\\n     id=\\\"path4-5\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 15.907561,6.3610856 c 0.009,0.1518861 0.014,0.3045804 0.014,0.4578554 0,4.459522 -3.55133,10.468554 -8.7715528,11.783009 v 0.189367 C 13.982554,18.349079 19.389945,11.500913 19.389945,6.1592263 c 0,-0.2747361 -0.01446,-0.5470438 -0.04292,-0.8162264 l -3.439122,1.017508 z\\\"\\n     id=\\\"path6\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 6.2332547,5.9248618 c -0.00886,0.1518861 0.2067174,0.1119764 0.2067174,0.2652514 0,4.4595198 5.3857609,11.2631498 10.6063279,12.5777208 V 18.95743 C 10.11103,18.318886 2.1746761,11.11443 2,4.2836157 l 4.2337177,1.6413618 z\\\"\\n     id=\\\"path8\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"M 8.3307389,6.473525 C 8.3219828,6.6254111 8.31686,6.7777591 8.31686,6.9312646 c 0,4.4595214 3.551213,10.4685544 8.771549,11.7830104 v 0.189596 C 10.258286,18.581129 4.8484667,11.613351 4.8484667,6.2717814 c 0,-0.2747361 0.014805,-0.5470427 0.042915,-0.8162284 l 3.4391228,1.0177415 z\\\"\\n     id=\\\"path10\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 4.8583007,5.3920472 0.8811221,0.3148763 c -0.00473,0.111283 -0.00765,0.2607395 -0.00765,0.3730642 0,4.7681513 4.3114542,11.3600893 10.0954942,12.3914783 0.375377,0.125857 0.871982,0.240263 1.264595,0.339052 V 19 C 9.5433961,18.356828 4.2400023,10.686651 4.857725,5.3915852 z\\\"\\n     id=\\\"path12\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 19.390639,5.2968432 -0.906108,0.3036565 c 0.0047,0.1113977 0.02208,0.2548387 0.02208,0.3670476 0,4.7681497 -4.311569,11.3602047 -10.0957226,12.3914777 -0.3751445,0.125972 -0.8719856,0.240267 -1.2643666,0.33917 v 0.189596 C 15.052467,17.886018 20.00767,10.591448 19.389946,5.2967275 z\\\"\\n     id=\\\"path14\\\" />\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"vcard_edit__header\\\"))]}</span>\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-vcard-back btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_cancel\\\"))]}</button>\\n                <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content details-panel\\\">\\n\\n                <div class=\\\"settings-block-wrap vcard\\\">\\n                    <div class=\\\"vcard-edit-wrap\\\">\\n                        <div class=\\\"info-wrap personal-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-card-details\\\"></i>\\n                            <div class=\\\"input-field first-name\\\">\\n                                <input id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field middle-name\\\">\\n                                <input id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field last-name\\\">\\n                                <input id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field fullname\\\">\\n                                <input id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap nickname-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                            <div class=\\\"input-field nickname\\\">\\n                                <input id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap birthday-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-cake-variant\\\"></i>\\n                            <div class=\\\"input-field birthday\\\">\\n                                <input id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap job-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-briefcase\\\"></i>\\n                            <div class=\\\"input-field org-name\\\">\\n                                <input id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field job-title\\\">\\n                                <input id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n                            </div>\\n                            <div class=\\\"input-field org-unit\\\">\\n                                <input id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n                            </div>\\n                            <div class=\\\"input-field role\\\">\\n                                <input id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap site-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                            <div class=\\\"input-field url\\\">\\n                                <input id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap description-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n                            <div class=\\\"input-field description\\\">\\n                                <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea\\\" name=\\\"description\\\"></textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap phone-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n                            <div class=\\\"input-field phone-work\\\">\\n                                <input id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-home\\\">\\n                                <input id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-mobile\\\">\\n                                <input id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap email-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n                            <div class=\\\"input-field email-work\\\">\\n                                <input id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field email-home\\\">\\n                                <input id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap address-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n                            <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","var constants = {\n\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_DEFAULT_GREY: \"assets/images/favicon-grey.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n    DOWNTIME_RECONNECTION_TIMEOUT: 15,\n    PING_SENDING_INTERVAL: 10,\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 900000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            url: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n    SOUNDS: {\n        beep_up: 'assets/sounds/beep_up.ogg',\n        tiny_noize: 'assets/sounds/tiny_noize.ogg',\n        retro_game: 'assets/sounds/retro_game.ogg',\n        pixel_beep: 'assets/sounds/pixel_beep.ogg',\n        beep_positive: 'assets/sounds/beep_positive.ogg',\n        good_chime: 'assets/sounds/good_chime.ogg',\n        cellular_click: 'assets/sounds/cellular_click.ogg',\n        bleep: 'assets/sounds/bleep.ogg',\n        mono_u: 'assets/sounds/mono_u.ogg',\n        plop: 'assets/sounds/plop.ogg',\n        ether: 'assets/sounds/ether.ogg',\n        pop: 'assets/sounds/pop.ogg',\n        computer_chime: 'assets/sounds/computer_chime.ogg',\n        beep_a: 'assets/sounds/beep_a.ogg',\n        call: 'assets/sounds/marching-band-dave-girtsman.mp3',\n        connecting: 'assets/sounds/alien-bomb-timer.wav',\n        busy: 'assets/sounds/phone_busy.wav',\n        attention: 'assets/sounds/attention.wav'\n    },\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, ',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, 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qqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"\": \"Montenegrin (Latin)\", // ????????\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    API_SERVICE_URL: 'https://api.xabber.com/api/v2',\n    USE_SOCIAL_AUTH: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    CLIENT_URL: 'https://www.xabber.com',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE'\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport Recorder from 'opus-recorder';\nimport encoderPath from 'opus-recorder/dist/encoderWorker.min.js';\nimport VanillaQR from \"VanillaQR\";\nimport idleJs from \"idle-js\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    idleJs: idleJs,\n    opusRecorder: Recorder,\n    opusRecorderEncoderPath: encoderPath,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    VanillaQR: VanillaQR,\n    magnificPopup: magnificPopup,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = require('~/templates/'+path.join('/')+'.json'),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = tpl;\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprints_devices');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.fingerprint_devices_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('api_service.xabber_login');\n    addTemplate('api_service.xabber_login_by_email');\n    addTemplate('api_service.add_xabber_account');\n    addTemplate('api_service.xabber_account');\n    addTemplate('api_service.linked_email_item');\n    addTemplate('api_service.sync_settings');\n    addTemplate('api_service.sync_settings_account_item');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.settings_left');\n    addTemplate('accounts.settings_right');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item');\n    addTemplate('accounts.current_token_item');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_edit');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_placeholder');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.unread_marker');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.device-cellphone');\n    addSvgTemplate('svg.device-console');\n    addSvgTemplate('svg.device-desktop');\n    addSvgTemplate('svg.device-tablet');\n    addSvgTemplate('svg.device-web');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","import _ from \"underscore\";\nimport $ from \"jquery\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    var sprite = options.sprite,\n        tag_name = sprite ? (options.tag_name || 'span') : 'img',\n        emoji_size = options.emoji_size || 20,\n        href = options.href ? ` href=\"#${options.href}\" ` :\"\",\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        let data = emoji_data[emoji],\n            emoji_code = data && Number(data.code).toString(16);\n        if (data) {\n            (emoji_code.length < 4) && (emoji_code = \"0\".repeat(4 - emoji_code.length) + emoji_code);\n            let img_src = tag_name === 'img' ? (sprite ? ' src=\"assets/images/emoji/blank.gif\"' : '  src=\"assets/images/emoji/svg32/emoji_u' + emoji_code + '.svg\"') : '';\n            return '<' + tag_name + img_src + href + title + ' class=\"emoji emoji-w' + emoji_size +\n                (sprite ? (' sprite-' + sprite + '\" style=\"background-position: ' + '-' + (emoji_size * data.x) + 'px ' + '-' + (emoji_size * data.y) + 'px;\" ') : '\" ') +\n                'alt=\"' + emoji + '\" ' +\n                'data-emoji=\"' + emoji + '\"/>';\n        }\n        else\n            return emoji;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.28) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (max_size){\n        if (size.width > size.height) {\n            if (size.width > max_size) {\n                size.height *= max_size / size.width;\n                size.width = max_size;\n            }\n        } else {\n            if (size.height > max_size) {\n                size.width *= max_size / size.height;\n                size.height = max_size;\n            }\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml' || file.type.includes('image/gif') || (width < MAX_IMG_SIZE && height < MAX_IMG_SIZE)) {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                buttons || (buttons = {});\n                dialog_options || (dialog_options = []);\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: dialog_options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options, header) {\n            return this.common(header || getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: true, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\n$.fn.isVisibleInViewport = function() {\n    let elementTop = $(this).offset().top,\n        elementBottom = elementTop + $(this).outerHeight();\n\n    let viewportTop = $(window).scrollTop(),\n        viewportBottom = viewportTop + $(window).height();\n\n    return elementBottom > viewportTop && elementTop < viewportBottom;\n};\n\n$.fn.isVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        (eleTop >= containerTop && eleBottom <= containerBottom) ||\n        // Some part of the element is visible in the container\n        (eleTop < containerTop && containerTop < eleBottom) ||\n        (eleTop < containerBottom && containerBottom < eleBottom)\n    );\n};\n\n$.fn.isFullyVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleTop >= containerTop && eleBottom <= containerBottom\n    );\n};\n\n$.fn.isBottomVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleBottom <= containerBottom\n    );\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {}\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                        if (options.decode_uri)\n                            x = x.replace(list[i], decodeURI(list[i]));\n                        else\n                            x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    tryReadingFile: function(file) {\n        return new Promise((resolve, reject) => {\n            let r = new FileReader();\n            r.onload = (e) => {\n                resolve();\n            };\n            r.onerror = (e) => {\n                console.log(r.error);\n                reject(r.error);\n            };\n            r.readAsDataURL(file)\n        });\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils,\n    bc = new BroadcastChannel(\"xabber-web\");\n\nbc.onmessage = (event) => {\n    if (event.data === `1` && !bc.disabled_client) {\n        bc.postMessage(`2`);\n    }\n    if (event.data === `2`) {\n        bc.disabled_client = true\n    }\n};\n\nbc.postMessage(`1`);\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        client_name: 'Xabber for Web'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.cacheFavicons();\n        this.extendFunction();\n        this.check_config = new $.Deferred();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n\n        window.ononline = () => {\n            this.disconnectWhenConnecting();\n        };\n        // setInterval(function() {\n        //     console.log(new Date());\n        // }, 5000)\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_gray', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT_GREY).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            idling: true,\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            sound_on_call: 'call',\n            sound_on_dialtone: 'call',\n            sound_on_connection: 'connecting',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: 'beep_a',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'API_SERVICE_URL',\n                'USE_SOCIAL_AUTH',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.DOWNTIME_RECONNECTION_TIMEOUT)\n                constants.DOWNTIME_RECONNECTION_TIMEOUT = config.DOWNTIME_RECONNECTION_TIMEOUT;\n            if (config.PING_SENDING_INTERVAL)\n                constants.PING_SENDING_INTERVAL = config.PING_SENDING_INTERVAL;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            if (utils.isMobile.any()) {\n                let ios_msg = this.getString(\"warning__client_not_support_ios_browser\", [constants.CLIENT_NAME]),\n                    android_msg = this.getString(\"warning__client_not_support_android_browser\"),\n                    any_mobile_msg = this.getString(\"warning__client_not_support_mobile\", [constants.CLIENT_NAME]),\n                    msg;\n                if (utils.isMobile.iOS()) {\n                    msg = ios_msg;\n                } else if (utils.isMobile.Android()) {\n                    msg = any_mobile_msg + android_msg;\n                } else {\n                    msg = any_mobile_msg;\n                }\n                utils.dialogs.error(msg);\n                this.check_config.resolve(false);\n                return;\n            }\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            if (bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                self._cache.save('notifications', granted);\n                self._cache.save('endpoint_key', undefined);\n                self.check_config.resolve(true);\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    updateFaviconConnected: function () {\n        let is_disconnected = false;\n        this.accounts.each((account) => {\n            if (account.get('enabled') && (!account.isConnected() || (account.session && account.session.get('auth_failed')))){\n                is_disconnected = true;\n                return;\n            }\n        });\n        this.updateAllMessageCounterOnDisconnect(is_disconnected);\n    },\n\n    disconnectWhenConnecting: function (is_fast) {\n        this.accounts.each((account) => {\n            if (account.session && account.connection && account.get('enabled') && !account.session.get('reconnecting') && !account.session.get('connected')){\n                account.activate();\n            }\n        });\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\nimport { transliterate as query_transliterate } from 'transliteration';\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight === scrollTop + offsetHeight;\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        _.each(this.children, function (view) {\n            view.hide();\n        });\n        this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        if (_.isNull(path)){\n            this.$el.addClass('hidden');\n            return;\n        } else {\n            this.$el.removeClass('hidden');\n        }\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          let query_transliterated = query_transliterate(query);\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              let saved_chat = acc.chats.getSavedChat();\n              saved_chat.set('opened', true);\n              saved_chat.item_view.updateLastMessage();\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                      || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1\n                      || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                          || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1) {\n                          let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if (!attrs || !attrs.show_placeholder) {\n            new_attrs.show_placeholder = null;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || (name === 'settings' || name ==='account_settings') || options.right_force_close)\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        new_attrs = _.extend(new_attrs, attrs);\n        let chat_item_view;\n        if (_.isUndefined(new_attrs.chat_item)){\n            chat_item_view = this.screen.get('chat_item');\n            if (chat_item_view && chat_item_view.content)\n                chat_item_view.content._prev_scrolltop = chat_item_view.content.getScrollTop() || chat_item_view.content._scrolltop;\n        }\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    template: templates.toolbar,\n\n    events: {\n        \"click .toolbar-logo\":             \"clickAllChats\",\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .saved-chats\":           \"showSavedChats\",\n        \"click .mentions\":              \"showNotifications\",\n        \"click .settings\":              \"showSettings\",\n        \"click .jingle-calls\":              \"showPlaceholder\",\n        \"click .geolocation-chats\":              \"showPlaceholder\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n    },\n\n    onUpdatedScreen: function (name) {\n        if (name === 'account_settings'){\n            this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n            this.$('.toolbar-item:not(.toolbar-logo).settings').addClass('active');\n            return;\n        }\n        if ((name === 'all-chats') &&\n            (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active') ||\n                this.$('.toolbar-item:not(.toolbar-logo).chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active'))) {\n            return;\n        }\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'search', 'jingle-calls', 'geolocation-chats', 'about'], name)) {\n            this.$('.toolbar-item:not(.toolbar-logo).'+name).addClass('active');\n        }\n    },\n\n    clickAllChats: function (ev) {\n        this.$('.all-chats').click();\n    },\n\n    showAllChats: function (ev, no_unread) {\n        let $el;\n        if (ev && ev.target)\n            $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        else\n            $el = this.$('.all-chats');\n        let is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        let options = {}\n        no_unread && (options.no_unread = no_unread);\n        xabber.body.setScreen('all-chats', options);\n        xabber.trigger('show_all_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showArchive: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showSavedChats: function (ev, no_unread) {\n        if (xabber.accounts.enabled.length === 1){\n            let saved_chat = xabber.accounts.enabled[0].chats.getSavedChat();\n            saved_chat.item_view && saved_chat.item_view.open({right_contact_save: true, clear_search: false, scroll_to_chat: true});\n            this.$('.active').removeClass('active');\n            this.$('.saved-chats').addClass('active');\n            saved_chat.once(\"change:active\", () => {\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).'+xabber.body.screen.get('name')).addClass('active');\n            });\n        } else {\n            this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n                .filter('.saved-chats').addClass('active');\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_saved_chats', no_unread);\n            xabber.trigger('update_placeholder');\n        }\n    },\n\n    showNotifications: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.mentions').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_notification_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showChatsByAccount: function (account) {\n        if (this.data.get('account_filtering') === account.get('jid'))\n            this.data.set('account_filtering', null);\n        else\n            this.data.set('account_filtering', account.get('jid'));\n        if (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active')) {\n            this.showAllChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active')) {\n            this.showArchive(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')) {\n            this.showSavedChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')) {\n            this.showNotifications(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).jingle-calls').hasClass('active') ||\n            this.$('.toolbar-item:not(.toolbar-logo).geolocation-chats').hasClass('active')){\n            this.showAllChats(null, true);\n            return;\n        }\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings');\n        xabber.trigger('update_placeholder');\n    },\n\n    showPlaceholder: function (ev) {\n        if (xabber.chats_view && xabber.chats_view.active_chat){\n            xabber.chats_view.active_chat.model.trigger('hide_chat');\n            xabber.chats_view.active_chat = null;\n        }\n        let screen_name = this.$('.toolbar-item:not(.toolbar-logo).settings').hasClass('active') ? 'all-chats' : xabber.body.screen.get('name');\n        xabber.body.setScreen(screen_name, {chat_item: null});\n        let $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        $el.addClass('active');\n        xabber.trigger('update_placeholder');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        if (c >= 100)\n            c = '99+';\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        let video = this.$el.find('.webrtc-remote-video')[0],\n            local_video = this.$el.find('.webrtc-local-video')[0],\n            buttons = this.$el.find('.buttons-panel')[0];\n        if (!video)\n            return;\n        if (video.requestFullScreen) {\n            video.requestFullScreen();\n            local_video.requestFullScreen();\n            buttons.requestFullScreen();\n        }\n        else if (video.webkitRequestFullScreen) {\n            video.webkitRequestFullScreen();\n            local_video.webkitRequestFullScreen();\n            buttons.webkitRequestFullScreen();\n        }\n        else if (video.mozRequestFullScreen) {\n            video.mozRequestFullScreen();\n            local_video.mozRequestFullScreen();\n            buttons.mozRequestFullScreen();\n        }\n        else if (video.msRequestFullScreen) {\n            video.msRequestFullScreen();\n            local_video.msRequestFullScreen();\n            buttons.msRequestFullScreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function () {\n        this.updateStatusText(xabber.getString(this.model.get('status') == 'device_busy' ? \"dialog_jingle_message__status_device_busy\" : this.model.get('status') == 'busy' ? \"dialog_jingle_message__status_busy\" : \"dialog_jingle_message__status_disconnected\"));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n\n                        let xPercent = (((this.$el.offset().left - this.pos1)/window.innerWidth) * 100),\n                            yPercent = (((this.$el.offset().top - this.pos2)/window.innerHeight) * 100);\n\n\n                        // set the element's new position:\n                        this.$el.css('left', xPercent + '%');\n                        this.$el.css('top', yPercent + '%');\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            let video_sources = {\n                src: options.player.video_src,\n                provider: options.player.provider,\n            };\n            options.player.type && (video_sources.type = options.player.type);\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    video_sources,\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        });\n\n        if (options.player && options.player.video_file && options.player.video_file.key) {\n            options.player.key = options.player.video_file.key;\n            options.player.video_file.type && (options.player.type = options.player.video_file.type);\n        }\n\n        if (options.player && options.player.key && options.player.chat_item.model && options.player.video_src && !options.player.video_decrypted){\n            options.player.chat_item.model.messages.decryptFile(options.player.video_src, options.player.key).then((result) => {\n                options.player.video_src = result;\n                options.player.video_decrypted = true;\n                dfd.resolve();\n            });\n        } else\n            dfd.resolve();\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsView = xabber.BasicView.extend({\n    className: 'settings-panel',\n    template: templates.settings,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.idling label\": \"setIdling\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        \"click .setting.private-notifications label\": \"setPrivateNotifications\",\n        \"click .setting.group-notifications label\": \"setGroupNotifications\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .setting.call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .current-main-color-wrap\": \"openMainColorPicker\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n    },\n\n    render: function () {\n        let settings = this.model.attributes,\n            lang = settings.language;\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private});\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group});\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.idling input[type=checkbox]')\n            .prop({checked: settings.idling});\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        return this;\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n        this.$('.toolbar-main-color-setting .color-name').text(xabber.getString(`account_color_name_${this.model.get('main_color').replace(/-/g, \"_\")}`).replace(/-/g, \" \"));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        this.$('#blur')[0].value = blur_switched ? appearance.blur : constants.BLUR_VALUE;\n\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        this.$('#vignetting')[0].value = vignetting_switched ? appearance.vignetting : constants.VIGNETTING_VALUE;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.data('block-name'));\n        this.$('.btn-add-account').hideIf($tab.data('block-name') != 'xmpp-accounts')\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        this.scrollToChild($elem);\n    },\n\n    setIdling: function (ev) {\n        let value = !this.model.get('idling');\n        this.model.save('idling', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.idling').find('input').prop('checked', value);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications'),\n            $target = $(ev.target);\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    $target.closest('.setting.notifications').find('input').prop('checked', value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                $target.closest('.setting.notifications').find('input').prop('checked', value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.group-notifications').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    openMainColorPicker: function () {\n        if (!this.mainColorPicker)\n            this.mainColorPicker = new xabber.mainColorPicker({model: this.model});\n        this.mainColorPicker.render();\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.VIGNETTING_VALUE : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#vignetting')[0].value = constants.VIGNETTING_VALUE;\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.BLUR_VALUE : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#blur')[0].value = constants.BLUR_VALUE;\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value;\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"), xabber.getString(\"settings__dialog_change_language__confirm\"), null, { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_full_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_no_translation_platform\",\n                        [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__section_interface_language__text_description_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`, constants.EMAIL_FOR_JOIN_TRANSLATION]);\n            }\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    }\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        let request = {\n            type: \"GET\",\n            contentType: \"application/xml\",\n            dataType: 'xml',\n            success: (data) => {\n                if (this.type == 'repeating-pattern') {\n                    this.onGetPatternsCallback(data);\n                } else {\n                    this.onGetImagesCallback(data);\n                }\n                callback && callback();\n            }\n        };\n        if (this.type == 'repeating-pattern') {\n            request.url = './background-patterns.xml';\n        } else {\n            request.url = './background-images.xml';\n        }\n        $.ajax(request);\n    },\n\n    onGetPatternsCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            images.push({thumbnail: $(img).text()});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            let $img = $(img),\n                thumbnail = $img.children('thumbnail').text(),\n                fs_img = $img.children('fullscreen-image').text();\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev && ev.target && ev.target.closest ? ev.target.closest('.drag-handle') : $(ev.target).closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 50,\n            out_duration: 100,\n            opacity: 0.4\n        },\n        close: {out_duration: 100}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval && is_disconnected === undefined)\n            return;\n        clearInterval(this._blink_interval);\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1 || $icon.attr('href').indexOf(this.cache.favicon_gray) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT_GREY) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval || is_disconnected !== undefined) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    updateAllMessageCounterOnDisconnect: function (is_disconnected) {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon(is_disconnected);\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon(is_disconnected);\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_msg += incoming_subscriptions;\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        this.set('all_msg_counter', this.setAllMessageCounter());\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = constants.SOUNDS[name];\n        if (filename) {\n            let audio = new window.Audio(filename);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        let idle = new idleJs({\n            idle: 30000, // idle time in ms\n            events: ['mousemove', 'keydown', 'mousedown', 'touchstart', 'focus', 'blur'], // events that will trigger the idle resetter\n            onIdle: () => {\n                if (self._settings.get('idling'))\n                    self.set('idle', true);\n                else\n                    self.set('idle', false);\n            } , // callback function to be executed after idle time\n            onActive:() => {\n                self.set('idle', false);\n            }  , // callback function to be executed after back form idleness\n            keepTracking: true, // set it to false if you want to be notified only on the first idleness change\n            startAtIdle: false // set it to true if you want to start in the idle state\n        })\n        idle.start();\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_view = this.wide_panel.addChild(\n        'settings', this.SettingsView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.api_service,\n    utils = env.utils,\n    $ = env.$,\n    _ = env._;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n\n    create_from_server: function (settings_item) {\n        let settings = this.create(_.extend({\n            jid: settings_item.jid,\n            timestamp: settings_item.timestamp,\n            to_sync: true,\n            synced: true\n        }, settings_item.settings));\n        this.trigger('add_settings', settings);\n        return settings;\n    }\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.APIAccount = Backbone.ModelWithStorage.extend({\n    defaults: {\n        token: null,\n        sync_all: true\n    },\n\n    _initialize: function (_attrs, options) {\n        this.list = options.settings_list;\n        this.save({connected: false, sync_request: 'silent'});\n        this.on(\"change:connected\", function () {\n            if (this.get('connected')) {\n                this.fcm_subscribe();\n            } else {\n                this.fcm_unsubscribe();\n            }\n        }, this);\n        this.on(\"change:token\", function () {\n            if (this.get('token') !== null) {\n                this.save({sync_all: true,\n                           sync_request: this.list.length ? 'window' : 'silent'});\n            }\n        }, this);\n        this.list.on(\"change:to_sync\", function (item) {\n            if (this.get('sync_all') && !item.get('to_sync')) {\n                this.save('sync_all', false);\n            }\n        }, this);\n        xabber.on(\"push_message\", function (message) {\n            if (this.get('connected') &&\n                    message.username === this.get('username') &&\n                    message.from_token !== this.get('token') &&\n                    message.action === 'settings_updated') {\n                this.synchronize_main_settings();\n                this.synchronize_order_settings();\n            }\n            if (this.get('connected') &&\n                message.username === this.get('username') &&\n                message.from_token !== this.get('token') &&\n                message.action === 'account_updated') {\n                this.get_settings();\n            }\n        }, this);\n\n        this.ready = new $.Deferred();\n        if (xabber.url_params.social_auth) {\n            let social_auth = xabber.url_params.social_auth;\n            delete xabber.url_params.social_auth;\n            try {\n                let data = JSON.parse(atob(social_auth));\n                this.save('token', null);\n                this.social_login(data);\n                return;\n            } catch (e) {}\n        }\n        if (xabber.url_params.token) {\n            this.save('token', xabber.url_params.token);\n            delete xabber.url_params.token;\n        }\n        if (this.get('token')) {\n            this.login_by_token();\n        } else {\n            this.ready.resolve();\n        }\n    },\n\n    _call_method: function (method, url, data, callback, errback) {\n        let request = {\n            type: method,\n            url: constants.API_SERVICE_URL + url,\n            headers: {\"Authorization\": \"Token \" + this.get('token')},\n            context: this,\n            contentType: \"application/json\",\n            dataType: 'json',\n            success: (data, textStatus, jqXHR) => {\n                callback && callback(data);\n            },\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (data) {\n            request.data = JSON.stringify(data);\n        }\n        $.ajax(request);\n    },\n\n    add_source: function (data) {\n        return _.extend({\n            source: `${constants.CLIENT_NAME} ${xabber.get('version_number')}`\n        }, data);\n    },\n\n    get_settings: function () {\n        if (this.get('token') !== null) {\n            this._call_method('GET', '/accounts/current/', null,\n                (data) => {\n                    if (data.account_status === 'registered') {\n                        this.onUserData(data);\n                        this._call_method('GET', '/accounts/current/client-settings/', null,\n                            this.onSettings.bind(this),\n                            this.onSettingsFailed.bind(this)\n                        );\n                    } else {\n                        utils.dialogs.error(xabber.getString(\"xabber_account__sync__error_no_permission_to_sync\"));\n                        this.save({token: null, connected: false});\n                        this.trigger('settings_result', null);\n                    }\n                },\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    delete_settings: function (jid) {\n        if (this.get('connected')) {\n            this._call_method('DELETE', '/accounts/current/client-settings/', {jid: jid},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_main_settings: function () {\n        if (this.get('connected')) {\n            let data = _.map(this.list.where({to_sync: true}), function (settings) {\n                return settings.request_data();\n            });\n            if (data.length) {\n                this._call_method('PATCH', '/accounts/current/client-settings/',\n                    {settings_data: data},\n                    this.onSettings.bind(this),\n                    this.onSettingsFailed.bind(this)\n                );\n            } else {\n                this.get_settings();\n            }\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_order_settings: function () {\n        if (this.get('connected') && this.get('sync_all')) {\n            let timestamp = this.list.order_timestamp.get('timestamp');\n            let data = this.list.map(function (settings) {\n                return {jid: settings.get('jid'), order: settings.get('order')};\n            });\n            this._call_method('PATCH', '/accounts/current/client-settings/',\n                {order_data: {settings: data, timestamp: timestamp}},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    fetch_from_server: function (data) {\n        let deleted_list = data.deleted,\n            settings_list = data.settings_data,\n            order_timestamp = data.order_data.timestamp,\n            order_list = data.order_data.settings,\n            list = this.list,\n            sync_all = this.get('sync_all');\n        _.each(deleted_list, (item) => {\n            let settings = list.get(item.jid);\n            if (settings && settings.get('to_sync') &&\n                    settings.get('timestamp') <= item.timestamp) {\n                settings.trigger('delete_account', true);\n            }\n        });\n        _.each(settings_list, function (settings_item) {\n            let settings = list.get(settings_item.jid);\n            if (settings) {\n                if (settings.get('to_sync')) {\n                    settings.save(_.extend({\n                        timestamp: settings_item.timestamp,\n                        deleted: false,\n                        synced: true\n                    }, settings_item.settings));\n                } else {\n                    settings.save('synced', settings_item.timestamp >= settings.get('timestamp'));\n                }\n            }\n            if (!settings && sync_all) {\n                settings = list.create_from_server(settings_item);\n            }\n        });\n        if (sync_all) {\n            let order_map = {}, max_order = 1;\n            _.each(order_list, function (order_item) {\n                order_map[order_item.jid] = order_item.order;\n                if (order_item.order > max_order) {\n                    max_order = order_item.order;\n                }\n            });\n            list.order_timestamp.save('timestamp', order_timestamp);\n            list.each((settings) => {\n                let jid = settings.get('jid'),\n                    order = order_map[jid];\n                if (!order) {\n                    max_order += 1;\n                    order = max_order;\n                }\n                settings.save('order', order);\n            });\n        }\n        this.trigger('settings_result', data);\n        this.save('last_sync', utils.now());\n    },\n\n    onAPIError: function (jqXHR, errback) {\n        let status = jqXHR.status,\n            response = jqXHR.responseJSON;\n        if (status === 403) {\n            this.save({connected: false, token: null});\n            if (response.detail === 'Invalid token') {\n                if (response.reason === 'not_found') {\n                    // TODO remove only Xabber-related XMPP accounts\n                } else if (response.reason === 'revoked') {\n                    _.each(this.list.where({to_sync: true}), function (settings) {\n                        settings.trigger('delete_account', true);\n                    });\n                } else if (response.reason === 'expired'){\n                    utils.dialogs.common(xabber.getString(\"xabber_account__login__dialog_error__header\"), xabber.getString(\"xabber_account__login__dialog_error__text\"),\n                        {ok_button: {text: xabber.getString(\"yes\")}, cancel_button: {text: xabber.getString(\"dialog_version_update__option_not_now\")}}\n                    ).done((result) => {\n                        result && this.trigger('relogin');\n                    });\n                }\n            }\n        }\n        errback && errback(response, status);\n    },\n\n    _login: function (credentials, callback, errback) {\n        let request = {\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/login/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source()),\n            success: callback,\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (credentials.token) {\n            request.headers = {\"Authorization\": \"Token \" + credentials.token};\n        } else {\n            let username = credentials.username,\n                password = credentials.password;\n            request.headers = {\"Authorization\": \"Basic \" + utils.utoa(username+':'+password)};\n        }\n        $.ajax(request);\n    },\n\n    login: function (username, password) {\n        this._login({username: username, password: password}, this.onLogin.bind(this),\n                this.onLoginFailed.bind(this));\n    },\n\n    login_by_token: function () {\n        this._login({token: this.get('token')}, this.onLoginByToken.bind(this),\n                this.onLoginByTokenFailed.bind(this));\n    },\n\n    social_login: function (credentials) {\n        $.ajax({\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/social_auth/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source(credentials)),\n            success: this.onSocialLogin.bind(this),\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, this.onSocialLoginFailed.bind(this));\n            }\n        });\n    },\n\n    revoke_token: function () {\n        let token = this.get('token');\n        if (token !== null) {\n            this._call_method('delete', '/accounts/current/tokens/', {token: token});\n        }\n        this.save({connected: false, token: null});\n        this.storage.clear();\n    },\n\n    onLoginByToken: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true, sync_request: 'silent'});\n        this.get_settings();\n        this.ready.resolve();\n    },\n\n    onLoginByTokenFailed: function (response, status) {\n        this.save('connected', false);\n        this.ready.resolve();\n    },\n\n    onLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        this.get_settings();\n    },\n\n    onLoginFailed: function (response, status) {\n        this.save('connected', false);\n        this.trigger('login_failed', response);\n    },\n\n    onSocialLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        xabber.body.setScreen('settings');\n        this.ready.resolve();\n    },\n\n    onSocialLoginFailed: function (response, status) {\n        this.save('connected', false);\n        xabber.body.setScreen('settings');\n        utils.dialogs.error(xabber.getString(\"xabber_account__login__error_auth_failed\"));\n        this.ready.resolve();\n    },\n\n    onUserData: function (data) {\n        let name, xmpp_binding_jid;\n        if (data.first_name && data.last_name) {\n            name = data.first_name + ' ' + data.last_name;\n        } else {\n            name = data.username;\n        }\n        if (data.xmpp_binding) {\n            xmpp_binding_jid = data.xmpp_binding.jid;\n        }\n        this.save({username: data.full_id, name: name, linked_email_list: data.email_list, linked_social: data.social_bindings, xmpp_binding: xmpp_binding_jid });\n    },\n\n    onSettings: function (data) {\n        let sync_request = this.get('sync_request');\n        this.save('sync_request', undefined);\n        if (sync_request === 'window') {\n            if (!xabber.sync_settings_view)\n                xabber.sync_settings_view = new xabber.SyncSettingsView({model: this});\n            this.trigger('open_sync_window', data);\n        } else {\n            this.fetch_from_server(data);\n        }\n    },\n\n    onSettingsFailed: function (response, status) {\n        this.trigger('settings_result', null);\n    },\n\n    logout: function () {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"logout_summary\"),\n                          [{name: 'delete_accounts', checked: true,\n                            text: xabber.getString(\"xabber_account__dialog_logout__option_delete_accounts\")}], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (res) {\n                if (xabber.accounts.connected.length > 0)\n                    _.each(xabber.accounts.connected, (account) => {\n                        account.set('auto_login_xa', false);\n                        account.save('auto_login_xa', false);\n                    });\n                this.revoke_token();\n                if (res.delete_accounts) {\n                    _.each(this.list.where({to_sync: true}), (settings) => {\n                        settings.trigger('delete_account', true);\n                    });\n                }\n            }\n        });\n    },\n\n    start: function () {\n        if (!this.get('connected')) {\n            this.fcm_unsubscribe();\n        }\n        this.get_settings();\n    },\n\n    fcm_subscribe: function () {\n        this._call_method('post', '/fcm/subscription/', {endpoint_key: xabber.cache.endpoint_key});\n    },\n\n    fcm_unsubscribe: function () {\n        $.ajax({\n            type: 'DELETE',\n            url: constants.API_SERVICE_URL + '/fcm/subscription/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify({endpoint_key: xabber.cache.endpoint_key})\n        });\n    }\n});\n\nxabber.APIAccountAuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$username_input = this.$('input[name=username]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.onChangeAuthenticationState, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$username_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let username = this.$username_input.val(),\n            password = this.$password_input.val();\n        if (!username) {\n            return this.errorFeedback({username: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        username = username.trim();\n        if (!password)  {\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n        this.model.login(username, password);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n    },\n\n    authFeedback: function (options) {\n        this.$username_input.switchClass('invalid', options.username)\n            .siblings('span.errors').text(options.username || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').switchClass('disabled', authentication);\n    },\n\n    onChangeAuthenticationState: function () {\n        this.updateButtons();\n        if (this.data.get('authentication')) {\n            this.model.on(\"change:connected\", this.onChangeConnected, this);\n            this.model.on(\"login_failed\", this.onLoginFailed, this);\n        } else {\n            this.model.off(\"change:connected\", this.onChangeConnected, this);\n            this.model.off(\"login_failed\", this.onLoginFailed, this);\n        }\n    },\n\n    onChangeConnected: function () {\n        if (this.model.get('connected')) {\n            this.successFeedback();\n        }\n    },\n\n    onLoginFailed: function (response) {\n        this.errorFeedback({password: (response && response.detail) || xabber.getString(\"connection__error__text_authentication_failed_short\")});\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email') {\n            this.closeModal();\n            xabber.email_auth_view.show();\n            // return;\n        }\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\n  xabber.XabberLoginByEmailPanel = xabber.APIAccountAuthView.extend({\n      className: 'login-panel add-xabber-account-panel',\n      template: templates.xabber_login_by_email,\n\n      events: {\n          \"click .btn-cancel\": \"close\",\n          \"click .btn-log-in\": \"submit\",\n          \"keyup input[name=password]\": \"keyUp\"\n      },\n\n      render: function () {\n          this.$el.openModal({\n              opacity: 0.9,\n              ready: this.onRender.bind(this),\n              complete: this.close.bind(this)\n          });\n      },\n\n      successFeedback: function () {\n          this.authFeedback({});\n          this.data.set('authentication', false);\n          this.close();\n      },\n\n      onRender: function () {\n          Materialize.updateTextFields();\n          this.$username_input.val('').focus();\n          this.$password_input.val('');\n      },\n\n      close: function (auth) {\n          this.$el.closeModal({ complete: this.hide.bind(this) });\n      }\n  });\n\nxabber.XabberLoginPanel = xabber.APIAccountAuthView.extend({\n    className: 'login-panel',\n    template: templates.xabber_login,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"submit\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-escape\": \"openXmppLoginPanel\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats');\n    },\n\n    changeLoginType: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    },\n\n    openXmppLoginPanel: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    }\n});\n\nxabber.AddAPIAccountView = xabber.APIAccountAuthView.extend({\n    className: 'login-panel add-xabber-account-panel',\n    template: templates.add_xabber_account,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-add\": \"loginXabberAccount\",\n        \"keyup input[name=password]\": \"keyUp\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-cancel\": \"closeModal\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            opacity: 0.9,\n            ready: () => {\n                this.onRender.bind(this);\n                this.$('.account-field .dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left',\n                });\n            },\n            complete: this.closeModal.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(env.templates.contacts.add_contact_account_item({jid: account.get('jid')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n        this.loginXabberAccount(account);\n    },\n\n    loginXabberAccount: function (account) {\n        account.set('auto_login_xa', true);\n        account.authXabberAccount();\n        this.closeModal();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SyncSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal sync-settings-modal noselect',\n    template: templates.sync_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .btn-sync\": \"syncSettings\",\n        \"click .btn-cancel\": \"close\",\n        \"change .sync-all\": \"changeSyncAll\",\n        \"change .sync-one\": \"changeSyncOne\",\n        \"click .sync-icon\": \"changeSyncWay\"\n    },\n\n    _initialize: function () {\n        this.settings = null;\n        this.to_sync_map = null;\n        this.model.on(\"open_sync_window\", this.render, this);\n    },\n\n    render: function (data, options) {\n        this.settings = data;\n        this.sync_all = this.model.get('sync_all');\n        this.accounts = [];\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.$('.accounts-wrap').empty();\n        let list = this.model.list,\n            accounts_map = {},\n            deleted_map = {},\n            settings_map = {},\n            order_map = {};\n        _.each(this.settings.settings_data, function (settings_item) {\n            settings_map[settings_item.jid] = settings_item;\n        });\n        this.settings_map = settings_map;\n        _.each(this.settings.order_data.settings, function (order_item) {\n            order_map[order_item.jid] = order_item.order;\n        });\n        _.each(this.settings.deleted, function (deleted_item) {\n            deleted_map[deleted_item.jid] = deleted_item.timestamp;\n        });\n\n        // Make synchronization list\n        _.each(settings_map, (obj, jid) => {\n            // pick accounts that are present on server only\n            if (!list.get(jid)) {\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: this.sync_all,\n                    sync_way: 'from_server'\n                }, obj);\n            }\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid'),\n                obj = settings_map[jid],\n                sync_way;\n            if (_.has(deleted_map, jid)) {\n                // pick local but deleted from server accounts\n                sync_way = deleted_map[jid] >= settings.get('timestamp') ? 'delete' : 'to_server';\n                accounts_map[jid] = _.extend({\n                    sync_way: sync_way,\n                    sync_choose: ['delete', 'to_server']\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            } else if (obj) {\n                // pick accounts that are present on both server and client\n                if (obj.timestamp > settings.get('timestamp')) {\n                    sync_way = 'from_server';\n                } else if (obj.timestamp < settings.get('timestamp')) {\n                    sync_way = 'to_server';\n                } else {\n                    sync_way = 'no';\n                }\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: settings.get('to_sync'),\n                    sync_way: sync_way,\n                    sync_choose: sync_way !== 'no' ? ['from_server', 'to_server'] : false\n                }, obj.settings);\n                settings.save('synced', sync_way === 'no');\n            } else {\n                // pick local accounts\n                accounts_map[jid] = _.extend({\n                    sync_way: 'to_server'\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            }\n        });\n\n        // fetch server order of accounts and merge it with local order\n        let max_order = _.max(order_map) || 0;\n        _.each(order_map, (order, jid) => {\n            accounts_map[jid].order = order;\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid');\n            if (!accounts_map[jid].order) {\n                accounts_map[jid].order = (++max_order);\n            }\n        });\n\n        this.accounts_map = accounts_map;\n        this.accounts = _.map(accounts_map, function (value, key) { return value; });\n        // sort merged list by new order value\n        this.accounts.sort(function (acc1, acc2) {\n            return acc1.order - acc2.order;\n        });\n        _.each(this.accounts, this.addAccountHtml.bind(this));\n        this.updateSyncOptions();\n    },\n\n    addAccountHtml: function (settings) {\n        let jid = settings.jid;\n        let $account_el = $(templates.sync_settings_account_item({\n            jid: jid,\n            view: this\n        }));\n        this.$('.accounts-wrap').append($account_el);\n    },\n\n    updateAccountHtml: function (account_wrap) {\n        let $account_wrap = $(account_wrap),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        this.sync_all && (account_item.to_sync = true);\n        $account_wrap.switchClass('sync', account_item.to_sync);\n        $account_wrap.find('.sync-one').prop('checked', account_item.to_sync);\n        let sync_way;\n        if (account_item.to_sync) {\n            sync_way = account_item.sync_way;\n        } else if (this.model.list.get(jid)) {\n            sync_way = 'off_local';\n        } else {\n            sync_way = 'off_remote';\n        }\n        let mdiclass = constants.SYNC_WAY_DATA[sync_way].icon,\n            $sync_icon = $account_wrap.find('.sync-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n        $account_wrap.find('.sync-tip').text(xabber.getString(constants.SYNC_WAY_DATA[sync_way].tip));\n    },\n\n    updateSyncOptions: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all,\n            accounts_map = this.accounts_map;\n        this.$('.sync-all').prop('checked', sync_all ? 'checked' : '');\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        this.$('.account-wrap').each((idx, el) => {\n            this.updateAccountHtml(el);\n        });\n    },\n\n    changeSyncAll: function (ev) {\n        let $target = $(ev.target),\n            sync_all = $target.prop('checked');\n        this.sync_all = sync_all;\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        if (sync_all) {\n            _.each(this.accounts, (account_item) => {\n                account_item.to_sync = true;\n            });\n            this.$('.account-wrap').each((idx, el) => {\n                this.updateAccountHtml(el);\n            });\n        }\n    },\n\n    changeSyncOne: function (ev) {\n        let $target = $(ev.target),\n            value = $target.prop('checked'),\n            $account_wrap = $target.closest('.account-wrap'),\n            jid = $account_wrap.data('jid');\n        this.accounts_map[jid].to_sync = value;\n        this.updateAccountHtml($account_wrap);\n    },\n\n    changeSyncWay: function (ev) {\n        let $account_wrap = $(ev.target).closest('.account-wrap'),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        if (!account_item.to_sync || !account_item.sync_choose) {\n            return;\n        }\n        let sync_choose = account_item.sync_choose,\n            idx = sync_choose.indexOf(account_item.sync_way) + 1;\n        if (idx === sync_choose.length) {\n            idx = 0;\n        }\n        account_item.sync_way = sync_choose[idx];\n        this.updateAccountHtml($account_wrap);\n    },\n\n    syncSettings: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all;\n        this.model.save('sync_all', this.sync_all);\n        _.each(this.accounts, function (account_item) {\n            let jid = account_item.jid,\n                settings = list.get(jid);\n            if (settings) {\n                settings.save('to_sync', account_item.to_sync);\n                if (sync_all) {\n                    settings.save('order', account_item.order);\n                }\n                let sync_way = account_item.sync_way;\n                if (sync_way === 'to_server') {\n                    settings.update_timestamp();\n                } else if (sync_way === 'from_server' || sync_way === 'delete') {\n                    settings.save('timestamp', 0);\n                }\n            }\n            if (!settings && account_item.to_sync) {\n                settings = list.create_from_server(\n                    _.omit(account_item, ['sync_way', 'sync_choose']));\n            }\n        });\n        this.model.synchronize_main_settings();\n        this.do_sync = true;\n        this.close();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (xabber.body.isScreen('blank')) {\n            xabber.body.setScreen('all-chats');\n        }\n    },\n\n    close: function () {\n        if (!this.do_sync) {\n            this.model.trigger('settings_result', null);\n        }\n        this.do_sync = null;\n        this.settings = null;\n        this.settings_map = null;\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.APIAccountView = xabber.BasicView.extend({\n    className: 'setting xabber-account',\n    template: templates.xabber_account,\n    avatar_size: constants.AVATAR_SIZES.XABBER_ACCOUNT,\n\n    events: {\n        \"click .account-info-wrap\": \"openAccount\",\n        \"click .btn-login\": \"login\",\n        \"click .btn-logout\": \"logout\",\n        \"click .btn-set-password\": \"setPassword\",\n        \"click .btn-sync-settings\": \"synchronize\",\n        \"click .social-linked-header\": \"changeExpanded\",\n        \"click .btn-unlink\": \"unlinkSocial\",\n        \"click .btn-link\": \"linkSocial\",\n        \"click .btn-verify-email\": \"verifyEmail\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-block-wrap.xabber-account'));\n        this.$tab = this.parent.$('.xabber-account-tab');\n        this.updateForConnectedStatus();\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n        this.model.on(\"change:username\", this.updateName, this);\n        this.model.on(\"change:name\", this.updateAvatar, this);\n        this.model.on(\"change:connected\", this.updateForConnectedStatus, this);\n        this.model.on(\"change:last_sync\", this.updateLastSyncInfo, this);\n        this.model.on(\"change:linked_email_list\", this.updateSocialBindings, this);\n        this.model.on(\"change:linked_social\", this.updateSocialBindings, this);\n        this.model.on(\"relogin\", this.login, this);\n        this.data.on(\"change:sync\", this.updateSyncButton, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', false);\n    },\n\n    render: function () {\n        this.data.set('sync', false);\n        this.$('span.errors ').html(\"\");\n        this.updateLastSyncInfo();\n        this.updateSocialBindings();\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n    },\n\n    changeExpanded: function () {\n        this.data.set('expanded', (this.data.get('expanded')) ? false : true);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.social-linked-wrap').showIf(expanded);\n    },\n\n    updateSocialBindings: function () {\n        let linked_emails = this.model.get('linked_email_list'),\n            linked_social = this.model.get('linked_social');\n        this.$('.email-linked').remove();\n        this.$('.social-account').each(function (idx, item) {\n            let $social_item = $(item);\n            $social_item.addClass('not-linked');\n            $social_item.find('.synced-info').text(xabber.getString(\"title_not_linked_account\"));\n            $social_item.find('.btn-link').text(xabber.getString(\"action_connect\")).removeClass('btn-unlink');\n        });\n        _.each(linked_emails, (email) => {\n            let email_id = email.id,\n                email_address = email.email,\n                is_verified = email.verified,\n                email_item_html = $(templates.linked_email_item({email_id: email_id, email: email_address, verified: is_verified, color: this.default_color}));\n            email_item_html.insertBefore(this.$('#email.not-linked'));\n        });\n        _.each(linked_social, (social) => {\n            let social_provider = social.provider,\n                social_name = social.first_name + \" \" + social.last_name;\n            this.$('.'+ social_provider + '-linked').removeClass('not-linked');\n            this.$('.' + social_provider + '-linked .btn-link').text(xabber.getString(\"action_disconnect\")).addClass('btn-unlink');\n            this.$('.'+ social_provider + '-linked .synced-info').html($(`<div class=\"name one-line\">${social_name}</div><div class=\"verified-status one-line\">${xabber.getString(\"title_linked_account\", [social_provider])}</div>`));\n        });\n    },\n\n    linkSocial: function (ev) {\n        if ((this.model.get('token'))&&(!$(ev.target).hasClass('btn-unlink'))) {\n            let social_elem = $(ev.target).closest('.social-linked-item-wrap'),\n                provider = social_elem.attr('id');\n            if (provider === 'email') {\n                utils.dialogs.ask_enter_value(xabber.getString(\"xabber_account__dialog_add_email__header\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_add_email__hint_enter_email\")}, { ok_button_text: xabber.getString(\"action_connect\")}).done((mail) => {\n                    if (mail) {\n                        this.model._call_method('POST', '/accounts/current/email_list/', {email: mail},\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list');\n                                email_list.push(mail_data);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            },\n                            (jqXHR, textStatus, errorThrown) => {\n                                this.$('span.errors ').text(jqXHR.email[0]);\n                            });\n                    }\n                });\n            }\n            else {\n                this.openAccount();\n            }\n        }\n    },\n\n    verifyEmail: function (ev) {\n        let $target = $(ev.target),\n            $email_html = $target.closest('.social-linked-item-wrap'),\n            email_address = $email_html.data('email');\n        utils.dialogs.ask_enter_value(xabber.getString(\"title_email_confirm\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_confirm_email__hint_enter_code\")}, { ok_button_text: xabber.getString(\"button_confirm\"), resend_button_text: xabber.getString(\"button_resend_link\"), resend_to: email_address}).done((code) => {\n            if (code) {\n                if (code === email_address) {\n                    this.model._call_method('POST', '/accounts/current/email_list/', {email: code});\n                }\n                else {\n                    this.model._call_method('POST', '/accounts/email_confirmation/', {code: code},\n                        (mail_data) => {\n                            let email_list = mail_data.email_list;\n                            this.model.set('linked_email_list', email_list);\n                            this.updateSocialBindings();\n                        }, (jqXHR, textStatus, errorThrown) => {\n                            this.$('span.errors').text(jqXHR.code[0]);\n                        });\n                }\n            }\n        });\n    },\n\n    unlinkSocial: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.hasClass('btn-verify-email')) {\n            let $social_html = $target.closest('.social-linked-item-wrap');\n            let provider = $social_html.attr('id'),\n                is_email = $social_html.data('email');\n            if (is_email) {\n                let email_address = $social_html.data('email');\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_email__header\"), xabber.getString(\"title_delete_email\"), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('DELETE', '/accounts/current/email_list/' + $social_html.data('id') + '/', null,\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list'),\n                                    deleted_mail_index = email_list.indexOf(email_list.find(email => email.id === $social_html.data('id')));\n                                email_list.splice(deleted_mail_index, 1);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n            else if (provider !== 'email') {\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_social__header\"), xabber.getString(\"title_delete_social\", [provider]), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('POST', '/accounts/current/social_unbind/', {provider: provider},\n                            () => {\n                                let social_list = this.model.get('linked_social'),\n                                    deleted_social_index = social_list.indexOf(social_list.find(social => social.provider === provider));\n                                social_list.splice(deleted_social_index, 1);\n                                this.model.set('linked_social', social_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n        }\n    },\n\n    updateName: function () {\n        this.$('.account-info-wrap .name').text(this.model.get('username'));\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n    },\n\n    updateAvatar: function () {\n        let name = this.model.get('name'),\n            image = this.model.get('image') || utils.images.getDefaultAvatar(name);\n        this.$('.circle-avatar').setAvatar(utils.images.getCachedImage(image), this.avatar_size);\n    },\n\n    updateForConnectedStatus: function () {\n        let connected = this.model.get('connected');\n        this.$tab.switchClass('online', connected)\n                 .switchClass('offline', !connected);\n        this.$('.linked-social-accounts-and-emails').showIf(connected);\n        this.$('.account-info-wrap').showIf(connected);\n        this.$('.sync-wrap').showIf(connected);\n        if (connected) {\n            this.updateName();\n            this.updateAvatar();\n            this.updateSyncButton();\n            this.updateLastSyncInfo();\n        }\n        this.$('.btn-login').hideIf(connected);\n        this.$('.btn-more').showIf(connected);\n    },\n\n    updateSyncButton: function () {\n        let sync = this.data.get('sync');\n        this.$('.btn-sync .button').hideIf(sync);\n        this.$('.btn-sync .preloader-wrapper').showIf(sync);\n    },\n\n    updateLastSyncInfo: function () {\n        let last_sync = this.model.get('last_sync');\n        if (last_sync) {\n            let time_delta = utils.now() - last_sync;\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__text\", [env.moment(env.moment.now() - 1000*time_delta).fromNow()]));\n        } else {\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__not_synced\"));\n        }\n    },\n\n    synchronize: function () {\n        if (!this.data.get('sync')) {\n            this.data.set('sync', true);\n            this.model.once(\"settings_result\", function () {\n                this.data.set('sync', false);\n            }, this);\n            this.model.save('sync_request', 'window');\n            this.model.get_settings();\n        }\n    },\n\n    login: function () {\n        if (xabber.add_api_account_view && xabber.accounts.connected.length > 1)\n            xabber.add_api_account_view.show();\n        else {\n            let account = xabber.accounts.connected[0];\n            if (account) {\n                account.set('auto_login_xa', true);\n                account.authXabberAccount();\n            }\n        }\n    },\n\n    logout: function () {\n        this.model.logout();\n    },\n\n    onPasswordResetFailed: function () {\n        utils.dialogs.error(xabber.getString(\"password_reset_need_email\"));\n    },\n\n    setPassword: function () {\n        let email_list = this.model.get('linked_email_list');\n        if (email_list) {\n            let verified_email = email_list.find(mail => mail.verified === true);\n            if (email_list.indexOf(verified_email) != -1) {\n                $.ajax({\n                    type: 'POST',\n                    url: constants.API_SERVICE_URL + '/accounts/password_reset_request/',\n                    contentType: \"application/json\",\n                    dataType: 'json',\n                    data: JSON.stringify({email: verified_email.email}),\n                    success: () => {\n                        utils.dialogs.notify(xabber.getString(\"button_reset_pass\"), xabber.getString(\"password_reset_success\", [verified_email.email]));\n                    },\n                    error: this.onPasswordResetFailed.bind(this)\n                });\n            }\n            else\n                this.onPasswordResetFailed();\n        }\n        else\n            this.onPasswordResetFailed();\n    },\n\n    openAccount: function () {\n        utils.openWindow(constants.XABBER_ACCOUNT_URL + '/?token=' + this.model.get('token'));\n    }\n});\n\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.api_account = new this.APIAccount({id: 'api-account'},\n            {\n                storage_name: this.getStorageName(), fetch: 'before',\n                settings_list: this.account_settings_list\n            });\n    }\n\n        this.xabber_login_panel = xabber.login_page.addChild(\n            'xabber_login', this.XabberLoginPanel, {model: this.api_account});\n\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.settings_view.addChild('api-account', this.APIAccountView,\n            {model: this.api_account});\n\n        this.add_api_account_view = new this.AddAPIAccountView({model: this.api_account});\n        this.email_auth_view = new xabber.XabberLoginByEmailPanel({\n            parent: this.add_api_account_view,\n            model: this.api_account\n        });\n    }\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n    if (msg && msg.includes && msg.includes('policy-violation') && log_level === Strophe.LogLevel.ERROR)\n        utils.dialogs.error(msg);\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('secret').t(old_token.token).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('XABBER_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('EXPLICIT_MESSAGE_ENCRYPTION', 'urn:xmpp:eme:0');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-wrap',\n    template: templates.vcard_edit,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n        \"click .btn-vcard-back\": \"render\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function () {\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-back').addClass('hidden');\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')},\n    pretty_datetime_date = (timestamp) => { return utils.pretty_datetime(timestamp, 'MMM DD, YYYY')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                    auto_login_xa: this.get('auto_login_xa'),\n                    to_sync: xabber.api_account && xabber.api_account.get('sync_all')\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.vcard_edit = new xabber.VCardEditView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            if (xabber.api_account)\n                xabber.api_account.on(\"settings_result\", function (result) {\n                    if (result && this.settings.get('token')) {\n                        this.save({auth_type: 'token'});\n                    }\n                    this.trigger('start');\n                }, this);\n            else\n                xabber.on(\"bind_xmpp_accounts\", () => {\n                    if (this.settings.get('token'))\n                        this.save({auth_type: 'token'});\n                    this.trigger('start');\n                }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isReconnecting: function () {\n            return this.session && this.session.get('reconnecting');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails && res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        verifyXabberAccount: function (code, callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_auth/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ code: code, jid: this.connection.jid}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data.token);\n                }\n            };\n            $.ajax(request);\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            jid += '/xabber-web-' + xabber.get('client_id');\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            }\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        connectXabberAccount: function () {\n            let iq_private_storage = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE}).c('storage', {xmlns:'xabber:options'});\n            this.sendIQFast(iq_private_storage, (iq) => {\n                if (($(iq).find('option').attr('type') == 'bind') && ($(iq).find('option').text() == 1)) {\n                    this.authXabberAccount();\n                }\n            });\n        },\n\n        authXabberAccount: function (callback) {\n            this.requestPassword((data) => {\n                this.xabber_auth = { api_jid: data.api_jid, request_id: data.request_id };\n                if (this.code_requests.length > 0) {\n                    let verifying_code = this.code_requests.find(verifying_mess => (verifying_mess.jid === this.xabber_auth.api_jid && verifying_mess.id === this.xabber_auth.request_id));\n                    if (verifying_code) {\n                        let idx_verifying_code = this.code_requests.indexOf(verifying_code);\n                        (idx_verifying_code > -1) && this.code_requests.splice(idx_verifying_code, 1);\n                        this.verifyXabberAccount(verifying_code.code, (data) => {\n                            this._waiting_code = false;\n                            let iq_send_auth_mark = $iq({type: 'set'})\n                                .c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE})\n                                .c('storage', {xmlns:'xabber:options'})\n                                .c('option', {type: 'bind'}).t(1);\n                            if (xabber.api_account) {\n                                xabber.api_account.save('token', data);\n                                xabber.api_account.login_by_token();\n                            }\n                            this.sendIQFast(iq_send_auth_mark);\n                            callback && callback();\n                        });\n                    }\n                    if (this.code_requests.length) {\n                        let msg_attrs = {\n                            from_jid: this.code_requests[0].jid,\n                            message: xabber.getString(\"xmpp_confirm__text_message__verification_code_is\", [Number(this.code_requests[0].code)]),\n                            is_archived: false\n                        };\n                        this.createMessageFromIQ(msg_attrs);\n                    }\n                }\n            });\n        },\n\n        requestPassword: function(callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_code_request/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ jid: this.connection.jid, type: 'iq'}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data);\n                }\n            };\n            this._waiting_code = true;\n            $.ajax(request);\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({connected: true, reconnected: true,\n                    reconnecting: false, conn_retries: 0});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.settings_right && this.settings_right.children && this.settings_right.children.account_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.settings_right.children.account_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.settings_right.children.account_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.settings_right.children.account_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.settings_right.children.account_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function () {\n            if (!this.auth_view){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function (callback) {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('public-label').text(),\n                        omemo_id = $token.find('omemo-id').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address, omemo_id: omemo_id});\n                });\n                this.x_tokens_list = tokens_list;\n                callback && callback();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid')) {\n                xabber.trigger('quit_accounts');\n                return;\n            }\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                if (this._fast_interval_worker)\n                    this._fast_interval_worker.terminate();\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n                if (this.connection && !this.connection.disconnecting\n                    && this.connection.authenticated && this.connection.connected){\n                    this.getVCard();\n                    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n                        this.trigger('ready_to_get_roster');\n                }\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: this.retraction_version};\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQ(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                if (msg.collection && msg.collection.chat && msg.collection.chat.get('group_chat'))\n                    $(msg_iq).append(\"<retry to='\" + msg.collection.chat.get('jid') + \"' xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                else\n                    $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            let has_settings_right = !_.isUndefined(this.settings_right);\n            if (!this.settings_left)\n                this.settings_left = new xabber.AccountSettingsLeftView({model: this});\n            if (!has_settings_right)\n                this.settings_right = new xabber.AccountSettingsRightView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings', {\n                account: this, right: right, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_settings_right) {\n                this.trigger('render_settings');\n                this.settings_right.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_right.$('.blocklist-info')[0]\n                });\n                this.settings_right.addChild('account_password_view', xabber.ChangeAccountPasswordView, {\n                    model: this,\n                    el: this.settings_right.$('.change-password-container')[0]\n                });\n            }\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_left && this.settings_left.$el.attr('data-color', color);\n            if (this.settings_right) {\n                this.settings_right.$el.attr('data-color', color);\n            }\n            this.vcard_edit.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings) {\n            this.show_settings_after_delete = show_settings;\n            xabber.body.setScreen('all_chats', {right_contact: ''});\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid'))\n                xabber.trigger('quit_accounts');\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.omemo){\n                this.omemo.destroy();\n                this.omemo = undefined;\n            }\n            this.groups_settings\n            if (this.groups_settings){\n                this.groups_settings.clearStorage();\n            }\n            if (this.groupchat_settings){\n                this.groupchat_settings.destroy();\n                this.groupchat_settings = undefined;\n            }\n            if (this.chat_settings){\n                this.chat_settings.destroy();\n                this.chat_settings = undefined;\n            }\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations && this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster && this.cached_roster.deleteDataBase();\n            this.cached_server_features && this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'))\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        testGalleryFileSlot: function(file, callback) {\n            if (this.get('gallery_token') && this.get('gallery_url')){\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: {size: file.size, name: file.name, hash: sha1(bytes)},\n                        success: (response) => {\n                            console.log(response);\n                            callback && callback(response);\n                        },\n                        error: (response) => {\n                            console.log(response);\n                            callback && callback(response.responseJSON);\n                        }\n                    });\n                }\n                reader.onerror = (e) => {\n                    console.log(reader.error);\n                    callback && callback(false)\n                };\n                reader.readAsDataURL(file);\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_auth', true)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response) {\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'))\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                }\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    if (file.duration)\n                        formData.append('duration', file.duration);\n                    if (file.size)\n                        formData.append('duration', file.size);\n                    if (file.voice)\n                        formData.append('media_type', file.type + '+voice');\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/avatar/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id)\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({id: file_id}),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n        xabber.api_account && xabber.api_account.on(\"settings_result\", function (result) {\n            result && this.trigger('update_order');\n        }, this);\n    },\n\n    onQuit: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount();\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    onQuitAccounts: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length || xabber.api_account && xabber.api_account.get('connected'));\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings');\n            } else {\n                xabber.body.setScreen('all-chats');\n                xabber.chats_view.showAllChats();\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            this.settings_list.order_timestamp.save('timestamp', utils.now());\n            xabber.api_account.synchronize_order_settings();\n        }\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .account-item-avatar-wrap': 'filterChats',\n        'click .show-account-settings': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n        xabber.updateFaviconConnected();\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        xabber.updateFaviconConnected();\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    filterChats: function (ev) {\n        ev.stopPropagation();\n        let is_single = $(ev.target).closest('.single-item').length;\n        if (is_single){\n            this.model.showSettings();\n        }\n        xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        if (xabber.toolbar_view.data.get('account_filtering') != this.model.get('jid'))\n            this.$el.addClass('active');\n        xabber.toolbar_view.showChatsByAccount(this.model);\n    },\n\n    showSettings: function () {\n        this.model.showSettings();\n    },\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        this.$el.find('.single-item').removeClass('single-item');\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n            if (this.model.enabled.length === 1)\n                this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        });\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.$el.find('.single-item').removeClass('single-item');\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function () {\n        this.model.showSettings('vcard_edit');\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .tabs .tab\": \"onTabClick\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .gallery-file\": \"onClickFile\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            this.getFiles(this.current_options)\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            if (!after_avatar_update){\n                this.$('.tabs .list-variant[data-value=\"image\"]').hideIf(!(response.images && response.images.used))\n                if (response.images && response.images.used)\n                    this.$('.tabs .list-variant[data-value=\"image\"]').addClass('tab')\n                else\n                    this.$('.tabs .list-variant[data-value=\"image\"]').removeClass('tab')\n            }\n            this.$('.storage-label-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.tabs .list-variant[data-value=\"video\"]').hideIf(!(response.videos && response.videos.used))\n            if (response.videos && response.videos.used)\n                this.$('.tabs .list-variant[data-value=\"video\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"video\"]').removeClass('tab')\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.tabs .list-variant[data-value=\"voice\"]').hideIf(!(response.voices && response.voices.used))\n            if (response.voices && response.voices.used)\n                this.$('.tabs .list-variant[data-value=\"voice\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"voice\"]').removeClass('tab')\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.tabs .list-variant[data-value=\"files\"]').hideIf(!(response.files && response.files.used))\n            if (response.files && response.files.used)\n                this.$('.tabs .list-variant[data-value=\"files\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"files\"]').removeClass('tab')\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            this.$('.tabs .indicator').remove();\n            this.$('.tabs').tabs();\n            this.$('.indicator').addClass('ground-color-500');\n            if (after_deletion){\n                if (!this.$('.tabs .list-variant.tab').length) {\n                    return;\n                }\n                !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('grid')\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        }\n        this.$('.tabs .list-variant a').removeClass('active');\n        this.$('.tabs .list-variant[data-value=\"' + file_type + '\"] a').addClass('active');\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.tab'),\n            file_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.tab .active').closest('.tab').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.tab .active').closest('.tab').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.tab .active').closest('.tab').attr('data-value'))\n            return;\n        if (!response.total_objects && response.type != 'avatars'){\n            if (response.type){\n                let tab = this.$('.tabs .list-variant[data-value=' + response.type + ']');\n                tab.removeClass('tab');\n                tab.addClass('hidden');\n                this.$('.tabs .indicator').remove();\n                this.$('.tabs').tabs();\n                this.$('.indicator').addClass('ground-color-500');\n            }\n        }\n        if (!response.items || !response.items.length){\n            !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            return;\n        }\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove()\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let $gallery_file = $(templates.media_gallery_account_file({file: item, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(xabber.getString(\"no_files\"))\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            this.updateStorage(true);\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({id: file_id}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    deleteFilesFiltered: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.property-variant'),\n                days = $target.attr('data-date'),\n                date = new Date();\n            days && date.setDate(date.getDate() - days)\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && date && date.toISOString().split('T') && date.toISOString().split('T')[0])\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({date_lte: date.toISOString().split('T')[0]}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.AccountSettingsLeftView = xabber.BasicView.extend({\n    className: 'account-settings-left-wrap',\n    template: templates.settings_left,\n    ps_selector: '.settings-tabs-wrap',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-back\": \"showSettings\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .main-info-wrap .status\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\"\n    },\n\n    _initialize: function () {\n        this.status_field = new xabber.StatusMessageWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.$el.switchClass('vcard-edit', options.right == 'vcard_edit');\n        this.$('.settings-tab[data-block-name=\"tokens\"]').hideIf(this.model.get('auth_type') !== 'x-token');\n        this.$('.settings-tab').removeClass('active');\n        this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`).addClass('active');\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n\n        this.updateCSS();\n        return this;\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.updateNameCSS();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info-wrap .status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        // this.$('.settings-tab[data-block-name=\"xmpp-resources\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"server-info\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"blocklist\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"groups-info\"]').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings');\n        xabber.trigger('update_placeholder');\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    }, () => {\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            block_name = $tab.data('block-name');\n        if (block_name === 'vcard_edit'){\n            this.model.showSettings(block_name, 'vcard');\n            this.$('.settings-tab').removeClass('active');\n            $tab.addClass('active');\n        }\n        else if (block_name === 'media-gallery'){\n            this.model.showSettings(null, block_name);\n            this.model.settings_right.gallery_view.$('.tabs .list-variant:not(.hidden)').first().click();\n        }\n        else\n            this.model.showSettings(null, block_name);\n    },\n\n    deleteAccount: function () {\n        let dialog_options = [];\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            dialog_options = [{name: 'delete_settings',\n                checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"dialog_delete_account__label_delete_synced_settings\")}];\n        }\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            dialog_options, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            if (res.delete_settings && xabber.api_account) {\n                if (xabber.api_account.get('xmpp_binding') === this.model.get('jid'))\n                    xabber.api_account._call_method('DELETE', '/accounts/current/client-settings/', {jid: this.model.get('jid')});\n                else\n                    xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n            this.model.deleteAccount();\n        });\n    }\n});\n\nxabber.AccountSettingsRightView = xabber.BasicView.extend({\n    className: 'account-settings-right-wrap',\n    template: templates.settings_right,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"change .color-scheme input[type=radio][name=account_color]\": \"changeColor\",\n        \"click .token-wrap .btn-revoke-token\": \"revokeXToken\",\n        \"click .tokens .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-delete-files\": \"deleteFilesFiltered\",\n        \"click .all-sessions .device-encryption.active\": \"openFingerprint\",\n        \"click .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function () {\n        // this.resources_view = this.addChild('resources', xabber.AccountResourcesView,\n        //     {model: this.model.resources, el: this.$('.xmpp-resources')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSynchronizationBlock, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"update_omemo_devices\", this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateXTokens, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        if (options.block_name){\n            this.$('.settings-block-wrap').addClass('hidden');\n            this.$('.settings-block-wrap.'+options.block_name).removeClass('hidden');\n            this.$('.settings-panel-head span.settings-panel-head-title').text(this.$('.settings-block-wrap.'+options.block_name).attr('data-header'));\n            this.$('.btn-block').switchClass('hidden2', options.block_name != 'blocklist-info');\n            this.$('.media-gallery-button.btn-more').hideIf(options.block_name != 'media-gallery');\n            this.$('.device-more-button.btn-more').hideIf(options.block_name != 'tokens' || !this.model.settings.get('omemo'));\n            let dropdown_settings = {\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'right'\n            };\n            this.$('.dropdown-button').dropdown(dropdown_settings);\n            if (options.block_name === 'media-gallery') {\n                this.$('.btn-delete-files-variants').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    hover: true,\n                    belowOrigin: true,\n                });\n            }\n        }\n        this.scrollToChild(this.$('.settings-block-wrap.'+options.block_name));\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        return this;\n    },\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status'),\n            status_message = account.getStatusMessage();\n        this.$('.main-resource .status').attr('data-status', status);\n        this.$('.main-resource .status-message').text(status_message);\n    },\n\n    updateOmemoDevices: function () {\n        if (this.model.omemo && this.model.omemo.store){\n            let identity_key = this.model.omemo.store.get('identityKey');\n            if (identity_key){\n                this.$('.btn-manage-devices').removeClass('hidden2');\n            } else {\n                this.model.omemo.store.once('change:identityKey', () => {\n                    this.$('.btn-manage-devices').removeClass('hidden2');\n                }, this);\n            }\n        }\n        else\n            this.$('.btn-manage-devices').addClass('hidden2');\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.$('.xabber-account-features-wrap').showIf(xabber.api_account && xabber.api_account.get('connected'));\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    renderAllXTokens: function () {\n        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n        this.$('.panel-content-wrap .tokens .orphaned-fingerprints-wrap').html(\"\");\n        $(_.sortBy(this.model.x_tokens_list, '-last_auth')).each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime_date(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    pretty_token.is_omemo = this.model.omemo ? true : false\n                    let $cur_token_html = $(templates.current_token_item(pretty_token));\n                    this.$('.panel-content-wrap .tokens .current-session').append($cur_token_html);\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item(pretty_token));\n            this.$('.panel-content-wrap .tokens .all-sessions').append($token_html);\n            if (this.model.omemo) {\n                !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n                let omemo_device_id = token.omemo_id ? token.omemo_id : Number(pretty_token.token_uid.slice(0,8));\n                this.omemo_own_devices.updateTrustDevice(Number(omemo_device_id), $token_html);\n            } else {\n                if (token.omemo_id){\n                    $token_html.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n                    $token_html.find('.device-encryption .mdi-lock').removeClass('hidden');\n                }\n            }\n        });\n        if (this.$('.panel-content-wrap .tokens .all-sessions').children().length)\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').removeClass('hidden');\n        else\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').addClass('hidden');\n    },\n\n    openFingerprint: function (ev) {\n        if (this.model.omemo){\n            let $target = $(ev.target).closest('.device-encryption'),\n                is_own = $target.hasClass('is-own');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.closest('.token-wrap').attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.closest('.token-wrap').attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), is_own);\n        }\n    },\n\n    updateXTokens: function () {\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.panel-content-wrap .tokens').addClass('hidden');\n            this.$('.panel-content-wrap .tokens .sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.model.getAllXTokens(() => {\n            this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n            if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                this.renderAllXTokens();\n            }\n        });\n    },\n\n    revokeXToken: function (ev) {\n        let $target = $(ev.target).closest('.token-wrap'),\n            token_uid = $target.data('token-uid');\n        this.model.revokeXToken([token_uid], () => {\n            if (this.model.get('x_token')){\n                if (this.model.get('x_token').token_uid === token_uid) {\n                    this.model.deleteAccount();\n                    return;\n                }\n                this.model.getAllXTokens(() => {\n                    this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n                    if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                        this.renderAllXTokens();\n                    }\n                });\n            }\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens(() => {\n                        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.device-more-button').switchClass('hidden', !enabled);\n        if (!this.model.omemo){\n            this.$('.btn-manage-devices').addClass('hidden2');\n        }\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n            this.updateXTokens();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n        this.updateXTokens();\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n            xabber.api_account && xabber.api_account.synchronize_main_settings();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n                xabber.api_account && xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = ev.target.value;\n        this.model.settings.update_settings({color: value});\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.unblockSelected();\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.deleteFilesFiltered(ev);\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateEnabled();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$el.find('.sync-marker').showIf(this.model.settings.get('to_sync'));\n    },\n\n    showSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.SettingsAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSyncState, this);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.accounts-head-wrap').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n        this.$('.accounts-head-wrap').showIf(this.model.length);\n        this.parent.$('.settings-tab[data-block-name=\"xmpp-accounts\"] .settings-block-name')\n            .text(this.model.length === 1 ? xabber.getString(\"account\") : xabber.getString(\"settings__menu_item__xmpp_account\") );\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-head').showIf(connected);\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$('.sync-head').hideIf(!connected);\n        this.$('.sync-marker-wrap').hideIf(!connected);\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatar\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    saveAvatar: function (ev) {\n        if (this.registration && this.registration_view){\n            let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.generated = true;\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            }\n        } else {\n            let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176)),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = templates.emojis;\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"render\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    _initialize: function () {\n        this.account = this.model\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        return this;\n    },\n\n    render: function (options) {\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm)\n            .siblings('span.errors').text(options.password_confirm || '');\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.render();\n    },\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        Materialize.updateTextFields();\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1)\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                        this.endAuth();\n                    } else {\n                        this.stepped_auth_complete = true\n                        if (this.first_features_received)\n                            this.successFeedback();\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false)\n        this.account.trigger('start');\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings = xabber.wide_panel.addChild('account_settings',\n        this.NodeView, {classlist: 'settings-panel account-settings-panel'});\n    this.acc_settings_left = xabber.account_settings.addChild('left',\n        this.Container, {classlist: 'account-settings-left-container'});\n    this.acc_settings_right = xabber.account_settings.addChild('right',\n        this.Container, {classlist: 'account-settings-right-container'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_view.addChild('accounts', this.SettingsAccountsBlockView,\n        {model: this.accounts, el: this.settings_view.$('.xmpp-accounts')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-name one-line\"/>')\n                .append('<div class=\"supports\"/>');\n    },\n\n    _initialize: function () {\n        this.render();\n        this.$el.appendTo(this.model.collection.account.settings_right.$('.capabilities'));\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.supports').text(supports ? xabber.getString(\"account_settings__server_info__status_available\") : xabber.getString(\"account_settings__server_info__status_unavailable\"))\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.connection = this.account.connection;\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            xabber.get('client_name'),\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.GEOLOC, 'XEP-0080: User Location');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    }\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        });\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._main_interval_worker)\n        this._main_interval_worker.terminate();\n\n    this._main_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._main_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime main to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            this._main_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime main to ping: ' + downtime);\n            this.connection && this.connection.ping.ping(this.get('domain'));\n        }\n    };\n\n    this._main_interval_worker.postMessage({});\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._fast_interval_worker)\n        this._fast_interval_worker.terminate();\n\n    this._fast_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._fast_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_fast_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime fast to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            this._fast_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime fast to ping: ' + downtime);\n            this.fast_connection && this.fast_connection.ping.ping(this.get('domain'));\n        }\n    };\n    this._fast_interval_worker.postMessage({});\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    VanillaQR = env.VanillaQR,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:name\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated') && !attrs.is_deleted)\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            cached_info = cached_info || {};\n            let roster_info = {\n                jid: this.get('jid'),\n                in_roster: !_.isUndefined(this.get('in_roster')) ? this.get('in_roster') : cached_info.in_roster,\n                groups: this.get('groups'),\n                subscription: !_.isUndefined(this.get('subscription')) ? this.get('subscription') : cached_info.subscription,\n                roster_name: !_.isUndefined(this.get('roster_name')) ? this.get('roster_name') : cached_info.roster_name,\n                subscription_request_out: this.get('subscription_request_out'),\n                subscription_request_in: this.get('subscription_request_in'),\n                name: this.get('name'),\n                vcard_updated: this.get('vcard_updated')\n            }, full_jid = this.get('full_jid');\n            if (this.get('photo_hash') || this.get('image'))\n                _.extend(roster_info, {\n                    photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                    avatar_priority: this.get('avatar_priority'),\n                    avatar: this.get('image')\n                });\n            if (full_jid)\n                roster_info.resource = Strophe.getResourceFromJid(full_jid);\n            this.account.cached_roster.putInRoster(roster_info);\n        });\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat')) {\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    onDestroy: function () {\n        if (this.account && this.account.groupchat_settings && this.participants) {\n            this.participants.reset();\n            this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item, {my_info: true});\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('group_chat') ? this.get('full_jid') : this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let avatar_hash = sha1(image.base64),\n            iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                .c('item', {id: avatar_hash})\n                .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(image.base64),\n            iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                .c('item', {id: avatar_hash})\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n        this.account.sendIQFast(iq_pub_data, () => {\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }, (data_error) => {\n                errback && errback(data_error);\n            });\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n            if (this.get('group_chat')){\n                this.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n            }\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        let chat = this.account.chats.getChat(this);\n                        this.removeFromRoster();\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    let chat = this.account.chats.getChat(this);\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    setActiveStateSendInterval: function () {\n        let stanza = $msg({to: this.get('jid'), type: 'chat'}).c('active', {xmlns: Strophe.NS.CHATSTATES});\n        clearTimeout(this._sending_active_chatstate_timeout);\n        clearInterval(this._sending_active_chatstate_interval);\n        this._sending_active_chatstate_timeout = setTimeout(() => {\n            this._sending_active_chatstate_interval = setInterval(() => {\n                this.account.sendMsg(stanza);\n            }, constants.PRESENT_INTERVAL);\n        }, constants.PRESENT_INTERVAL)\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            if (this.details_view && !this.details_view.child('participants')) {\n                this.details_view = new xabber.GroupChatDetailsView({model: this});\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            if (this.details_view && this.details_view.isVisible() && group_chat_info.online_members_num != prev_group_info.online_members_num)\n                this.trigger('update_participants');\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                let chat = this.account.chats.getChat(this),\n                    sync_deleted = this.get('sync_deleted');\n                this.removeFromRoster();\n                if (!sync_deleted){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n    getMessageByStanzaId: function (stanza_id, callback, options) {\n        options = options || {};\n        let queryid = uuid(),\n            account = this.account,\n            is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            receiver = this.get('group_chat') ? this.get('full_jid') || this.get('jid') : this.account.get('jid'),\n            iq = $iq({type: 'set', to: receiver})\n                .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up()\n                .c('field', {'var': 'ids'})\n                .c('value').t(stanza_id).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        let handler = conn.addHandler((message) => {\n            let $msg = $(message);\n            if ($msg.find('result').attr('queryid') === queryid)\n                callback && callback($msg);\n            return true;\n        }, Strophe.NS.MAM);\n        this.account.sendIQFast(iq, () => {\n                conn.deleteHandler(handler);\n            }, () => {\n                conn.deleteHandler(handler);\n            }\n        );\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n            iq.c('field', {'var': `with-tags`});\n            if (options.filter_image)\n                iq.c('value').t('image').up();\n            if (options.filter_video)\n                iq.c('value').t('video').up();\n            if (options.filter_voice)\n                iq.c('value').t('voice').up();\n            if (options.filter_files)\n                iq.c('value').t('document').up();\n            iq.up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = options && options.cached_message? $message.find('content') : $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [], cached_stanza_id;\n        options && options.cached_stanza_id && (cached_stanza_id = options.cached_stanza_id);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id') || cached_stanza_id ,\n                        id: $file.children('gallery-id').text(),\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let user_info = message.get('user_info') || {},\n                chat_content = this.account.chats.get(this.hash_id).item_view.content,\n                is_scrolled = chat_content.isScrolledToBottom(),\n                msg_author = user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            if (is_scrolled)\n                chat_content.scrollToBottom();\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsView = xabber.BasicView.extend({\n    className: 'details-panel contact-details-panel',\n    template: templates.contact_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n        \"change .subscription-info-wrap input\": \"onChangedSubscription\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.resources_view = this.addChild('resources',\n            xabber.ContactResourcesView, {model: this.model.resources,\n                el: this.$('.resources-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.model.on(\"change\", this.update, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.setButtonsWidth();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-delete').showIf(in_roster);\n        this.$('.btn-block-wrap i').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap)').switchClass('non-active', is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    onChangedSubscription: function (ev) {\n        let contact = this.model,\n            $target = $(ev.target),\n            is_checked = $target.prop('checked');\n        if (is_checked) {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.askRequest();\n            else {\n                contact.set('subscription_preapproved', true);\n                contact.acceptRequest();\n            }\n        }\n        else {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.declineSubscription();\n            else\n                contact.declineSubscribe();\n        }\n    },\n\n    openChat: function (ev) {\n        if (ev && ($(ev.target).closest('.button-wrap').hasClass('non-active') || $(ev.target).closest('.button-wrap').length && this.model.get('blocked')))\n            return;\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        this.openChat();\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.ContactDetailsViewRight = xabber.ContactDetailsView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.main-info').removeClass('fixed-scroll');\n        this.$('.main-info .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block:not(.edit-bottom-block) .tabs').removeClass('fixed-scroll');\n        this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.buttons-wrap.fixed-scroll').removeClass('hidden2');\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.main-info .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        if (!this.$('.bottom-block:not(.edit-bottom-block)').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 160\n            || this.$('.bottom-block:not(.edit-bottom-block)').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 110) {\n            this.$('.bottom-block:not(.edit-bottom-block)').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.main-info .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.main-info .block-name.second-text').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block)').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-70},\n            200,\n            () => {\n                this.onScroll();\n                this.ps_container.animate(\n                    {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-70},\n                    0,\n                );\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsView = xabber.BasicView.extend({\n    className: 'details-panel groupchat-details-panel',\n    template: templates.group_chats.group_chat_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"editDefaultRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.participants = this.addChild('participants', xabber.ParticipantsView, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesView, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusView, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit = new xabber.DefaultRestrictionsView({model: this.model});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateList('participants');\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n        this.setButtonsWidth();\n        return this;\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    editDefaultRestrictions: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active'))\n            this.default_restrictions_edit.open();\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                let chat = this.account.chats.getChat(contact);\n                contact.removeFromRoster();\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    },\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.buttons-wrap.fixed-scroll').removeClass('hidden2');\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 160\n            || this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 110) {\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                let chat = this.account.chats.getChat(contact);\n                contact.removeFromRoster();\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.main-info').removeClass('fixed-scroll');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').removeClass('fixed-scroll');\n        this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n        this.$('.main-info .buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.main-info .header-buttons .block-name.second-text').text($target.text())\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 70},\n                400,\n                () => {\n                    this.onScroll();\n                    this.ps_container.animate(\n                        {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 70},\n                        0,\n                    );\n                });\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({}, () => {\n                this.$el.html(\"<div class='gallery-files'></div>\");\n                this.updateMedia();\n            });\n        }\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 350;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    getMediaFromDecryptedMessages: function () {\n\n        let dfd = new $.Deferred();\n\n        dfd.done(() => {\n            if (this.filter_type === 'filter_image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            else if (this.filter_type === 'filter_video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            else if (this.filter_type === 'filter_voice')\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n            else if (this.filter_type === 'filter_files')\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n            else\n                this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        }).fail(() => {\n            this.temporary_items = [];\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia()\n        });\n\n        if (this.account.omemo && this.account.omemo.cached_messages){\n\n            let cached_messages = this.account.omemo.cached_messages.getMessages(this.contact);\n\n            for (let [key, value] of Object.entries(cached_messages)) {\n                let msg_items = this.contact.getFilesFromStanza($(value), {cached_message: true, cached_stanza_id: key});\n                if (msg_items.length)\n                    this.temporary_items = this.temporary_items.concat(msg_items);\n            }\n\n            if (this.temporary_items.length){\n\n                let filtered_items = [],\n                    items_count = 0;\n\n                this.temporary_items.forEach((item, idx) => {\n                    if (this.filter_type === 'filter_image' && constants.MIME_TYPES.image.includes(item.media_type) ||\n                        this.filter_type === 'filter_video' && constants.MIME_TYPES.video.includes(item.media_type) ||\n                        this.filter_type === 'filter_voice' && constants.MIME_TYPES.audio.includes(item.media_type) ||\n                        this.filter_type === 'filter_files' &&\n                        !(\n                            constants.MIME_TYPES.image.includes(item.media_type) ||\n                            constants.MIME_TYPES.video.includes(item.media_type) ||\n                            constants.MIME_TYPES.audio.includes(item.media_type)\n                        )){\n                        if (this.filter_type === 'filter_image' && item.sources && item.sources[0]){\n                            this.chat.messages.decryptFile(item.sources[0], item.key).then((result) => {\n                                item.sources[0] = result;\n                                item.thumbnail = null;\n                                filtered_items = filtered_items.concat([item]);\n                                items_count++;\n                                if (items_count === this.temporary_items.length){\n                                    this.temporary_items = filtered_items;\n                                    dfd.resolve();\n                                }\n                            });\n\n                        } else {\n                            filtered_items = filtered_items.concat([item]);\n                            items_count++;\n                        }\n                    } else\n                        items_count++;\n                    if (items_count === this.temporary_items.length){\n                        this.temporary_items = filtered_items;\n                        dfd.resolve();\n                    }\n                });\n            } else {\n                dfd.reject();\n            }\n        } else {\n            dfd.reject();\n        }\n\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, is_encrypted: this.encrypted, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        if (this.filter_type === 'filter_image')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_images\")}`);\n        else if (this.filter_type === 'filter_video')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_videos\")}`);\n        else if (this.filter_type === 'filter_voice')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_voice_messages\")}`);\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted)\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                if (messages.length)\n                    $(templates.preloader()).appendTo(this.$('.gallery-files'));\n                else {\n                    this.loading_messages = false;\n                    callback && callback();\n                    return;\n                }\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length || $elem.closest('.audio-control-time').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').length && $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => item.voice)\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                this.account.chats.openChat(contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block').position().top + this.ps_container.scrollTop() - 70},\n            400,\n            () => {\n                this.onScroll();\n                this.ps_container.animate(\n                    {scrollTop: this.$('.bottom-block').position().top + this.ps_container.scrollTop() - 70},\n                    0,\n                );\n            });\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name.second-text').addClass('fade-out');\n        this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        this.$('.btn-back').removeClass('btn-top');\n        this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block').removeClass('fixed-scroll');\n        this.$('.bottom-block .participants-search-form').removeClass('fixed-scroll');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (!this.$('.bottom-block').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 160\n            || this.$('.bottom-block').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 110) {\n            this.$('.bottom-block').addClass('fixed-scroll');\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block').removeClass('fixed-scroll');\n            this.$('.bottom-block .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                            this.close();\n                            this.parent.participants._render();\n                        },\n                        (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                        this.parent.participants._render();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                this.account.chats.openChat(contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid'));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.attr('id');\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.contact.get('jid'), id);\n                    this.trigger(\"participants_updated\");\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item, options) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n        (this.contact.get('incognito_chat') && options && options.my_info === true) && (attrs.jid = this.account.get('jid'));\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false, 'is_accepted': undefined});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.pres('subscribed');\n        contact.set('known', true);\n        contact.set('removed', false);\n        setTimeout(() => {\n            contact.pres('subscribe');\n        }, 500);\n        this.blockInvitation();\n        contact.getMyInfo();\n        this.openChat();\n        contact.trigger('remove_invite', contact);\n        let chat = this.account.chats.getChat(this.model);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n        contact.trigger('remove_invite', contact);\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field label': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add)\n            this.$('.groups-wrap').hideIf(false)\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').addClass('visible');\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n            this.$('.new-group-name input').addClass('visible');\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.new-group-name input').removeClass('visible');\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field && this.group_name_field.updateValue(true);\n        this.group_description_field && this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n        });\n        this.model.getBlockedParticipants((response) => {\n            this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n            });\n            this.model.getBlockedParticipants((response) => {\n                this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        this.settings_view.show();\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = options.roster_version || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION},\n            cached_conversations_exclude = options.cached_conversations_exclude || [];\n        if (options.stamp)\n            request_attrs.stamp = options.stamp;\n        delete(options.stamp);\n        delete(options.cached_conversations_exclude);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync, cached_conversations_exclude).then(() => {\n            });\n        });\n    },\n\n    syncCachedConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(cached_conversations).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync, cached_conversations);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync, cached_conversations) {\n        if (!$(item).length){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (cached_conversations){\n            $(cached_conversations).each((idx, conv) => {\n                if (!(conv.account_conversation_type && conv.account_conversation_type.split))\n                    return;\n                let cached_conv_type_jid = conv.account_conversation_type.split('/')[0];\n                if ((cached_conv_type_jid === jid) && (conv.account_conversation_type !== ($(item).attr('jid') +  '/' + $(item).attr('type')))){\n                    if ($item.attr('type') === Strophe.NS.GROUP_CHAT || conv.account_conversation_type.includes(Strophe.NS.GROUP_CHAT)){\n                        this.account.cached_sync_conversations.removeFromCachedConversations(conv.account_conversation_type);\n                    }\n                };\n            });\n        }\n        if (jid === this.account.get('jid'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito, is_deleted: $item.attr('status') === 'deleted'}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,},\n            current_chat_timestamp = chat.get('last_sync_timestamp');\n        if (current_chat_timestamp && current_chat_timestamp > chat_timestamp){\n            console.log('old_sync_conv');\n            console.log(item);\n            return;\n        }\n        chat.set('last_sync_timestamp', chat_timestamp);\n        if (message.children('stanza-id').length\n            && message.children('stanza-id').attr('id')\n            && chat.retracted_msg_id_list.includes(message.children('stanza-id').attr('id'))){\n            return;\n        };\n        chat.set('sync_type', type);\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            if (!(chat.last_message && chat.last_message.get('message')))\n                chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            } else {\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            contact && contact.details_view && contact.details_view.isVisible() && xabber.body.setScreen(xabber.body.screen.get('name'), {right: undefined});\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n                contact.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(contact.get('jid'));\n            }\n        }\n        else\n            contact && contact.set('sync_deleted', false);\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.trigger('update_last_read_msg', {sync_update: true});\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (request_with_stamp && chat.retraction_version !== 0 && chat.retraction_version < msg_retraction_version)\n            chat.trigger(\"get_retractions_list\");\n        msg_retraction_version && (chat.retraction_version = msg_retraction_version);\n        if (request_with_stamp && chat.item_view && chat.item_view.content && !is_invite) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (!(encrypted && !this.account.omemo)){\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && !(msg.get('type') === 'system') && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))//TODO: change to timestamp checking\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                    msg.get('stanza_id') && chat.set('synced_msg', msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: async function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync, cached_conversations_exclude) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        this.account.set('last_sync', sync_timestamp);\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        xabber.chats_view.hideChatsFeedback();\n        if (!request_with_stamp)\n            this.account.chats.getSavedChat();\n        if (is_first_sync)\n            this.account.set('first_sync', sync_timestamp);\n        if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                if (!is_last_sync){\n                    cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                        return $(this).attr('jid') +  '/' + $(this).attr('type');\n                    }).toArray());\n                    res = res.filter(item => !cached_conversations_exclude.includes(item.account_conversation_type));\n                    this.syncCachedConversations(null, request_with_stamp, is_first_sync, res);\n                }\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                this.account.cached_sync_conversations.putInCachedConversations({\n                    account_conversation_type: 'last_sync_timestamp',\n                    timestamp: sync_timestamp,\n                });\n                if (!is_last_sync){\n                    this.account.sendPresence();\n                    let saved_chat = this.account.chats.getSavedChat();\n                    saved_chat.set('opened', true);\n                    saved_chat.item_view.updateLastMessage();\n                    this.account.getAllMessageRetractions((result) => {\n                        let retract_version = $(result).find(`query[xmlns=\"${Strophe.NS.REWRITE}\"]`).attr('version');\n                        if (retract_version > this.account.retraction_version)\n                            this.account.retraction_version = retract_version;\n                    })\n                    this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n                }\n            });\n        }\n        else if ($(iq).find('conversation').length) {\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray());\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                let sync_options = {max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after};\n                if (request_with_stamp)\n                    sync_options.stamp = request_with_stamp;\n                if (is_last_sync)\n                    sync_options.last_version_sync = true;\n                if (cached_conversations_exclude && cached_conversations_exclude.length)\n                    sync_options.cached_conversations_exclude = cached_conversations_exclude;\n                this.syncFromServer(sync_options);\n            });\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n            this.account.dfd_presence.resolve();\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver');\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item);\n        });\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.cached_roster.putInRoster({\n                    jid: 'roster_version',\n                    is_version: true,\n                    version: this.roster_version\n                });\n            }\n        }\n        return true;\n    },\n\n    onRosterItem: function (item) {\n        let jid = item.getAttribute('jid');\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n        }\n        if (subscription === 'from')\n            attrs.subscription_request_in = false;\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        if (!this.roster)\n            this.roster = this.account.roster;\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .blocked-item\": \"onTabClick\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n        this.hideTabs();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n        this.updateIndicator();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.$('.blocked-contact input:checked').length;\n        this.parent.$('.btn-unblock-selected').hideIf(!has_changes)\n        this.parent.$('.btn-deselect-blocked').hideIf(!has_changes)\n        this.parent.$('.btn-block').hideIf(has_changes)\n    },\n\n    unblockSelected: function (ev) {\n        let selected = this.$('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    onTabClick: function (ev) {\n        let tab = $(ev.target).closest('.blocked-item'),\n            tab_name = $(ev.target).closest('.blocked-item').attr('data-tab-name');\n        this.$('.blocked-item a').removeClass('active');\n        tab.find('a').addClass('active');\n        this.$('.blocked-items-container').addClass('hidden');\n        this.$('.' + tab_name).removeClass('hidden');\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    hideTabs: function () {\n        this.$('.tabs').hideIf(this.$('.blocked-item:not(.hidden)').length === 1)\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let tab_name = $(item).closest('.blocked-items-container').addClass('hidden').attr('data-tab-name');\n            this.$('.' + tab_name).addClass('hidden').removeClass('tab');\n        });\n        if (this.$('.blocked-item.hidden .active').length){\n            this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n\n        }\n        this.hideTabs();\n        this.updateUnblockButton();\n        this.updateIndicator();\n    },\n\n    onContactAdded: function (attrs) {\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.$('.invitations-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-invitations-wrap').find('.blocked-invitations').append(tmp);\n        }\n        else if (attrs.domain) {\n            this.$('.domains-item').removeClass('hidden').addClass('tab');\n            let $domain_wrap = this.$('.blocked-domains-wrap'),\n                $desc = $domain_wrap.find('.blocked-item-description');\n            $domain_wrap.find('.blocked-domains').append(tmp);\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        else {\n            this.$('.contacts-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-contacts-wrap').find('.blocked-contacts').append(tmp);\n            let $desc = this.$('.blocked-contacts-wrap .blocked-item-description');\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        this.$('.placeholder').addClass('hidden');\n        this.hideTabs();\n        this.updateIndicator();\n        if (this.$('.blocked-items-container.hidden').length === 3)\n            this.$('.blocked-list:not(:empty)').closest('.blocked-items-container').removeClass('hidden');\n        this.isVisible() && this.parent.updateScrollBar();\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        let blocked_list = $elem.closest('.blocked-list'),\n            reg = new RegExp(('\\\\,\\\\s' + jid + '|' + jid + '\\\\,\\\\s' + '|' + jid)),\n            blocked_contacts_desc = $elem.closest('.blocked-contacts-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description'),\n            blocked_domains_desc = $elem.closest('.blocked-domains-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description');\n        $elem.closest('.blocked-invitations-wrap').showIf(blocked_list.children().length > 1);\n        blocked_contacts_desc.text(blocked_contacts_desc.text().replace(reg, \"\"));\n        blocked_domains_desc.text(blocked_domains_desc.text().replace(reg, \"\"));\n        $elem.detach();\n        this.$('.placeholder').hideIf(this.account.blocklist.length());\n        this.parent.updateScrollBar();\n        this.hideEmptyContainers();\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            let contact = this.getContactForItem(selection);\n            contact && contact.showDetails();\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el = this.model.account.settings_right.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"contact_list__placeholder\"));\n        }\n    },\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        let jid = this.$('input[name=username]').val().trim();\n        this.$el.append($(templates.preloader()))\n        this.$('.btn-add').addClass('hidden-disabled')\n        this.$('input[name=contact_name]').val('');\n        if (this.account.connection && this.account.connection.connected) {\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            contact.trigger('presence', contact, 'subscribe_from');\n            contact.trigger(\"open_chat\", contact, {right_force_close: true});\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-v108-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n\n    this.cached_roster.on(\"database_open_failed\", () => {\n        this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: 0}));\n        this.trigger('roster_created');\n    });\n\n    this.cached_roster.on(\"database_opened\", () => {\n        this.cached_roster.getFromRoster('roster_version', (res) => {\n            let roster_version = res && res.version ? res.version : 0;\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: roster_version}));\n            this.trigger('roster_created');\n        });\n    });\n\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            this.resources.reset();\n            this.contacts.each(function (contact) {\n                contact.resources.reset();\n                contact.resetStatus();\n            });\n            this.cached_roster.getAllFromRoster((roster_items) => {\n                $(roster_items).each((idx, roster_item) => {\n                    if (roster_item.jid === 'roster_version'){\n                        return;\n                    }\n                    this.contacts.mergeContact(roster_item);\n                });\n                if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                    let options = {};\n                    this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                        let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                        !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                        last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                        this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                        this.roster.getRoster();\n                    });\n                }\n                else {\n                    this.roster.getRoster();\n                }\n                this.blocklist.getFromServer();\n            });\n        });\n        console.log(this.roster);\n        if (this.roster) {\n            dfd.resolve();\n        } else {\n            this.once('roster_created', () => {\n                dfd.resolve();\n            });\n        }\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    if (this.roster) {\n        this.roster.registerHandler();\n    } else {\n        this.once('roster_created', () => {\n            this.roster.registerHandler();\n        });\n    }\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.roster_settings_view = xabber.settings_view.addChild(\n        'roster_settings', this.RosterSettingsView, {model: this._roster_settings});\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id change:stanza_id change:archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id',  this.get('stanza_id') || this.get('archived_id') || this.get('origin_id') || this.get('msgid'));\n    },\n\n    destroyOnEcho: function () {\n        this.set('state', constants.MSG_DELIVERED);\n        if (this.collection && this.collection.chat && this.collection.chat.item_view && this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content.removeMessage(this);\n        else\n            this.destroy();\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection && this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    }\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.chat = options.chat;\n        this.account = options.account;\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n        if (!message){\n            message = this.findWhere({'origin_id': origin_id});\n        }\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.is_unread_archived && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched)\n            return message;\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived,\n                is_unread_archived: options.is_unread_archived,\n                is_between_anchors: options.is_between_anchors,\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        id: $file.children('gallery-id').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.is_unread_archived && (attrs.type !== 'system')){\n            let last_read_msg = this.find(m => this.chat.get('last_read_msg') && (m.get('stanza_id') === this.chat.get('last_read_msg') || m.get('contact_stanza_id') === this.chat.get('last_read_msg')));\n            if (last_read_msg){\n                if (Number(moment(attrs.time)) > last_read_msg.get('timestamp'))\n                    attrs.is_unread = true\n            } else {\n                attrs.is_unread = true\n            }\n        }\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (options.carbon_copied && options.encrypted && this.chat && this.chat.item_view && !this.chat.item_view.content)\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if (options.echo_msg && message) {\n            message.destroyOnEcho();\n        }\n        if ((options.replaced || options.encrypted && options.is_unread_archived) && message) {\n            message.set(attrs);\n            return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.xabber.org:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n          });\n      },\n\n      createVideoStream: function () {\n          navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account, chat: this});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.retracted_msg_id_list = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n        this.on(\"update_last_read_msg\", this.onChangedLastReadMsg, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n    onChangedLastReadMsg: function (options) {\n        if (this.get('prev_last_read_msg') && this.get('last_read_msg') && this.get('prev_last_read_msg') !== this.get('last_read_msg')){\n            if (this.item_view && !this.item_view.content){\n                this.item_view.content = new xabber.ChatContentView({chat_item: this.item_view});\n            }\n            this.item_view.content._no_scrolling_event = true;\n            let query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                is_first: true,\n                sync_update: options && options.sync_update ? true : false,\n                var: [\n                    {var: 'after-id', value: this.get('prev_last_read_msg')},\n                    {var: 'before-id', value: this.get('last_read_msg')},\n                ]\n            };\n            this.requestHistoryBetweenAnchors(query);\n\n        }\n        this.set('prev_last_read_msg', this.get('last_read_msg'));\n    },\n\n    requestHistoryBetweenAnchors: function (query) {\n        this.item_view.content.MAMRequest(query, (success, messages, rsm) => {\n            if (rsm.complete)\n                this.set('last_sync_unread_id', this.get('last_read_msg'));\n            if (query.is_first && !query.sync_update) {\n                let read_count = Number(rsm.count) + 1;\n                read_count = this.get('const_unread') - read_count;\n                (read_count < 0) && (read_count = 0);\n                this.set('const_unread', read_count);\n            }\n            if (!rsm.complete && (rsm.count > messages.length)){\n                query.after = rsm.last;\n                query.is_first = false;\n                this.requestHistoryBetweenAnchors(query);\n            }\n            _.each(messages, (message) => {\n                let message_item = this.account.chats.receiveChatMessage(message,\n                        {\n                            is_archived: true,\n                            is_between_anchors: true,\n                        }\n                    );\n                message_item && message_item.set('is_unread', false)\n            });\n            if (rsm.complete){\n                let last_read_msg = this.messages.find(m => this.get('last_read_msg') && (m.get('stanza_id') === this.get('last_read_msg') || m.get('contact_stanza_id') === this.get('last_read_msg'))),\n                    deferred = new $.Deferred();\n                deferred.done(() => {\n                    last_read_msg && last_read_msg.set('is_unread', false);\n                    if (this.item_view.content.isVisible()){\n                        this.item_view.content._long_reading_timeout = true;\n                        this.item_view.content.scrollToUnread();\n                    } else {\n                        this.set('show_new_unread', true);\n                    }\n                    this.item_view.content._no_scrolling_event = false;\n                });\n                if (!last_read_msg){\n                    this.contact.getMessageByStanzaId(this.get('last_read_msg'), ($message) => {\n                        last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        deferred.resolve()\n                    });\n                } else {\n                    deferred.resolve()\n                }\n            }\n        }, (err) => {\n            console.log('error');\n        });\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        if (this.item_view && this.item_view.content && stanza_id)\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${unique_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        message.set('stanza_id', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio')) {\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"jingle__system_message__no_devices_to_answer\")\n            });\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy();\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQ(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.synced_msg){\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                $message.find('time').attr('stamp') && this.set('timestamp', $message.find('time').attr('stamp'));\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n            if (options.is_archived)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall();\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio('busy');\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else{\n            return this.messages.createFromStanza($message, options);\n        }\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && !options.encrypted && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id),\n            dfd = new $.Deferred;\n\n        dfd.done(() => {\n            if (message) {\n                if (options.searched_messages)\n                    message.set('searched_message', false);\n                let stanza_id = message.get('stanza_id');\n                this.messages_view = new xabber.MessageContextView({\n                    contact: this.contact,\n                    mention_context: options.mention,\n                    model: this,\n                    stanza_id_context: stanza_id,\n                    encrypted: options.encrypted\n                });\n                this.account.context_messages.add(message);\n                this.messages_view.messagesRequest({after: stanza_id}, () => {\n                    let screen = 'all-chats';\n                    if (options.mention)\n                        screen = 'mentions';\n                    else if (options.message)\n                        screen = xabber.body.screen.get('name');\n                    xabber.body.setScreen(screen, {\n                        right: 'message_context',\n                        model: this,\n                    }, {\n                        right_contact_save: true\n                    });\n                });\n            }\n\n        })\n        if (!message) {\n            message = messages.models.find(item => {\n                return item.get('origin_id') === unique_id;\n            })\n            if (!message) {\n                this.contact.getMessageByStanzaId(unique_id, ($message) => {\n                    if (options.encrypted && this.account.omemo) {\n                        let omemo_dfd = new $.Deferred;\n                        omemo_dfd.done(($msg, msg_options) => {\n                            msg_options = msg_options || {};\n                            msg_options.searched_message = true;\n                            message = this.account.chats.receiveChatMessage($msg[0], msg_options);\n                            dfd.resolve();\n                        }).fail(() => {\n                            dfd.resolve();\n                        });\n                        message = this.account.omemo.receiveChatMessage($message, {\n                            searched_message: true,\n                            gallery: true,\n                        }, omemo_dfd);\n\n                    } else {\n                        message = this.account.chats.receiveChatMessage($message, {\n                            searched_message: true,\n                        });\n                        dfd.resolve();\n                    }\n                }, {encrypted: options.encrypted});\n\n            } else {\n                dfd.resolve()\n            }\n        } else {\n            dfd.resolve()\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                this.setMessagesDelivered(msg.get('timestamp'));\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DISPLAYED));\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg){\n                enc_chat.receiveCarbonsMarker($marker);\n                return;\n            }\n        }\n        if (this.get('const_unread') && this.get('last_read_msg')){\n            let last_read_msg_id = this.get('last_read_msg'),\n                last_read_msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === last_read_msg_id || m.get('contact_stanza_id') === last_read_msg_id)),\n                deferred = new $.Deferred(),\n                second_deferred = new $.Deferred(),\n                new_last_read_msg = msg;\n            second_deferred.done(() => {\n                if (last_read_msg.get('timestamp') < new_last_read_msg.get('timestamp')){\n                    this.set('last_read_msg', new_last_read_msg.get('stanza_id'))\n                    this.trigger('update_last_read_msg');\n                }\n            });\n            deferred.done(() => {\n                if (!new_last_read_msg){\n                    this.contact.getMessageByStanzaId(stanza_id, ($message) => {\n                        new_last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        second_deferred.resolve()\n                    });\n                } else {\n                    second_deferred.resolve()\n                }\n            });\n            if (!last_read_msg){\n                this.contact.getMessageByStanzaId(last_read_msg_id, ($message) => {\n                    last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                    deferred.resolve()\n                });\n            } else {\n                deferred.resolve()\n            }\n        }\n        if (msg_idx > -1) {\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {\n                        id: (this.get('group_chat') && contact_stanza_id || stanza_id),\n                        xmlns: Strophe.NS.REWRITE,\n                        symmetric: symmetric,\n                        type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {\n                id: user_id,\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: true\n            });\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: symmetric\n        };\n        retract_attrs.conversation = this.get('jid');\n        this.get('encrypted') && (retract_attrs.type = 'encrypted');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if(chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if(chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.content_placeholder = new xabber.ChatContentPlaceholderView();\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    render: function () {\n        if (this.model.get('saved') && (this.$('.chat-title').text() !== xabber.getString(\"saved_messages__header\"))) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n        }\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 && !(!msg.get('synced_from_server') && msg.get('encrypted') && this.model.get('encrypted'))){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n        this.updateLastMessage();\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n        this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        if (!this.model.get('active') && this.model.item_view && this.model.item_view.content && this.model.item_view.content.bottom && this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea().trim()){\n            let draft_message = this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea();\n            this.$('.last-msg').html(draft_message).prepend($(`<span class=\"text-color-700\">${xabber.getString(\"draft\")}: </span>`));\n            this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n            return;\n        }\n        msg || (msg = this.model.last_message);\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=text-color-700/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        type: Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT,\n                        symmetric: false,\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0], msg);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max){\n                      if (this.parent &&  this.parent.data && !this.parent.data.get('visible') || this.parent.model.get('search_hidden'))\n                          return;\n                      else\n                          this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  }\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.emptyChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\nxabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .back-to-unread:not(.back-to-bottom)\": \"scrollToUnreadWithButton\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if ((this.model.sync_created && this.model.last_message) || options.new_message && !options.new_message.get('synced_from_server') && options.new_message.get('encrypted') && this.model.get('encrypted')){\n            this.model.last_message && this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        this._is_scrolled_bottom = true;\n        this._long_reading_timeout = false;\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n    render: function () {\n        this.cancelSearch();\n        if (this._prev_scrolltop)\n            this.scrollTo(this._prev_scrolltop);\n        else\n            this.scrollToBottom();\n        this.onScroll();\n        this.updateCounter();\n        this.updateContactStatus();\n        this.updateWaveforms();\n        this.onUpdatePlyr();\n        if (this.contact) {\n            this.contact.get('group_chat') && this.updatePinnedMessage();\n            this.subscription_buttons.render();\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n    onTrustedChanged: function (message) {\n        let trusted = message.get('trusted'),\n            $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n        (trusted === null) && (trusted = 'none');\n        $message.attr('data-trust', trusted);\n    },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both' && this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n            this.model.get('active') && this.onChangedActiveStatus();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat') && !this.contact.get('invitation')) {\n            if (active){\n                this.contact.setActiveStateSendInterval();\n            }\n            else{\n                clearTimeout(this.contact._sending_active_chatstate_timeout);\n                clearInterval(this.contact._sending_active_chatstate_interval);\n            }\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readVisibleMessages: function () {\n        if (!this.isVisible())\n            return;\n        if (this.$('.chat-message.unread-message').length && xabber.get('focused') && !xabber.get('idle')){\n            let last_visible_unread_msg;\n            this.$('.chat-message.unread-message').each((idx, msg) => {\n                if ($(msg).isVisibleInContainer(this.$('.chat-content'))) {\n                    last_visible_unread_msg = msg;\n                }\n            });\n            if (last_visible_unread_msg){\n                this.readMessage(this.model.messages.get($(last_visible_unread_msg).data('uniqueid')), $(last_visible_unread_msg));\n            }\n        }\n    },\n\n    hideMessagesAfterSkipping: function () {\n        if (this.model.get('last_sync_unread_id')){\n            let synced_message = this.model.get('synced_msg'),\n                $synced_message = this.$(`.chat-message[data-uniqueid=\"${synced_message.get('unique_id')}\"]`);\n            $synced_message.addClass('after-skip-message');\n            $synced_message.prevAll('.chat-message.after-skip-message').removeClass('after-skip-message');\n            $synced_message.nextAll('.chat-message:not(.after-skip-message)').addClass('after-skip-message');\n        } else {\n            this.$('.chat-message.after-skip-message').removeClass('after-skip-message');\n        }\n    },\n\n    readMessage: function (last_visible_msg, $last_visible_msg) {\n        clearTimeout(this._read_last_message_timeout);\n        this._read_last_message_timeout = setTimeout(() => {\n            this.model.sendMarker(last_visible_msg.get('msgid'), 'displayed', last_visible_msg.get('stanza_id'), last_visible_msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', last_visible_msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', last_visible_msg.get('stanza_id'));\n            xabber.toolbar_view.recountAllMessageCounter();\n        }, 1000)\n\n        if (last_visible_msg.get('is_unread_archived') || this.model.last_message && (last_visible_msg.get('unique_id') === this.model.last_message.get('unique_id')) || this.model.get('const_unread')){\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread'))),\n                read_count = 0;\n\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                    read_count++;\n                }\n            });\n            read_count = this.model.get('const_unread') - read_count;\n            (read_count < 0) && (read_count = 0);\n            this.model.set('const_unread', read_count);\n        } else {\n            let unread_messages = _.clone(this.model.messages_unread.models);\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                }\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n        setTimeout(() => {\n            $last_visible_msg.removeClass('unread-message-background');\n        }, 1000);\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        this.model.set('show_new_unread', false);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            msg.set('is_unread', false);\n            msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n            msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n                msg.set('is_unread', false);\n                msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n                msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n            }\n        }\n        if (!unread_messages.length) {\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread')));\n            _.each(unread_messages, (msg) => {\n                msg.set('is_unread', false);\n            });\n        }\n    },\n\n    showUnreadMarker: function () {\n        this.$('.unread-marker').remove();\n        if (this.$(`.chat-message.unread-message`).length){\n            let text = xabber.getQuantityString(\"new_chat_messages_no_number\", this.model.get('const_unread') + this.model.get('unread')),\n                $template = $(templates.unread_marker({text: text}));\n            $template.insertBefore(this.$(`.chat-message.unread-message:first`));\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    scrollToUnread: function () {\n        let $last_read_msg = this.$(`.chat-message.unread-message:first`);\n        $last_read_msg.length && (this.scrollTo(this.getScrollTop()\n            - (this.$el.height() * 0.2) + $last_read_msg.offset().top));\n    },\n\n    scrollToUnreadWithButton: function () {\n        this.scrollToUnread();\n        this.$('.back-to-unread').addClass('back-to-bottom');\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.back-to-unread-counter').text(unread || '');\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n    },\n\n    onScrollY: function () {\n        this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n        this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n        this._is_scrolled_bottom = this.isScrolledToBottom();\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    onScroll: function (ev, is_focused) {\n        if (!this.isVisible() || this._no_scrolling_event)\n            return;\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        if (this.$('.unread-marker').length) {\n            let marker = this.$('.unread-marker');\n            if (marker[0].offsetTop < this._scrolltop)\n                marker.remove();\n        }\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        let scroll_read_timer = this._long_reading_timeout || is_focused ? 100 : 100;\n        clearTimeout(this._onscroll_read_messages_timeout);\n        this._onscroll_read_messages_timeout = setTimeout(() => {\n            this.readVisibleMessages();\n        }, scroll_read_timer)\n        this._long_reading_timeout = false;\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n        this.hideMessagesAfterSkipping();\n        if (this._scrolltop > this._prev_scrolltop && this.model.get('last_sync_unread_id') && this.getPercentScrolled() > 0.2) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    backToBottom: function () {\n        this.model.set('last_sync_unread_id', undefined);\n        this._no_scrolling_event = true;\n        this.removeAllMessagesExceptLast();\n        this.readMessages();\n        this.model.resetUnread();\n        this.model.set('history_loaded', false);\n        this.loadPreviousHistory();\n        this._long_reading_timeout = false;\n        this._no_scrolling_event = false;\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq, _interval, handler;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE)) {\n            iq.c('field', {'var': `conversation-type`});\n            if (this.model.get('encrypted')){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let sendMAMRequest = function(func_conn) {\n                handler = func_conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let _delete_handler_timeout = setTimeout(() => {\n                    console.log('handler deleted');\n                    func_conn.deleteHandler(handler);\n                }, 14000);\n                let callb = function (res) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        account.chats.onCompletedMAMRequest(deferred);\n                        let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                        if ($fin.length && $fin.attr('queryid') === queryid) {\n                            let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                            rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                            callback && callback(success, messages, rsm);\n                        }\n                    },\n                    errb = function (err) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        xabber.error(\"MAM error\");\n                        xabber.error(err);\n                        account.chats.onCompletedMAMRequest(deferred);\n                        errback && errback(err);\n                    };\n                console.log('trying to send')\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            };\n            let is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection;\n\n            if (conn.connected){\n                sendMAMRequest(conn);\n            }\n            let send_counter = 0;\n            _interval = setInterval(() => {\n                is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                    && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline';\n                conn = is_fast ? account.fast_connection : account.connection;\n                conn && console.log(conn.connected);\n                if (!conn || send_counter >= 1){\n                    clearInterval(_interval);\n                    errback && errback('No connection or too many attempts');\n                    return;\n                }\n                if (conn.connected && send_counter < 1){\n                    send_counter++;\n                    sendMAMRequest(conn);\n                }\n            }, 15000);\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history || options.unread_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n        this.MAMRequest(query, (success, messages, rsm) => {\n            clearTimeout(this._load_history_timeout);\n            this._loading_history = false;\n            this.hideHistoryFeedback();\n            if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                this.getMessageArchive({after: rsm.last}, {missed_history: true});\n            if (options.unread_history){\n                if (messages.length)\n                    this.model.set('last_sync_unread_id', $(messages[messages.length - 1]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id'));\n                else\n                    this.model.set('last_sync_unread_id', undefined);\n            }\n            if (options.unread_history_first && messages.length){\n                let first_unread_msg_stanza_id = $(messages[0]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id')\n                this.model.set('first_unread_msg_stanza_id', first_unread_msg_stanza_id);\n                this.getMessageArchive({\n                    fast: true,\n                    max: xabber.settings.mam_messages_limit,\n                    before : first_unread_msg_stanza_id\n                }, {unread_history_before: true});\n            }\n            if (this.model.get('group_chat')) {\n                if (this.contact && !this.contact.my_info)\n                    this.contact.getMyInfo();\n            }\n            else {\n                if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                    this.contact.getLastSeen();\n            }\n            if (options.previous_history && (messages.length < query.max) && success) {\n                this.model.set('history_loaded', true);\n            }\n            if (options.previous_history || options.unread_history_before || !this.model.get('first_archive_id')) {\n                rsm.first && this.model.set('first_archive_id', rsm.first);\n            }\n            if (options.last_history || !this.model.get('last_archive_id')) {\n                rsm.last && this.model.set('last_archive_id', rsm.last);\n            }\n            _.each(messages, function (message) {\n                let loaded_message = account.chats.receiveChatMessage(message,\n                    _.extend({\n                        is_archived: true,\n                        is_unread_archived: options.unread_history ? true : undefined,\n                    }, options)\n                );\n                if (loaded_message) counter++;\n            });\n            if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                this.getMessageArchive(_.extend(query, {\n                    max: xabber.settings.mam_messages_limit,\n                    before: this.model.get('first_archive_id') || ''\n                }), {previous_history: true});\n            }\n            if (options.unread_history_before){\n                if (this.model.get('encrypted')){\n                    //TODO: make async func to start opening chat after all messages been handled in enc chat\n                    setTimeout(() => {\n                        this.model._wait_load_unread_history.resolve();\n                    }, 1000);\n                } else\n                    this.model._wait_load_unread_history.resolve();\n            }\n        }, (err) => {\n            if (options.previous_history) {\n                this._loading_history = false;\n                this.showHistoryFeedback(true);\n            }\n            if (options.unread_history_before || options.unread_history_first){\n                this.model._wait_load_unread_history.resolve();\n            }\n        });\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: this.model.get('first_archive_id') || '' },\n            {previous_history: true\n            });\n    },\n\n    loadUnreadHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.model.set('loading_unread_history', true)\n        this.getMessageArchive({\n            fast: true,\n            max: xabber.settings.mam_messages_limit,\n            after: this.model.get('last_read_msg'),\n        }, {\n            unread_history_first: true,\n            unread_history: true,\n        });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg, pinned_message);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    OGPLinkOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && !message.get('is_unread_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (!(message.get('synced_from_server') || (message.get('is_archived') && !message.get('missed_msg')))) {\n            if (message.get('missed_msg')){\n                let last_read_msg = this.model.messages.find(m => this.model.get('last_read_msg') && (m.get('stanza_id') === this.model.get('last_read_msg') || m.get('contact_stanza_id') === this.model.get('last_read_msg'))),\n                    deferred = new $.Deferred();\n                deferred.done(() => {\n                    if (last_read_msg && message.get('timestamp') > last_read_msg.get('timestamp')){\n                        message.set('is_unread', true);\n                        if (!xabber.get('focused')) {\n                            if (this.model.get('saved') || this.model.isMuted())\n                                message.set('muted', true);\n                        }\n                        this.model.setMessagesDisplayed(message.get('timestamp'));\n                    }\n                });\n                if (!last_read_msg){\n                    this.contact.getMessageByStanzaId(this.model.get('last_read_msg'), ($message) => {\n                        last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        deferred.resolve();\n                    });\n                } else {\n                    deferred.resolve();\n                }\n            } else {\n                if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                    message.set('is_unread', true);\n                    if (message.get('is_unread') && xabber.get('focused') && !xabber.get('idle') && this.isVisible()){\n                        this.readVisibleMessages();\n                    }\n                    if (!xabber.get('focused')) {\n                        if (this.model.get('saved') || this.model.isMuted())\n                            message.set('muted', true);\n                        else if (!message.get('synced_invitation_from_server'))\n                            this.notifyMessage(message);\n                    }\n                    this.model.setMessagesDisplayed(message.get('timestamp'));\n                }\n            }\n            if (this.contact && this.model.get('archived')){\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n                message.set('state', constants.MSG_DISPLAYED);\n            }\n        }\n\n        if (this.isVisible() && (!message.get('is_unread') || is_scrolled_to_bottom) && !message.get('is_between_anchors')) {\n            let is_scrolling_needed;\n            if (is_scrolled_to_bottom){\n                if (this.$(`.chat-message.unread-message`).length){\n                    if (this.$(`.chat-message.unread-message`)[0].offsetTop > (this._scrolltop + 140)) {\n                        is_scrolling_needed = true;\n                    }\n                } else\n                    is_scrolling_needed = true;\n            }\n            if ((is_scrolled_to_bottom && is_scrolling_needed) || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else if (!is_scrolled_to_bottom) {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (message.get('synced_from_server') && message.get('is_unread')) {\n            this.onChangedReadState(message);\n        }\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n    },\n\n\n    decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom();\n        if (this.model.get('encrypted') || message.get('encrypted') || force) {\n            let images = message.get('images') || [];\n            if (images.length) {\n                images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = [];\n                        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                            $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        else\n                            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            }\n            let fwd_msgs = message.get('forwarded_message') || [];\n            fwd_msgs.forEach((fwd_msg) => {\n                let fwd_images = fwd_msg.get('images') || [];\n                fwd_images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] .fwd-message[data-uniqueid=\"${fwd_msg.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            });\n        }\n    },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_message = this.$(`.chat-message[data-uniqueid=\"${this.model.messages.models[index - 1].get('unique_id')}\"]`);\n            if (!$prev_message.length) {\n                $prev_message = this.addMessage(this.model.messages.models[index - 1]);\n            }\n            $message.insertAfter($prev_message);\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0], message);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0], item);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeAllMessagesExceptLast: function () {\n        let messages_to_save = [];\n        if (!this.model.messages)\n            return;\n        this.model.messages.forEach((message, idx) => {\n            if (idx === (this.model.messages.length - 1)){\n                messages_to_save.push(message);\n                this.model.set('first_archive_id', message.get('stanza_id'));\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message');\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message-background');\n                return;\n            }\n            let $message, $message_in_chat;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`));\n            $message.prev('.chat-day-indicator').remove();\n            $message.remove();\n        });\n        this.model.messages.reset(messages_to_save);\n        this.updateScrollBar();\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.is_unread && 'unread-message',\n            attrs.is_unread && 'unread-message-background',\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('encrypted')){\n            if (attrs.hasOwnProperty('submitted_here')){\n                $message.attr('data-trust', true);\n            } else if (attrs.hasOwnProperty('is_trusted')){\n                $message.attr('data-trust', attrs.is_trusted);\n            } else {\n                $message.attr('data-trust', this.$el.attr('data-trust'));\n            }\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])),];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n            this.OGPLinkOnload($message, message);\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video, idx) => {\n                        let video_el = this.createVideo(video, idx);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                    this.OGPLinkOnload($message, message);\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        return $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [],\n            msg_videos = message && message.get('videos') && message.get('videos').length ? message.get('videos') : null;\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.video_id = $(item).attr('data-msg-video-id');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                if (msg_videos && msg_videos.length && player.video_id >= 0) {\n                    let video_file = msg_videos[player.video_id];\n                    video_file && (player.video_file = video_file);\n                }\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem, msg) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg, msg);\n        }\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n    attentionMessage: function () {\n        let notification = xabber.popupNotification({\n            title: this.contact.get('name'),\n            text: xabber.getString(\"chats_attention\"),\n            icon: this.contact.cached_image.url\n        });\n        notification.onclick = () => {\n            window.focus();\n            this.model.trigger('open');\n        };\n        let sound = xabber.settings.sound_on_attention;\n        xabber.playAudio(sound);\n    },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file['id'] && stanza.c('gallery-id').t(file['id']).up();\n                file.thumbnail && stanza.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n    msgCallback: function (msg_sending_timestamp, message) {\n        this.bottom.click_counter = 0;\n        this.bottom.setDefaultPlaceholder();\n        if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n            setTimeout(() => {\n                if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                    message.set('state', constants.MSG_SENT);\n                } else {\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {\n                        (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                    });\n                    setTimeout(() => {\n                        if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                            message.set('state', constants.MSG_ERROR);\n                    }, 5000);\n                }\n            }, 1000);\n        }\n        else {\n            let _pending_time = 5, was_reconnecting;\n            if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                was_reconnecting = true;\n            if (this.account.session.get('reconnecting'))\n                was_reconnecting = true;\n            this.account.session.once('change:reconnecting', () => {\n                console.log('change reconnecting');\n                console.log(this.account.session.get('reconnecting'));\n                was_reconnecting = true;\n            })\n            let _interval = setInterval(() => {\n                console.log(was_reconnecting);\n                if (was_reconnecting)\n                    clearInterval(_interval);\n                if (_pending_time >= 8 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                    console.log('ping on message pending');\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                        let downtime = (moment.now() - this.account.last_stanza_timestamp) / 1000;\n                        if (downtime >= 2){\n                            console.log('message initiated reconnection');\n                            console.log(message);\n                            this.account.connection.disconnect();\n                        } else {\n                            console.log('ping was sent and got no result after 2 seconds, but didnt reconnect because last stanza time was: ' + downtime + ' sec')\n                        }\n                    }, 2000);\n                }\n                if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 3;\n            }, 3000);\n        }\n    },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData();\n            formData.append('file', file, file.name);\n            if (file.duration)\n                formData.append('duration', file.duration);\n            if (file.size)\n                formData.append('size', file.size);\n            if (file.width)\n                formData.append('width', file.width);\n            if (file.height)\n                formData.append('height', file.height);\n            if (file.voice)\n                formData.append('media_type', file.type + '+voice');\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.oncancel = xhr.onload = xhr.onerror = xhr.onabort = function () {\n                let xhr_status = this.fakeStatus || this.status;\n                if (xhr_status >= 200 && xhr_status < 300) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = JSON.parse(this.response)\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                if (!is_error) {\n                                    if (slot_response && slot_response.quota){\n                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                        xhr_requests[files_count].is_uploading = true;\n                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                    } else {\n                                        xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 400;\n                                        xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 'Unknown error';\n                                        xhr_requests[files_count].oncancel();\n                                    }\n                                }\n                            });\n                        });\n                    }\n                } else {\n                    if (xhr_status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && xhr_status === 0){\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        let response_text, error_status;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (xhr_status === 500)\n                            response_text = this.fakeResponse || this.statusText;\n                        else if (xhr_status === 400 || this.fakeStatus){\n                            response_text = this.fakeResponse || JSON.parse(this.response).error;\n                            error_status = this.fakeStatus || JSON.parse(this.response).status;\n                            if (error_status && error_status == 429){\n                                setTimeout(() => {\n                                    self.account.testGalleryTokenExpire(() => {\n                                        self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                            if (!is_error) {\n                                                if (slot_response && slot_response.quota){\n                                                    xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                    xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                    xhr_requests[files_count].is_uploading = true;\n                                                    xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                } else {\n                                                    xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 400;\n                                                    xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 'Unknown error';\n                                                    xhr_requests[files_count].oncancel();\n                                                }\n                                            }\n                                        });\n                                    });\n                                }, 1000);\n                                return;\n                            }\n                        }\n                        else if (xhr_status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (xhr_status === 0) && (message.get('files')[idx] = null);\n                        if (!message.get('files').filter((element) => { return element != null}).length && !message.get('message')){\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                            self.removeMessage($message);\n                            return;\n                        }\n                        files_count++;\n                        if (xhr_status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                        if (!is_error) {\n                                            if (slot_response && slot_response.quota){\n                                                xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                xhr_requests[files_count].is_uploading = true;\n                                                xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                            } else {\n                                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 400;\n                                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 'Unknown error';\n                                                xhr_requests[files_count].oncancel();\n                                            }\n                                        }\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    this.account.testGalleryFileSlot(xhr_requests[0].formData.get('file'), (slot_response) => {\n                        if (!is_error) {\n                            if (slot_response && slot_response.quota){\n                                xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                                xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'));\n                                xhr_requests[0].is_uploading = true;\n                                xhr_requests[0].send(xhr_requests[0].formData);\n                            } else {\n                                xhr_requests[0].fakeResponse = slot_response && slot_response.error ? slot_response.error : 400;\n                                xhr_requests[0].fakeStatus = slot_response && slot_response.status ? slot_response.status : 'Unknown error';\n                                xhr_requests[0].oncancel();\n                            }\n                        }\n                    });\n                });\n            }\n        }\n\n    },\n\n    encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n    },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        message.set('videos', videos);\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video, idx) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let video_attrs = {video_src: video.sources[0], thumbnail: video.thumbnail, video_id: idx},\n            $video_wrap_template = $(templates.messages.video(video_attrs));\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                this.bottom.setEditedMessageAttachments(message, true);\n                this.bottom.setRedactedUploadMessage(message);\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server'),\n            is_unread_archived = message.get('is_unread_archived'),\n            is_missed_msg = message.get('missed_msg'),\n            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n        if (is_unread) {\n            if (!is_unread_archived && !is_synced && !is_missed_msg)\n                this.model.messages_unread.add(message);\n            $msg.addClass('unread-message');\n            $msg.addClass('unread-message-background');\n            this.model.recountUnread();\n        } else {\n            if ((!is_unread_archived && !is_synced && !is_missed_msg) || this.model.messages_unread.indexOf(message) > -1)\n                this.model.messages_unread.remove(message);\n            $msg.removeClass('unread-message');\n            setTimeout(() => {\n                $msg.removeClass('unread-message-background');\n            }, 1000);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            link_references = msg.get('link_references'),\n            fwd_messages = [],\n            fwd_link_references = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n                message.get('link_references') && fwd_link_references.push(message.get('link_references'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(link_references).each(function(idx, link_reference) {\n            if (files_links != \"\")\n                files_links += '\\n';\n            files_links += link_reference.url;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        $(fwd_link_references).each(function (idx, message) {\n            $(message).each(function (i, link_reference) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += link_reference.url;\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            }, (err) => {\n                _.extend(options, {present: null, subscription: null});\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')) || this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg, this.account.forwarded_messages.get($elem.data('uniqueid')));\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id) || this.account.context_messages.get(unique_id) || this.account.searched_messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact.showDetails();\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\n\nxabber.ChatContentPlaceholderView = xabber.BasicView.extend({\n    className: 'chat-body-content-placeholder-wrap',\n    template: templates.chat_content_placeholder,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        return this;\n    },\n\n    render: function () {\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.forwarded_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg, this.account.forwarded_messages.get(unique_id));\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(), data, target;\n                if (paramValue.on_format){\n                    data = paramValue.data;\n                    target = paramValue.target;\n                } else {\n                    data = JSON.parse(paramValue);\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                }\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n\n            static formats(node) {\n                return {\n                    on_format: true,\n                    data: {\n                        nickname: node.innerHTML,\n                        is_me: node.classList.contains(\"ground-color-100\")\n                    },\n                    target: node.getAttribute('data-target')\n                };\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        class QuillEmoji extends Image {\n            static create(value) {\n                if (typeof value == 'string') {\n                    let emoji = $(value.emojify({tag_name: 'img'}))[0];\n                    emoji.style.display = 'none';\n                    emoji.onload = function () {\n                        this.style.display = 'unset';\n                    };\n                    return emoji;\n                } else {\n                    return value;\n                }\n            }\n\n            static value(domNode) {\n                return domNode;\n            }\n        }\n        QuillEmoji.blotName = 'emoji';\n        QuillEmoji.className = 'emoji';\n        QuillEmoji.tagName = 'img';\n        QuillEmoji.prototype.optimize = function () {};\n\n        Quill.register(QuillEmoji);\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n      let jid = this.account.get('jid'),\n          attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n          chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        chat.trigger('open', {clear_search: options.clear_search, right_force_close: options.right_force_close});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (!pending_message)\n                    return;\n                let chat = this.account.chats.get(pending_message.chat_hash_id);\n                if (chat && chat.get('group_chat'))\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                chat.setStanzaId(pending_message.unique_id, stanza_id);\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if ($message.find('replace').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact && contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == Strophe.NS.OMEMO;\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            chat.retracted_msg_id_list.push(retracted_msg_id);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (!chat.get('group_chat') && retract_version > this.account.retraction_version) {\n                this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        if ($message.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`).length) {\n            let code =  $message.find('confirm').attr('id');\n            if (($message.attr('from') == this.account.xabber_auth.api_jid) && ($message.attr('id') == this.account.xabber_auth.request_id)) {\n                this.account.verifyXabberAccount(code, (data) => {\n                    if (xabber.api_account && this.account.get('auto_login_xa')) {\n                        xabber.api_account.save('token', data);\n                        xabber.api_account.login_by_token();\n                    }\n                });\n            }\n            else {\n                return this.receiveChatMessage(message);\n            }\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                if (!Object.keys(options).length)\n                    return;\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            if (!Object.keys(options).length && !forwarded_msgs.length)\n                return;\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            } else {\n                xabber.warn('Message from me to me');\n                xabber.warn(message);\n                return;\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n                if (contact.details_view && contact.details_view.isVisible())\n                    contact.trigger('update_participants');\n            }\n        }\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        all_servers = all_servers.sort((x,y) => { return x == this.account.domain ? -1 : y == this.account.domain ? 1 : 0; })\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n            let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                contact = this.account.contacts.mergeContact(group_jid);\n            contact.set('group_chat', true);\n            contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            this.close();\n            xabber.chats_view.updateScreenAllChats();\n            contact.trigger(\"open_chat\", contact);\n            if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: group_jid + '/' + moment.now()});\n                this.account.sendIQFast(iq_set_blocking);\n            }\n\n        }, () => {\n            this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n            this.$('input[name=\"chat_jid\"]').addClass('invalid');\n        });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"add_opened_chat\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').length);\n        if (options.right !== 'chat' && options.right !== 'contact_details' && !options.no_unread && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats') && !xabber.toolbar_view.data.get('account_filtering')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo).active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.setScreen(null, {chat_item: null, right: undefined},\n                    {silent: !xabber.body.isScreen('all-chats')});\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n        view.detach();\n        if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n            active_toolbar.click();\n        }\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view && (item.get('timestamp') || item.get('saved'))) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        if (active_toolbar.hasClass('account-item') && view.account.get('jid') !== active_toolbar.attr('data-jid')){\n            return;\n        }\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        (active_toolbar.hasClass('all-chats') || (xabber.accounts.enabled.length === 1 && active_toolbar.hasClass('saved-chats'))) && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('saved-chats') && (xabber.accounts.enabled.length !== 1) && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved'))));\n        active_toolbar.hasClass('mentions') && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => (chat.get('jid') === chat.account.domain))));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false)) {\n            view.model.set('display', true);\n            view.model.set('active', true);\n            xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded')) {\n                if (\n                    (view.model.get('const_unread') || view.model.get('unread'))\n                    && view.model.get('last_read_msg') &&\n                    (!view.content._prev_scrolltop || (view.content._prev_scrolltop && view.content._is_scrolled_bottom) || (view.model.get('show_new_unread') === true))\n                    && !view.model.get('loading_unread_history') && !options.force_bottom && xabber.body.screen.get('chat_item') !== view\n                ){\n                    view.model.set('show_new_unread', false);\n                    view.model._wait_load_unread_history = new $.Deferred();\n                    view.content._no_scrolling_event = true;\n                    view.content.loadUnreadHistory();\n                } else if (view.model.messages.length < 20)\n                    view.content.loadPreviousHistory();\n            }\n            if (!options.right_force_close && (\n                xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )\n            )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            if (!view.model.get('loading_unread_history')){\n                let current_scrolling = view.content.getScrollTop() || view.content._scrolltop;\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.content.scrollTo(current_scrolling);\n            } else {\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    show_placeholder: true,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.model.set('active', true);\n                view.model._wait_load_unread_history.done(() => {\n                    if (xabber.body.screen.get('chat_item') === view) {\n                        view.model.set('loading_unread_history', false)\n                        xabber.body.setScreen((options.screen || 'all-chats'), {\n                            right: 'chat',\n                            clear_search: options.clear_search,\n                            chat_item: view,\n                            blocked: view.model.get('blocked')\n                        },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                        view.content.scrollToUnread();\n                        view.content._long_reading_timeout = true;\n                        view.content._no_scrolling_event = false;\n                        view.content.onScroll();\n                    }\n                });\n            }\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        if (options.scroll_to_chat) {\n            xabber.chats_view.scrollToChild(view.$el);\n        } else {\n            xabber.chats_view.scrollTo(scrolled_top);\n        }\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            archive_chats = archive_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showSavedChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            saved_chats = chats.filter(chat => chat.get('saved'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            saved_chats = saved_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        saved_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n            this.$(`.chat-list .chat-item[data-id=\"${chat.id}\"] .chat-title`).text(chat.get('jid'));\n        });\n    },\n\n    showNotifications: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            notificatons_chats = chats.filter(chat => (chat.get('jid') === chat.account.domain || chat.contact && chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both' ));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            notificatons_chats = notificatons_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        notificatons_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = no_unread || xabber.toolbar_view.data.get('account_filtering') ? false : xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        if (xabber.toolbar_view.data.get('account_filtering')){\n            all_chats = all_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n            all_chats_pinned = all_chats_pinned.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active')\n            .filter('.all-chats:not(.toolbar-logo)').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n      events: {\n          \"keyup .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\"\n      },\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap .pinned-chat-list').html(\"\");\n        this.$('.chat-list-wrap .chat-list').html(\"\");\n        this.$('.chat-list-wrap .contact-list').html(\"\");\n        this.saved_chat = false;\n        let chats = xabber.chats_view.model,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                if (chat.account.get('jid') === this.account.get('jid')) {\n                    if (chat.id == `${this.account.get('jid')}:saved`) {\n                        let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                        $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                        this.saved_chat = true;\n                        this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                    } else\n                        this.$('.chat-list-wrap .pinned-chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n                }\n            });\n        }\n        all_chats.forEach((chat) => {\n            if (chat.account.get('jid') === this.account.get('jid')) {\n                if (chat.id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap .chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap .pinned-chat-list').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap .chat-list').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap .contact-list').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.modal-content .error').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        $target.toggleClass('click-selected');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]));\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to])).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          this.model.on(\"hide_chat\", this.hideChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      hideChat: function () {\n          this.model.set({'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettings();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-contact-details\": \"showContactDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"hide_chat\", this.hideChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetails: function () {\n        this.contact.showDetails('all-chats');\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    hideChat: function () {\n        this.model.set({'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n            let img = new Image();\n            img.onload = () => {\n                onloaded_sprites++;\n                (onloaded_sprites === all_sprites) && $emoji_panel_wrap.find('.uploading-emoticons').detach();\n            };\n            img.src = './assets/images/emoji/spritesheet' + i++ + '.png';\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        (Math.max.apply(null, widths) !== 0) && this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((is_contact_trusted) => {\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                this.account.showSettings(null, 'tokens');\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        (this.$el.hasClass('chat-bottom-blocked-wrap') && !$(ev.target).closest('.message-actions-panel').length) && this.contact.showDetails(xabber.body.screen.get('name'));\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        this.quill.root.focus();\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root.lastElementChild\n            && this.quill.root.lastElementChild.lastChild ? this.quill.root.lastElementChild.lastChild : this.quill.root.lastElementChild;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        range.detach(); // optimization\n        this.quill.root.scrollTop = this.quill.root.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height(),\n            quill_textarea = $(this.quill.container).find('.rich-textarea'),\n            quill_current_height = quill_textarea.prop('scrollHeight');\n        if (quill_current_height !== this.text_input_height) {\n            if (this.text_input_height < quill_current_height){\n                quill_textarea.scrollTop(quill_current_height);\n            }\n            this.text_input_height = quill_current_height;\n        }\n\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                if (!edit_msg)\n                    return;\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n            } else {\n                this.unsetForwardedMessages();\n            }\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        ev.preventDefault();\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        if (clipboard_data) {\n            if (clipboard_data.files.length > 0) {\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                else {\n                    let text = _.escape(clipboard_data.getData('text')),\n                        arr_text = Array.from(text);\n                    arr_text.forEach((item, idx) => {\n                        if (item == '\\n')\n                            arr_text.splice(idx, 1, '</p><p>');\n                    });\n                    text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                    window.document.execCommand('insertHTML', false, text);\n                }\n            }\n            else {\n                let text = _.escape(clipboard_data.getData('text')),\n                    arr_text = Array.from(text);\n                arr_text.forEach((item, idx) => {\n                    if (item == '\\n')\n                        arr_text.splice(idx, 1, '</p><p>');\n                    if (item == ' ')\n                        arr_text.splice(idx, 1, '&nbsp');\n                });\n                text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                window.document.execCommand('insertHTML', false, text);\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted);\n        list = _.difference(list, this.currently_loaded_link_references);\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    } else {\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new opusRecorder({\n                        encoderPath: opusRecorderEncoderPath,\n                        encoderSampleRate: 16000,\n                        numberOfChannels: 1\n                }),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob([chunks], { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks = e;\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertEmbed(caret_idx, 'emoji', emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    submit: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea(),\n            dfd = new $.Deferred();\n        dfd.done(() => {\n            this.$('.mentions-list').html(\"\").hide();\n            $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n                let emoji = emoji_item.innerText;\n                this.account.chat_settings.updateLastEmoji(emoji);\n            });\n            let content_concat = [];\n            if (text.length >= constants.STANZA_MAX_SIZE) {\n                utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n                $rich_textarea.flushRichTextarea();\n                return;\n            }\n            if (text.length) {\n                this.quill.getContents().forEach((content) => {\n                    if (content.attributes) {\n                        let content_attrs = [],\n                            start_idx = content_concat.length,\n                            end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                        for (let attr in content.attributes)\n                            (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                        if (content_attrs.indexOf('mention') > -1) {\n                            let mention_idx = content_attrs.indexOf('mention'),\n                                is_gc = this.contact.get('group_chat'),\n                                target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                            content_attrs.splice(mention_idx, mention_idx + 1);\n                            target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                            mentions.push({\n                                start: start_idx,\n                                end: end_idx,\n                                target: target,\n                                is_gc: is_gc\n                            });\n                        }\n                        if (content.attributes.blockquote) {\n                            if (content_concat.length) {\n                                Array.from(content.insert).forEach((ins) => {\n                                    let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                        quote_end_idx = content_concat.length;\n                                    blockquotes.push({\n                                        marker: constants.QUOTE_MARKER,\n                                        start: quote_start_idx,\n                                        end: quote_end_idx + constants.QUOTE_MARKER.length\n                                    });\n                                    text = Array.from(_.escape(text));\n\n                                    if (quote_start_idx === quote_end_idx) {\n                                        text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                    }\n                                    else {\n                                        text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                    }\n                                    (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                    text[quote_end_idx - 1] += '\\n';\n\n                                    text = _.unescape(text.join(\"\"));\n                                    content_concat = Array.from(content_concat.join(\"\"));\n\n                                    markup_references.forEach((markup_ref) => {\n                                        if (markup_ref.start >= quote_start_idx) {\n                                            markup_ref.start += constants.QUOTE_MARKER.length;\n                                            markup_ref.end += constants.QUOTE_MARKER.length;\n                                        }\n                                    });\n\n                                    content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                                })\n                            }\n                        }\n                        content_attrs.length && markup_references.push({\n                            start: start_idx,\n                            end: end_idx,\n                            markup: content_attrs\n                        });\n                    }\n                    if (content.insert && content.insert.emoji) {\n                        content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                    }\n                    else if (content.attributes && content.attributes.blockquote) {\n                    }\n                    else\n                        content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n                });\n            }\n            let start_length = text.length;\n            text = text.trimStart();\n            if (start_length > text.length) {\n                let delta = start_length - text.length;\n                mentions.forEach((mention) => {\n                    mention.start -= delta;\n                    mention.end -= delta;\n                });\n                markup_references.forEach((markup_reference) => {\n                    markup_reference.start -= delta;\n                    markup_reference.end -= delta;\n                });\n                blockquotes.forEach((blockquote) => {\n                    blockquote.start -= delta;\n                    blockquote.end -= delta;\n                });\n            }\n            if (link_references && link_references.length) {\n                link_references = link_references.filter(item => item.original_text);\n                link_references.forEach((link_reference) => {\n                    if (link_reference && link_reference.original_text) {\n                        link_reference.start = text.indexOf(link_reference.original_text);\n                        if (link_reference.start != -1) {\n                            link_reference.start = 0;\n                            link_reference.end = 0;\n                        }\n                    }\n                });\n            }\n            this.removeAllLinkReferences();\n            this.link_reference_exempted = [];\n            this.removeAllFileSnippets();\n            text = text.trimEnd();\n            $rich_textarea.flushRichTextarea();\n            this.quill.focus();\n            this.displayMicrophone();\n            if (this.edit_message) {\n                this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n                $rich_textarea.placeCaretAtEnd();\n                return;\n            }\n            if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n                if (this.model.get('saved') && this.fwd_messages.length && !text)\n                    this.fwd_messages.forEach((message) => {\n                        this.view.onSubmit(\"\", [message]);\n                    });\n                else\n                    this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            }\n            this.unsetForwardedMessages();\n            xabber.chats_view.clearSearch();\n            if (this.model.messages_view)\n                if (this.model.messages_view.data.get('visible'))\n                    xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n            $rich_textarea.placeCaretAtEnd();\n        });\n        if (attached_files && attached_files.length) {\n            let failed_files = [],\n                files_count = 0,\n                file_check_dfd = new $.Deferred();\n            file_check_dfd.done(() => {\n                if (failed_files.length){\n                    failed_files.forEach((file) => {\n                        this.$(`.message-reference-preview-item-file[data-id=\"${file.uid}\"]`).remove();\n                        this.removeFileSnippetById(file.uid);\n                    });\n                    utils.dialogs.error(\n                        '' + _.pluck(failed_files, 'name').join(` — ${xabber.getString(\"message__file_was_deleted__file_label\")}. \\n`) + ` — ${xabber.getString(\"message__file_was_deleted__file_label\")}.`,\n                        {},\n                        xabber.getQuantityString(\"message__file_was_deleted\", failed_files.length)\n                    );\n                    dfd.reject();\n                } else {\n                    dfd.resolve();\n                }\n            });\n            attached_files.forEach((file) => {\n                utils.tryReadingFile(file).then(()=> {\n                    files_count++;\n                    if (attached_files.length === files_count) {\n                        file_check_dfd.resolve();\n                    }\n                }, ()=> {\n                    failed_files = failed_files.concat([file]);\n                    files_count++;\n                    if (attached_files.length === files_count) {\n                        file_check_dfd.resolve();\n                    }\n                });\n            });\n        } else {\n            dfd.resolve();\n        }\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.forward-message-wrap').switchClass('non-active', this.model.get('encrypted'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content') || [],\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model),\n                id: stanza_id\n            }),\n            $message = $build('message').attrs({xmlns: undefined});\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file['id'] && $message.c('gallery-id').t(file['id']).up();\n                file.thumbnail && $message.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message]);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, decrypted_msg);\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && my_msgs == $msgs.length && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active') || this.model.get('encrypted'))\n            return;\n        if (this.$('.forward-message-wrap').hasClass('non-active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.ChatBodyPlaceholderContainer = xabber.Container.extend({\n    className: 'chat-body-placeholder-container',\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"chat_list__placeholder\"));\n        }\n    },\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        //readds msg handler if it somehow dissapears\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            let options = {};\n            this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                this.roster && this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                this.roster && this.roster.getRoster();\n            });\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_body_placeholder = this.right_panel.addChild('chat_body_placeholder',\n            this.ChatBodyPlaceholderContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"change:idle\", function () {\n        if (!this.get('idle')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function (no_unread) {\n        this.chats_view.showAllChats(no_unread);\n    }, this);\n\n    this.on(\"show_archive_chats\", function (no_unread) {\n        this.chats_view.showArchiveChats(no_unread);\n    }, this);\n\n    this.on(\"show_saved_chats\", function (no_unread) {\n        this.chats_view.showSavedChats(no_unread);\n    }, this);\n\n    this.on(\"show_notification_chats\", function (no_unread) {\n        this.chats_view.showNotifications(no_unread);\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromSever(jid);\n            }\n        });\n    },\n\n    getChatsFromSever: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"mentions_list__placeholder\"));\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n            if (attrs.name === 'all-chats' && attrs.right === 'contact_details')\n                attrs.contact.trigger('open_chat', attrs.contact);\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (!window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        this.updateContainersLayout();\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateContainersLayout = function () {\n        let width = this.body.$el.width(),\n            height = this.body.$el.height(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM;\n        let panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 64,\n            toolbar_accounts_heigth = height - 506,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow)) {\n            panel_width = 1536;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.toolbar_view.$el.find('.toolbar-bottom .accounts-wrap .accounts').css({\n            'max-height': toolbar_accounts_heigth,\n        });\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { settings: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_left = new this.ViewPath('account.settings_left'),\n        path_acc_settings_right = new this.ViewPath('account.settings_right'),\n        path_acc_vcard_edit = new this.ViewPath('account.vcard_edit');\n\n    this.body.addScreen('account_settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: {\n                account_settings: {\n                    left: path_acc_settings_left,\n                    right: path_acc_settings_right\n                }\n            },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.account_settings.patchTree = function (tree, options) {\n        if (options.right === 'vcard_edit') {\n            return {\n                left: path_acc_settings_left,\n                right: path_acc_vcard_edit\n            };\n        }\n    };\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_body_placeholder = new this.ViewPath('chat_item.content_placeholder'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details = new this.ViewPath('contact.details_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if (options.show_placeholder) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: null,\n                chat_body_placeholder: path_chat_body_placeholder,\n                chat_bottom: null\n            };\n        }\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.right === 'contact_details') {\n            return { details: path_contact_details };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (this.api_account) {\n        this.api_account.once(\"settings_result\", function (result) {\n            if (result === null && !this.accounts.length) {\n                this.body.setScreen('login');\n            } else if (this.body.isScreen('blank')) {\n                this.body.setScreen('all-chats');\n            }\n        }, this);\n\n        this.api_account.ready.then(this.api_account.start.bind(this.api_account));\n    } else {\n        if (!this.accounts.length)\n            this.body.setScreen('login');\n        else if (this.body.isScreen('blank'))\n            this.body.setScreen('all-chats');\n        xabber.trigger(\"bind_xmpp_accounts\");\n    }\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                let f_count = this.$('div.fingerprints-content').find('div.row').length;\n                if (!f_count)\n                    this.$('div.fingerprints-content').html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                this.jid == this.account.get('jid') && f_count++;\n                this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.FingerprintsOwnDevices = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-devices-wrap',\n    template: templates.fingerprints_devices,\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.omemo = this.model;\n        this.jid = this.account.get('jid');\n        this.is_own_devices = true;\n    },\n\n    open: function (device_id, is_own) {\n        this.omemo = this.account.omemo;\n        this.data.set('visible', true);\n        this.updateColorScheme();\n        this.show();\n        this.renderOwnDevices(device_id, is_own);\n    },\n\n    updateTrustDevice: function (device_id, $container) {\n        this.omemo.getMyDevices().then(() => {\n            let device = this.model.own_devices[device_id];\n            if (!device)\n                return;\n            if (device.get('ik')) {\n                let f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                this.renderTrustOnFingerprint(is_trusted, $container);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        this.renderTrustOnFingerprint(is_trusted, $container);\n                    }\n                }, () => {\n                });\n            }\n        });\n    },\n\n    renderTrustOnFingerprint: function (is_trusted, $container) {\n        $container.find('.device-encryption').attr('data-trust', is_trusted).addClass('active');\n        is_trusted === 'unknown' && $container.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n        is_trusted === 'trust' && $container.find('.device-encryption span').text(xabber.getString(\"settings_account__trusted_device\"));\n        $container.find('.device-encryption .mdi-lock').removeClass('hidden');\n    },\n\n    renderOwnDevices: function (device_id, is_own) {\n        this.omemo.getMyDevices().then(() => {\n            this.device_id = device_id;\n            this.fingerprint = null;\n            if (is_own)\n                this.updateOwnFingerprint(device_id);\n            else{\n                this.updateOwnFingerprint(device_id);\n                this.updateFingerprints(device_id);\n            }\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateFingerprints: async function (device_id) {\n        let counter = 0,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content .other-device-content'),\n            device = this.model.own_devices[device_id];\n        $container.html('');\n        dfd.done((is_error) => {\n            console.log(is_error);\n            this.$('.dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                container: this.$('.fingerprints-content .other-device-content')[0],\n                alignment: 'left'\n            });\n        });\n        if (device.get('ik')) {\n            let options = {},\n                f = device.generateFingerprint(),\n                fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n            is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n            this.fingerprint = f;\n            $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n            dfd.resolve();\n        }\n        else {\n            this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                let $iq = $(iq),\n                    $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                    ik = $bundle.find(`ik`).text();\n                if (ik) {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let options = {},\n                        f = device.generateFingerprint(),\n                        fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                        is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                    is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                    this.fingerprint = f;\n                    $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                }\n                dfd.resolve();\n            }, () => {\n                dfd.resolve(true);\n            });\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').html(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, true);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, false);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            device_icons = [\n                'device-cellphone',\n                'device-console',\n                'device-desktop',\n                'device-tablet',\n                'device-web',\n            ],\n            error, svg_icon;\n        if (fingerprint.match(/.{1,4}/g))\n            fingerprint = fingerprint.match(/.{1,4}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.account.omemo.own_devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,4}/g).join(\" \"));\n        svg_icon = edit_setting ? 'device-web' : device_icons[Math.floor(Math.random()*device_icons.length)]\n        let $row = templates.fingerprint_devices_item({id,label,trust, svg_icon, fingerprint, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content');\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [this.device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                delete this.model.own_devices[this.device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[this.device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        this.account.trigger('trusting_updated');\n                        this.close();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, this.device_id);\n                }\n            }\n        });\n    },\n\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle(this.model.get('device_attrs'));\n           this.model.set('resend_bundle', false);\n           this.model.set('device_attrs', null);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.model.account.trigger('update_omemo_devices');\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            await this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey){\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            }\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            throw e;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.cached_messages && this.cached_messages.destroy();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                }\n                else {\n                    this.publishBundle();\n                }\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                    }\n                    else {\n                        this.publishBundle();\n                    }\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, plaintext);\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('encryption', {\n                xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION,\n                namespace: Strophe.NS.OMEMO\n            });\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied && options.carbon_direction && options.carbon_direction === 'sent')\n                return;\n\n            if (cached_msg) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                        if (options.gallery && deferred)\n                            deferred.resolve($message, options);\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message, options);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch((e) => {\n                    if (e.name === 'MessageCounterError')//for capturing double decryption of same message\n                        return;\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust);\n                resolve(trust);\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                else\n                                    is_trusted = null;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true' || $(keyElement).attr('kex') === '1',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey;\n        try {\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        }\n        catch (e) {\n            throw e;\n        }\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks, callback) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            }, callback);\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n        if (bundle.preKeys.length && bundle.preKeys.length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - bundle.preKeys.length,\n                last_id = _.sortBy(this.bundle.preKeys, 'keyId').last().keyId;\n            for (let i = ++last_id; last_id + missing_keys; i++)\n                await this.bundle.generatePreKey(i);\n            this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function (device_attrs) {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            this.set('device_attrs', device_attrs);\n            return;\n        }\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (device_attrs){\n                device_attrs.omemo.publishDevice(device_attrs.device_id, device_attrs.label);\n            }\n        });\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, (res) => {\n            this.publish(spk, ik.pubKey, pks, () => {\n                dfd.resolve();\n            });\n        }, (err) => {\n            if (($(err).find('error').attr('code') == 404)){\n                this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                    this.publish(spk, ik.pubKey, pks, () => {\n                        dfd.resolve();\n                    });\n                });\n            }\n        });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    getMessages: function (contact) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages;\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/emojis.json\": 85304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92444;","var map = {\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item.html\": 86348,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item.html\": 98078,\n\t\"./accounts/media_gallery_account.html\": 57872,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/settings_left.html\": 35626,\n\t\"./accounts/settings_right.html\": 34987,\n\t\"./accounts/token_item.html\": 52509,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./api_service/add_xabber_account.html\": 64805,\n\t\"./api_service/linked_email_item.html\": 5398,\n\t\"./api_service/sync_settings.html\": 48881,\n\t\"./api_service/sync_settings_account_item.html\": 28522,\n\t\"./api_service/xabber_account.html\": 29674,\n\t\"./api_service/xabber_login.html\": 48755,\n\t\"./api_service/xabber_login_by_email.html\": 24864,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_devices_item.html\": 16969,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/fingerprints_devices.html\": 26376,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/settings.html\": 15887,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_content_placeholder.html\": 36209,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./chats/unread_marker.html\": 98875,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details.html\": 62859,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/device-cellphone.html\": 79824,\n\t\"./svg/device-console.html\": 32111,\n\t\"./svg/device-desktop.html\": 5772,\n\t\"./svg/device-tablet.html\": 18955,\n\t\"./svg/device-web.html\": 16919,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit.html\": 11803,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","let client_translation_progress = {\"en\":100,\"ar\":27,\"az\":2,\"be\":13,\"bg\":64,\"bs\":0,\"ca\":25,\"cs\":99,\"cy\":0,\"da\":0,\"de\":49,\"el\":29,\"es-ES\":34,\"es-latin\":7,\"et\":0,\"fa\":4,\"fi\":9,\"fil\":14,\"fr\":35,\"ga-IE\":0,\"he\":21,\"hi\":0,\"hr\":0,\"hu\":14,\"hy-AM\":8,\"id\":69,\"is\":0,\"it\":71,\"ja\":20,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":4,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":21,\"ne-NP\":0,\"nl\":19,\"no\":0,\"oc\":13,\"pa-IN\":0,\"pl\":65,\"pt-BR\":70,\"pt-PT\":14,\"qya-AA\":0,\"ro\":16,\"ru\":69,\"sat\":1,\"sco\":0,\"si-LK\":37,\"sk\":20,\"sl\":27,\"sq\":3,\"sr\":13,\"sr-Cyrl-ME\":0,\"sv-SE\":37,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":67,\"uk\":27,\"uz\":0,\"vi\":12,\"yo\":0,\"zh-CN\":37,\"zh-TW\":11,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.3.177\",\"version_description\":\"fixed sync not being sent if fast connection is did not establish, fixed unread archive messages handling when reading all chats, changed reading timings and added timeout to background disappearance\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(10019)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","constants","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_DEFAULT_GREY","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","DOWNTIME_RECONNECTION_TIMEOUT","PING_SENDING_INTERVAL","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","url","credential","username","urls","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SOUNDS","beep_up","tiny_noize","retro_game","pixel_beep","beep_positive","good_chime","cellular_click","bleep","mono_u","plop","ether","pop","computer_chime","beep_a","call","connecting","busy","attention","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","API_SERVICE_URL","USE_SOCIAL_AUTH","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","CLIENT_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","idleJs","opusRecorder","opusRecorderEncoderPath","xabber_i18next","xabber_i18next_sprintf","sha256","VanillaQR","magnificPopup","Strophe","evaluate","interpolate","templates","_addTemplate","name","options","path","split","tpl","join","default","tpl_name","res","attr","is_svg","data","html","$html","find","each","$el","this","svg_name","removeClass","addClass","svg","insertSvg","addTemplate","addSvgTemplate","addJSONTemplate","raw_data","code","x","y","getEmoji","offset","lead","trail","emoji_data","item","emoji","push","emoji_regexp","prototype","emojify","sprite","tag_name","emoji_size","href","title","replace","emoji_code","Number","toString","length","repeat","removeEmoji","replaceEmoji","selector","text","all","get","getByIndex","idx","hasher","_image_cache","COLORS","MAX_IMG_SIZE","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","window","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","resolve","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","file_name","includes","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","id","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","value","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","ok_button","cancel_button","optional_buttons","reverse","inverted_buttons","img_details","append","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","isVisibleInViewport","elementTop","top","elementBottom","outerHeight","viewportTop","scrollTop","viewportBottom","isVisibleInContainer","container","eleTop","offsetTop","eleBottom","clientHeight","containerTop","containerBottom","isFullyVisibleInContainer","isBottomVisibleInContainer","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","e","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","forEach","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","replaceAll","RegExp","utils","uuid","c","r","random","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","tryReadingFile","Promise","reject","console","log","getDomainFromUrl","a","test","hostname","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_name","substr","toLowerCase","getKeyByValue","object","Object","keys","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","client_translation_progress","bc","BroadcastChannel","onmessage","event","disabled_client","postMessage","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","client_name","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","_settings","Settings","storage_name","getStorageName","fetch","settings","location","host","pathname","_cache","ModelWithStorage","cache","save","cacheFavicons","extendFunction","check_config","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","ononline","disconnectWhenConnecting","lang","language","loadTranslations","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","msg","warn","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","idling","notifications","notifications_private","notifications_group","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","hotkeys","avatar_shape","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","configure","config","pick","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","isArray","ios_msg","android_msg","any_mobile_msg","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","updateFaviconConnected","is_disconnected","account","isConnected","session","updateAllMessageCounterOnDisconnect","is_fast","connection","activate","extendWith","reduce","instance","module","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","tree","patchTree","has","className","isNull","new_view","events","keyUpOnSearch","stopPropagation","ids","map","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","query_transliterated","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","NS","MAM","DATAFORM","up","cnode","RSM","toXML","handler","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","unbind","chat_item_view","new_attrs","stamp","uniqueId","isScreen","show_placeholder","right","right_force_close","right_contact","content","_prev_scrolltop","_scrolltop","changed","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","clickAllChats","showAllChats","no_unread","closest","is_active","showArchive","showSavedChats","right_contact_save","scroll_to_chat","once","showNotifications","showChatsByAccount","showContacts","showMentions","showSettings","showPlaceholder","screen_name","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","left","setFullScreen","local_video","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","cancelFullScreen","exitFullscreen","fullscreenElement","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","xPercent","innerWidth","yPercent","innerHeight","dfd","provider","updateColorScheme","player_item","message_unique_id","video_sources","video_src","source","sources","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","video_file","video_decrypted","decryptFile","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","renderVoiceMessage","toggleMute","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","belowOrigin","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","jumpToBlock","$tab","$elem","setIdling","setNotifications","$target","requestPermission","setPrivateNotifications","setGroupNotifications","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setPrivateSound","current_sound","pause","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","changeBackgroundImage","openColorPicker","colorPicker","openMainColorPicker","mainColorPicker","changeBlur","changeNotificationsVolume","volume","sound","changeVignetting","switchVignetting","is_switched","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","progress","progress_text","platform_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","request","dataType","success","onGetPatternsCallback","onGetImagesCallback","ajax","img","thumbnail","$img","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","updateScreen","$active_screen","non_active","current_count","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","headers","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","clearInterval","$icon","favicon","favicon_gray","favicon_message","stopBlinkingFavicon","resetMessageCounter","onChangedFocusState","popupNotification","notification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","idle","onIdle","onActive","keepTracking","startAtIdle","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_view","SettingsView","api_service","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","create_from_server","settings_item","create","token","sync_all","_attrs","settings_list","connected","sync_request","fcm_subscribe","fcm_unsubscribe","from_token","action","synchronize_main_settings","synchronize_order_settings","get_settings","social_auth","social_login","login_by_token","_call_method","method","context","textStatus","jqXHR","errorThrown","onAPIError","stringify","add_source","account_status","onUserData","onSettings","onSettingsFailed","delete_settings","where","settings_data","order_timestamp","order","order_data","fetch_from_server","deleted_list","order_list","order_map","max_order","order_item","response","responseJSON","reason","_login","credentials","password","login","onLogin","onLoginFailed","onLoginByToken","onLoginByTokenFailed","onSocialLogin","onSocialLoginFailed","revoke_token","storage","clear","xmpp_binding_jid","xmpp_binding","full_id","linked_email_list","email_list","linked_social","social_bindings","logout","delete_accounts","endpoint_key","$username_input","$password_input","onChangeAuthenticationState","onRender","authFeedback","updateTextFields","submit","errorFeedback","authentication","onChangeConnected","successFeedback","socialAuth","origin","xabber_login_by_email","auth","xabber_login","changeLoginType","openXmppLoginPanel","add_xabber_account","renderAccountItem","bindAccount","add_contact_account_item","selectAccount","loginXabberAccount","authXabberAccount","sync_settings","to_sync_map","accounts_map","deleted_map","settings_map","deleted_item","sync_way","sync_choose","acc1","acc2","addAccountHtml","updateSyncOptions","$account_el","sync_settings_account_item","updateAccountHtml","account_wrap","$account_wrap","account_item","mdiclass","$sync_icon","changeSyncAll","changeSyncOne","changeSyncWay","syncSettings","do_sync","xabber_account","updateForConnectedStatus","default_color","updateLastSyncInfo","updateSocialBindings","updateSyncButton","updateExpanded","changeExpanded","expanded","linked_emails","$social_item","email","email_id","email_address","is_verified","verified","linked_email_item","social","social_provider","social_name","linkSocial","mail","mail_data","openAccount","verifyEmail","unlinkSocial","$social_html","deleted_mail_index","splice","social_list","deleted_social_index","sync","last_sync","time_delta","fromNow","synchronize","onPasswordResetFailed","setPassword","verified_email","account_settings_list","AccountSettingsList","AccountsOrderTimestamp","api_account","APIAccount","xabber_login_panel","XabberLoginPanel","APIAccountView","add_api_account_view","AddAPIAccountView","email_auth_view","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","req","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","_submit_cb","error_text","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","server_features","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","changePlaceholder","nickname_placeholder","setVCard","$pres","Images","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","getLastOrder","deleteAccount","photo_hash","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","xml","isOnline","getPassword","isReconnecting","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","verifyXabberAccount","createFastConnection","token_invalidated","fast_conn_manager","disconnect","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onConnectionConflict","CONNECTED","onTokenRevoked","onAuthFailed","DISCONNECTED","flush","_main_interval_worker","terminate","connectXabberAccount","iq_private_storage","PRIVATE_STORAGE","requestPassword","api_jid","request_id","verifying_code","verifying_mess","idx_verifying_code","iq_send_auth_mark","msg_attrs","from_jid","is_archived","createMessageFromIQ","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","settings_right","account_password_view","old_password","change_password_connection","change_password_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","omemo_id","last_auth","ip_address","ip","x_tokens_list","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_fast_interval_worker","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","retractions_query","Builder","is_msg","b","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","deactivate","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","block_name","has_settings_right","settings_left","revokeXToken","token_num","revokeAllXTokens","show_settings","show_settings_after_delete","omemo","groups_settings","clearStorage","groupchat_settings","chat_settings","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","testGalleryFileSlot","onloadend","b64","gallery_feature","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","testFile","getStorageStats","uploadFile","formData","FormData","voice","processData","deleteFile","file_id","getOpenGraphData","site","ogp","image_height","image_width","video_url","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","models","getEnabledList","getConnectedList","onAdd","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","ns","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","showEditView","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","tabs","filterType","sorting","order_by","getAvatars","onTabClick","sortFiles","sort_type","onClickFile","prev_audio_message","file_url","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","load","assign","obj_per_page","current_rendered_type","renderFiles","total_objects","tab","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","deleteFilesFiltered","days","date","setDate","getDate","toISOString","date_lte","openStoragePanel","wheelPropagation","status_field","updateBlocks","updateGallery","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","gallery_view","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateXTokens","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateOmemoDevices","updateEnabledOmemo","updateEncryptedChatstates","dropdown_settings","store","showResources","resource_id","hideResources","renderAllXTokens","sortBy","pretty_token","findWhere","toJSON","is_omemo","$cur_token_html","current_token_item","$token_html","token_item","omemo_own_devices","omemo_device_id","updateTrustDevice","openFingerprint","is_own","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","own_devices","ik","fingerprint","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","openBlockWindow","block","blockContact","unblockSelected","blocklist","deselectBlocked","global_settings_item","onDragTo","onMoveAccount","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","current_items","current_file","addAvatar","img_from_gallery","createFileFromURL","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","stop","getUserMedia","stream","takePicture","clearPhoto","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","pickEmoji","change_password","is_login","getActionName","$old_password_input","$password_confirm_input","password_confirm","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","xmpp_login_panel","XmppLoginPanel","account_settings","acc_settings_left","Container","acc_settings_right","Accounts","ToolbarAccountsBlockView","SettingsAccountsBlockView","add_account_view","AddAccountView","onbeforeunload","login_screen","supports","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","GEOLOC","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","Worker","downtime","onLine","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","groups","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","b64_sha1","updateCachedInfo","is_deleted","out_request","status_text","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","resetParticipantsList","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","setActiveStateSendInterval","$msg","_sending_active_chatstate_timeout","_sending_active_chatstate_interval","handlePresence","$group_chat_info","updateGroupChatsList","details_view","group_chat_info","parseGroupInfo","prev_group_info","sync_deleted","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","receiver","XABBER_CHAT","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","cached_stanza_id","references","cached_message","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","created_at","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","concat","user_info","chat_content","is_scrolled","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details","name_field","resources_view","edit_groups_view","updateJingleButtons","updateSubscriptions","setButtonsWidth","widths","button","is_blocked","is_server","showQRCode","qrcode","noBorder","domElement","$label_outcoming","$label_incoming","prev","onChangedSubscription","openChat","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","changeNotifications","muteChat","addContact","requestAuthorization","contact_details_right","contact_edit_view","updateNotifications","updateChilds","updateIndicator","keydownHandler","hideEdit","isOpen","scrollToTopSmooth","animate","bottom_block_scroll","showEdit","muted_seconds","mute_type","unmuteChat","$search_form","changeList","list_name","scrollLeft","addList","_render","constructor_func","group_chat_details","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit","is_owner","change_group","editProperties","editDefaultRestrictions","leaveGroupChat","inviteUser","getInvitations","deleteGroup","group_chat_details_right","default_restrictions_edit_right","hideRestrictions","showRestrictions","clearHistory","head","edit_view","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","err_text","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","participant","temporary_items","all_messages_loaded","getMediaFromDecryptedMessages","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","block_height","updateForParticipant","delegateEvents","filter_type","fail","cached_messages","getMessages","entries","msg_items","filtered_items","items_count","filterEncryptedFiles","encryptedFilesHandler","files_count","updateEncryptedMedia","is_loaded","true_voice","media_item","is_encrypted","media_items_empty","messages_count","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","removeParticipantFromList","badge","is_me","pretty_present","present","isValid","group_member_item","prependTo","updateMemberAvatar","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateNickname","updateRightsView","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","resetParticipants","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","participant_info","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","args","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","add","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","cached_conversations_exclude","onSyncIQ","last_version_sync","syncCachedConversations","request_with_stamp","cached_conversations","syncConversation","conversation","parseXML","saved","conv","account_conversation_type","removeFromCachedConversations","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","current_chat_timestamp","retracted_msg_id_list","putInCachedConversations","last_message","updateEncryptedChat","updateMutedList","$jingle_message","getCallingAvailability","sendReject","initIncomingCall","sync_update","updateEmptyChat","is_unread","delay","messages_unread","isSenderMe","is_last_sync","sync_timestamp","sync_rsm_after","last_chat_msg_id","conversations_loaded","last_sync_timestamp","getAllFromCachedConversations","retract_version","sync_options","getRoster","request_ver","getAllFromRoster","roster_items","ver","new_roster_version","onRosterItem","is_version","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","hideTabs","selectUnblock","updateUnblockButton","unblockContactByJid","tab_name","hideEmptyContainers","tmp","contact_blocked_item","$domain_wrap","$desc","blocked_list","reg","blocked_contacts_desc","blocked_domains_desc","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","onPlaceholderUpdate","add_contact","group_data","updateGroups","renderGroupsForAccount","stepForward","silent","groups_checkbox_list_contact","checkJid","custom_notifications","message_preview","pinned","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clearDataBase","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","Boolean","_roster_settings","RosterSettings","roster_settings_view","RosterSettingsView","contacts_view","RosterLeftView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","destroyOnEcho","removeMessage","forwarded_message","getState","getVerboseState","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","is_unread_archived","participant_message","echo_msg","is_between_anchors","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","onChangedLastReadMsg","_no_scrolling_event","is_first","requestHistoryBetweenAnchors","read_count","message_item","_long_reading_timeout","scrollToUnread","recountUnread","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","receiveNoTextMessage","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","sendMarker","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","omemo_dfd","msg_options","$delivery_msg","msg_id","by","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","undelivered_messages","last_read_msg_id","second_deferred","new_last_read_msg","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","getConversationType","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","SYNCHRONIZATION_REGULAR_CHAT","message_counter","content_placeholder","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","italics","bottom","draft_message","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","click_counter","setDefaultPlaceholder","onChatRemoved","loading_history","history_loaded","first_msg_id","last_msg_id","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","timer","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","onChangedReadState","_is_scrolled_bottom","onChangedActiveStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMyInfo","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","readVisibleMessages","last_visible_unread_msg","readMessage","hideMessagesAfterSkipping","synced_message","$synced_message","last_visible_msg","$last_visible_msg","_read_last_message_timeout","showUnreadMarker","unread_marker","$last_read_msg","scrollToUnreadWithButton","showDayIndicator","is_focused","indicator_idx","opacity_value","$chatday_indicator","$messages","marker","indicator","scroll_read_timer","_onscroll_read_messages_timeout","mam_query","getMessageArchive","unread_history","removeAllMessagesExceptLast","_interval","is_saved","sendMAMRequest","func_conn","_delete_handler_timeout","send_counter","previous_history","_load_history_timeout","unread_history_first","first_unread_msg_stanza_id","unread_history_before","last_history","_wait_load_unread_history","last_archive_id","loadUnreadHistory","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","OGPLinkOnload","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","is_scrolling_needed","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","$prev_message","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","messages_to_save","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","current_time","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","main","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","day_date","msg_players","msg_videos","existing_player","message_id","video_id","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","_pending_time","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","oncancel","xhr_status","fakeStatus","slot_response","setRequestHeader","fakeResponse","response_text","error_status","statusText","files_","file_new_format","imgContent","video_attrs","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","is_missed_msg","onTouchMessage","fwd_link_references","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","chat_content_placeholder","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","on_format","classList","blotName","optimize","QuillEmoji","domNode","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","participant_version","msg_item","active_right_screen","participant_msg_item","$retracted_msg","retracted_msg_id","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","not_encrypted","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","force_bottom","current_scrolling","showGroupChats","group_chats_pinned","showChats","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","archive_chats","saved_chats","notificatons_chats","all_chats","all_chats_pinned","cid","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","addUser","itemIdx","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","hideChat","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetails","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","metadata","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","onloaded_sprites","all_sprites","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","checkContactFingerprints","is_contact_trusted","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","lastElementChild","lastChild","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","quill_textarea","quill_current_height","text_input_height","bottom_height","scrolled_to_bottom","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","arr_text","execCommand","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","encoderPath","encoderSampleRate","numberOfChannels","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","emoji_item","innerText","content_concat","getContents","content_attrs","insert","mention_idx","ins","quote_start_idx","quote_end_idx","markup_ref","start_length","delta","markup_reference","editMessage","failed_files","file_check_dfd","pluck","setText","msg_author","image_preview","$img_html_preview","fwd_images","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","putMessage","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","updateHeight","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","deleteTimedHandler","_get_msg_handler","addTimedHandler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","chat_body_placeholder","ChatBodyPlaceholderContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateLayout","updateContainersLayout","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","is_wide","is_narrow","toolbar_accounts_heigth","right_contact_panel_styles","right_contact_panel_saveable","wide","placeholders","path_acc_settings_left","ViewPath","path_acc_settings_right","path_acc_vcard_edit","path_chat_head","path_chat_body","path_chat_body_placeholder","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderOwnDevices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","devices_count","$container","f_count","generateFingerprint","fing","old_fingerprint","addRow","getBundleInfo","getBundle","pk","spk","getIdentityKeyPair","pubKey","padStart","trustDevice","is_session_initiated","ignoreDevice","trust","delete_button","edit_setting","fingerprint_item","deleteDevice","fingerprints_devices","renderTrustOnFingerprint","device_icons","fingerprint_devices_item","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","cacheRetractVersion","getRetractVersion","dev_id","rand","peer","encryptedMessage","encryptedElement","myKeys","rid","kex","EXPLICIT_MESSAGE_ENCRYPTION","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","cached_msg","getMessage","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","missing_keys","last_id","rec","device_attrs","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","Error","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","discovery","ui","g","webpackContext","webpackContextResolve","__webpack_require__","o","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}